{
  "collection": {
    "_": {
      "postman_id": "b352d0e3-0b85-4902-9488-9c68569a397d"
    },
    "item": [
      {
        "_": {
          "postman_id": "ab1dd306-e66e-4b0e-8b75-482ba924191d"
        },
        "id": "ab1dd306-e66e-4b0e-8b75-482ba924191d",
        "name": "Auth Tests",
        "item": [
          {
            "_": {
              "postman_id": "6774574f-3706-4c38-8714-717c34d2a7a2"
            },
            "id": "6774574f-3706-4c38-8714-717c34d2a7a2",
            "name": "/",
            "request": {
              "description": {
                "content": "Testiranje servera, testiramo da li je server dostupan.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  ""
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "395fed60-196f-4b73-8f94-6e8e64e78149",
                  "type": "text/javascript",
                  "exec": [
                    "\r",
                    "pm.test(`It should GET home API url`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.response.to.be.ok;\r",
                    "    //pm.expect(pm.response.responseTime).to.be.below(500);\r",
                    "    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/html; charset=utf-8');\r",
                    "});\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "b6b24ab1-fe90-461d-9d02-c069a15fd006"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "fffa2a2d-7a22-4166-b1db-05ebecbcdb55"
            },
            "id": "fffa2a2d-7a22-4166-b1db-05ebecbcdb55",
            "name": "/login",
            "request": {
              "description": {
                "content": "Testiranje prijavljivanja sa praznim requestom.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {}
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "262bf450-8e93-4344-8f24-659af109c1c7",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "let emailMessages = [];\r",
                    "let passwordMessages = [];\r",
                    "\r",
                    "response.errors.msg.forEach(item => {\r",
                    "    item.param === 'email' && emailMessages.push(item.msg);\r",
                    "    item.param === 'password' && passwordMessages.push(item.msg);\r",
                    "});\r",
                    "\r",
                    "pm.test(`It should NOT POST login if body is empty`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(emailMessages, `[ERROR] Some error message is missing`).to.include.members(['MISSING', 'IS_EMPTY', 'EMAIL_IS_NOT_VALID']);\r",
                    "    pm.expect(passwordMessages, `[ERROR] Some error message is missing`).to.include.members(['MISSING', 'IS_EMPTY', 'PASSWORD_TOO_SHORT_MIN_5']);\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "f81c1789-9f43-49fb-bc7c-0754676ad0f1"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "58d8645c-76ee-4368-9464-e98dce1080e2"
            },
            "id": "58d8645c-76ee-4368-9464-e98dce1080e2",
            "name": "/login",
            "request": {
              "description": {
                "content": "Testiranje prijavljivanja sa validnim podacima za prijavu.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"{{adminPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9ddfdf3b-5b58-44bb-9948-8e47df250b92",
                  "type": "text/javascript",
                  "exec": [
                    "let schema = {\r",
                    "    \"type\": \"object\",\r",
                    "    \"properties\": {\r",
                    "        \"token\": {\r",
                    "            \"type\": \"string\"\r",
                    "        },\r",
                    "        \"user\": {\r",
                    "            \"type\": \"object\",\r",
                    "            \"properties\": {\r",
                    "                \"_id\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                },\r",
                    "                \"name\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                },\r",
                    "                \"email\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                },\r",
                    "                \"role\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                },\r",
                    "                \"verified\": {\r",
                    "                    \"type\": \"boolean\"\r",
                    "                },\r",
                    "                \"verification\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                }\r",
                    "            },\r",
                    "            \"required\": [\r",
                    "                \"_id\",\r",
                    "                \"name\",\r",
                    "                \"email\",\r",
                    "                \"role\",\r",
                    "                \"verified\",\r",
                    "                \"verification\"\r",
                    "            ]\r",
                    "        }\r",
                    "    },\r",
                    "    \"required\": [\r",
                    "        \"token\",\r",
                    "        \"user\"\r",
                    "    ]\r",
                    "}\r",
                    "\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should GET token`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Schema is invalid`).to.have.jsonSchema(schema);\r",
                    "    pm.expect(response, `[ERROR] Response does not contain token and user properties`).to.have.all.keys('token', 'user');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('adminToken', response.token);"
                  ],
                  "_lastExecutionId": "fe6b7e47-5f3c-4e9e-b112-aae063514205"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c6a2ca6-75fa-4a10-be59-933deb2dbb52",
                  "type": "text/javascript",
                  "exec": [
                    "pm.environment.set('adminEmail', 'admin@admin.com');\r",
                    "pm.environment.set('adminPassword', '12345');"
                  ],
                  "_lastExecutionId": "47700dc3-b49e-4af9-a3f5-3223e86e88c2"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "2fa0f794-73a2-49f9-b7db-49833378cc34"
            },
            "id": "2fa0f794-73a2-49f9-b7db-49833378cc34",
            "name": "/register",
            "request": {
              "description": {
                "content": "Testiranje registracije sa validnim podacima.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "register"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{randomName}}\",\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"password\": \"{{randomPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e83159a3-d6da-40b8-8b9a-f2b35411eca0",
                  "type": "text/javascript",
                  "exec": [
                    "let randomUsername = pm.variables.replaceIn('{{$randomUserName}}');\r",
                    "let randomEmail = pm.variables.replaceIn('{{$randomEmail}}');\r",
                    "let randomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "pm.variables.set(\"randomName\", randomUsername);\r",
                    "pm.variables.set(\"randomEmail\", randomEmail);\r",
                    "pm.variables.set(\"randomPassword\", randomPassword);\r",
                    "\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "7c8cc6cd-ff52-4e45-8f89-14c99f94c8ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b346ada8-fd34-43a7-b863-e77858bbb345",
                  "type": "text/javascript",
                  "exec": [
                    "let schema = {\r",
                    "    \"type\": \"object\",\r",
                    "    \"properties\": {\r",
                    "        \"token\": {\r",
                    "            \"type\": \"string\"\r",
                    "        },\r",
                    "        \"user\": {\r",
                    "            \"type\": \"object\",\r",
                    "            \"properties\": {\r",
                    "                \"_id\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                },\r",
                    "                \"name\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                },\r",
                    "                \"email\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                },\r",
                    "                \"role\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                },\r",
                    "                \"verified\": {\r",
                    "                    \"type\": \"boolean\"\r",
                    "                },\r",
                    "                \"verification\": {\r",
                    "                    \"type\": \"string\"\r",
                    "                }\r",
                    "            },\r",
                    "            \"required\": [\r",
                    "                \"_id\",\r",
                    "                \"name\",\r",
                    "                \"email\",\r",
                    "                \"role\",\r",
                    "                \"verified\",\r",
                    "                \"verification\"\r",
                    "            ]\r",
                    "        }\r",
                    "    },\r",
                    "    \"required\": [\r",
                    "        \"token\",\r",
                    "        \"user\"\r",
                    "    ]\r",
                    "}\r",
                    "\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should POST register`, (() => {\r",
                    "    pm.response.to.have.status(201);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response.user.role, `[ERROR] The role is not correct`).to.be.equal('user');\r",
                    "    pm.expect(pm.variables.get('randomName'), `[ERROR] Username does not match`).to.be.equal(response.user.name);\r",
                    "    pm.expect(pm.variables.get('randomEmail').toLowerCase(), `[ERROR] Email does not match`).to.be.equal((response.user.email).toLowerCase());\r",
                    "    pm.expect(response, `[ERROR] Schema is invalid`).to.have.jsonSchema(schema);\r",
                    "}));\r",
                    "\r",
                    "pm.environment.set('userEmail', response.user.email);\r",
                    "pm.environment.set('userVerification', response.user.verification);\r",
                    "pm.environment.set('userToken', response.token);\r",
                    "pm.environment.set('userId', response.user._id);\r",
                    ""
                  ],
                  "_lastExecutionId": "7d9858a4-995d-44b4-9934-523a6f1576c1"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "f9e55168-0440-4e9e-bb13-3115d1cb726b"
            },
            "id": "f9e55168-0440-4e9e-bb13-3115d1cb726b",
            "name": "/register",
            "request": {
              "description": {
                "content": "Testiranje registracije sa postojecim emailom",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "register"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\" : \"{{randomName}}\",\r\n    \"email\": \"{{existingEmail}}\",\r\n    \"password\": \"{{randomPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebeaf176-24a9-41a7-bc6e-b4675efe23a5",
                  "type": "text/javascript",
                  "exec": [
                    "let randomUsername = pm.variables.replaceIn('{{$randomUserName}}');\r",
                    "let randomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "pm.variables.set(\"randomName\", randomUsername);\r",
                    "pm.variables.set(\"existingEmail\", '{{userEmail}}');\r",
                    "pm.variables.set(\"randomPassword\", randomPassword);\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "9656f05c-ceed-4f80-9ee8-413a2335312d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4cd28a9-85f5-46ee-a852-0e5de2f5f726",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should NOT POST a register if email already exists`, () => {\r",
                    "\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'errors' property`).to.have.property('errors');\r",
                    "    pm.expect(response.errors.msg, `[ERROR] Incorect message!`).to.be.equal('EMAIL_ALREADY_EXISTS');\r",
                    "});"
                  ],
                  "_lastExecutionId": "ed7f299d-ff8c-4173-809f-99f351087c9a"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "da2fdbe6-0f9f-45f4-bc42-772c72248832"
            },
            "id": "da2fdbe6-0f9f-45f4-bc42-772c72248832",
            "name": "/verify",
            "request": {
              "url": {
                "path": [
                  "verify"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\": \"{{userVerification}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1ee26246-4e80-4d27-a60e-44a5ed7bc2d0",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should POST verify`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain email and verified properties`).to.have.all.keys(['email', 'verified']);\r",
                    "    pm.expect(response.verified, `[ERROR] 'verified' is false`).to.be.true;\r",
                    "});"
                  ],
                  "_lastExecutionId": "733ccdfb-437e-41bf-8398-31d49d1af52f"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "a7f0626c-5d81-4e7c-b111-55af365e2168"
            },
            "id": "a7f0626c-5d81-4e7c-b111-55af365e2168",
            "name": "/verify",
            "request": {
              "description": {
                "content": "Verifikacija vec verifikovanog korisnika.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "verify"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\": \"{{userVerification}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5c9e5b25-b8ff-4371-9016-cc5acc8cc7aa",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT POST verify if user is already verified`, () => {\r",
                    "    pm.response.to.have.status(404);\r",
                    "    pm.expect(response.errors.msg, `[ERROR] Message is not corect'`).to.be.equal('NOT_FOUND_OR_ALREADY_VERIFIED');\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "d1eec7b4-2961-4698-952f-b60b7b24de65"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "0e57c293-133a-4366-b877-63d16f5ec840"
            },
            "id": "0e57c293-133a-4366-b877-63d16f5ec840",
            "name": "/forgot",
            "request": {
              "description": {
                "content": "Testiranje sa validnim email-om. Dobija se verification koji bi se koristio za /reset API poziv",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "forgot"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{userEmail}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a3d27b26-f5f0-4c49-ae7b-45e8f803da5e",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should POST forgot`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'msg' property is missing`).to.haveOwnProperty('msg');\r",
                    "    pm.expect(response, `[ERROR] 'verification' property is missing`).to.have.property('verification');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('userVerification', response.verification);"
                  ],
                  "_lastExecutionId": "09390cdf-615b-4c85-8a92-09c4e5d2d460"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "95e34733-ee2b-4b27-8ba0-fe6d39b482fa"
            },
            "id": "95e34733-ee2b-4b27-8ba0-fe6d39b482fa",
            "name": "/reset",
            "request": {
              "description": {
                "content": "Resetovanje sa validnim passwordom i id-em. ",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "reset"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\": \"{{userVerification}}\",\r\n    \"password\": \"{{newRandomPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f0cf587-cc48-4277-aa7b-0e2b443d6ff5",
                  "type": "text/javascript",
                  "exec": [
                    "let newPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "pm.variables.set('newRandomPassword', newPassword);"
                  ],
                  "_lastExecutionId": "b7168e0b-4fa0-4c56-8db9-b3ca0e42f5a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2d6c2a7-89de-47ee-8c52-f3d3ff21e32c",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should POST reset`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'msg' propery is missing (or has no required value)`).to.haveOwnProperty('msg').to.be.equal('PASSWORD_CHANGED');\r",
                    "});"
                  ],
                  "_lastExecutionId": "eece7457-cf76-40fb-b9b5-d002ecff4204"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "99543dbd-6513-400e-b1c1-08c0ad45372e"
            },
            "id": "99543dbd-6513-400e-b1c1-08c0ad45372e",
            "name": "/token",
            "request": {
              "description": {
                "content": "Osvezavanje tokena ukoliko se ne salje stari token.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "token"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d9efeda4-2f66-4e7a-b317-777a3289f317",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(`it should NOT be able to consume the route since no token was sent`, () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "    pm.response.to.be.unauthorized;\r",
                    "});"
                  ],
                  "_lastExecutionId": "0db40569-2328-4d2d-92cb-66b1572a715f"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "053fab6e-d5b6-4d28-85a3-617b8a5d93ef"
            },
            "id": "053fab6e-d5b6-4d28-85a3-617b8a5d93ef",
            "name": "/token",
            "request": {
              "description": {
                "content": "Uspesno ozvezavanje tokena.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "token"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b02312b2-900b-4d67-aee3-693be50b40ac",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should GET a fresh token`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain token`).to.haveOwnProperty('token');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('userToken', response.token);"
                  ],
                  "_lastExecutionId": "b18cae06-5320-446a-ade2-594acd9896d7"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "8587e858-634e-4829-ba0f-bfeba7aa6ef1"
            },
            "id": "8587e858-634e-4829-ba0f-bfeba7aa6ef1",
            "name": "/users/{{id}}",
            "request": {
              "description": {
                "content": "Brisanje korisnika. Salje se admin token.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68f82da8-861b-4e41-a44f-fda23d16db5e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', pm.environment.get(\"userId\"));\r",
                    ""
                  ],
                  "_lastExecutionId": "97a9d251-be4c-492c-8d00-eb8a11cc9790"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "097a83c3-6df8-4798-bd5c-174782f9aa78",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should DELETE a user given the id`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'msg' property (or corect message) is missing`).to.haveOwnProperty('msg').to.be.equal('DELETED');\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "cdda6e48-a913-4229-a8ac-19e1af363e83"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "_": {
          "postman_id": "b57d2954-a89b-4dc9-a86a-2b2d898d0386"
        },
        "id": "b57d2954-a89b-4dc9-a86a-2b2d898d0386",
        "name": "City Tests",
        "item": [
          {
            "_": {
              "postman_id": "ec080753-0e9a-4c04-b92b-7deb197d2954"
            },
            "id": "ec080753-0e9a-4c04-b92b-7deb197d2954",
            "name": "/login",
            "request": {
              "description": {
                "content": "Prijavljivanje kao administrator i cuvanje tokena za naredne api pozive.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"{{adminPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22709736-faa5-4624-806a-cc1bb98a399b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.environment.set('adminEmail', 'admin@admin.com');\r",
                    "pm.environment.set('adminPassword', '12345');"
                  ],
                  "_lastExecutionId": "caf7a750-329f-413b-a4bc-a4f3d4de1ad6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ba70e02-1f00-4298-aae1-ce5160905905",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should GET token (CITY)`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain token`).to.have.property('token');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('adminToken', response.token);"
                  ],
                  "_lastExecutionId": "34b4edd8-7a53-480d-bb3d-a1ea5e6d8c94"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "ca94cf9a-359c-4b74-9d6f-b3afd8ef3c94"
            },
            "id": "ca94cf9a-359c-4b74-9d6f-b3afd8ef3c94",
            "name": "/cities",
            "request": {
              "description": {
                "content": "Neuspesno citanje gradova (bez admin tokena).",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a6507901-7503-4841-a166-941fb3d10bb2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(`it should NOT be able to consume the route since no token was sent`, () => {\r",
                    "    pm.expect(pm.response.code, `[ERROR] Response don't have status 401`).to.equal(401);\r",
                    "    pm.response.to.be.unauthorized;\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "68ef93d0-c666-4747-ad9d-05a869244823"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "5f046aa3-2897-43db-9975-f7a5d010fdad"
            },
            "id": "5f046aa3-2897-43db-9975-f7a5d010fdad",
            "name": "/cities",
            "request": {
              "description": {
                "content": "Citanje kolekcije gradova.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "934416b1-8d99-4a8f-91c0-191457078a84",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should GET all the cities`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "});"
                  ],
                  "_lastExecutionId": "d8cd1f6d-6c15-4101-af14-b9744ec2d0ec"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "9782fcd1-510b-4dce-9d96-c395a26ce38d"
            },
            "id": "9782fcd1-510b-4dce-9d96-c395a26ce38d",
            "name": "/cities?filter=Bucaramanga&fields=name",
            "request": {
              "description": {
                "content": "Filtriranje gradova",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "key": "filter",
                    "value": "Bucaramanga"
                  },
                  {
                    "key": "fields",
                    "value": "name"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c3859f5d-1d17-445a-8806-b27d156d334d",
                  "type": "text/javascript",
                  "exec": [
                    "let schema = {\r",
                    "    \"type\": \"object\",\r",
                    "    \"properties\": {\r",
                    "        \"docs\": {\r",
                    "            \"type\": \"array\",\r",
                    "            \"items\": [\r",
                    "                {\r",
                    "                    \"type\": \"object\",\r",
                    "                    \"properties\": {\r",
                    "                        \"_id\": {\r",
                    "                            \"type\": \"string\"\r",
                    "                        },\r",
                    "                        \"name\": {\r",
                    "                            \"type\": \"string\"\r",
                    "                        },\r",
                    "                        \"createdAt\": {\r",
                    "                            \"type\": \"string\"\r",
                    "                        },\r",
                    "                        \"updatedAt\": {\r",
                    "                            \"type\": \"string\"\r",
                    "                        }\r",
                    "                    },\r",
                    "                    \"required\": [\r",
                    "                        \"_id\",\r",
                    "                        \"name\",\r",
                    "                        \"createdAt\",\r",
                    "                        \"updatedAt\"\r",
                    "                    ]\r",
                    "                }\r",
                    "            ]\r",
                    "        },\r",
                    "        \"totalDocs\": {\r",
                    "            \"type\": \"integer\"\r",
                    "        },\r",
                    "        \"limit\": {\r",
                    "            \"type\": \"integer\"\r",
                    "        },\r",
                    "        \"totalPages\": {\r",
                    "            \"type\": \"integer\"\r",
                    "        },\r",
                    "        \"page\": {\r",
                    "            \"type\": \"integer\"\r",
                    "        },\r",
                    "        \"pagingCounter\": {\r",
                    "            \"type\": \"integer\"\r",
                    "        },\r",
                    "        \"hasPrevPage\": {\r",
                    "            \"type\": \"boolean\"\r",
                    "        },\r",
                    "        \"hasNextPage\": {\r",
                    "            \"type\": \"boolean\"\r",
                    "        },\r",
                    "        \"prevPage\": {\r",
                    "            \"type\": \"null\"\r",
                    "        },\r",
                    "        \"nextPage\": {\r",
                    "            \"type\": \"null\"\r",
                    "        }\r",
                    "    },\r",
                    "    \"required\": [\r",
                    "        \"docs\",\r",
                    "        \"totalDocs\",\r",
                    "        \"limit\",\r",
                    "        \"totalPages\",\r",
                    "        \"page\",\r",
                    "        \"pagingCounter\",\r",
                    "        \"hasPrevPage\",\r",
                    "        \"hasNextPage\",\r",
                    "        \"prevPage\",\r",
                    "        \"nextPage\"\r",
                    "    ]\r",
                    "}\r",
                    "\r",
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should GET the cities with filters`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Schema is invalid`).to.have.jsonSchema(schema);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response).to.haveOwnProperty('docs').to.be.an('array');\r",
                    "    pm.expect(response.docs[0].name, `[ERROR] City 'name' is not correct`).to.be.equal('Bucaramanga');\r",
                    "});\r",
                    "\r",
                    "pm.test(`Response time is less than 200ms`,  () => {\r",
                    "    pm.expect(pm.response.responseTime).to.be.below(200);\r",
                    "});"
                  ],
                  "_lastExecutionId": "55fa12a2-ea11-4ff1-be7f-1eec813b7fe3"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "1fc0a15b-789a-4627-9b4f-a12e3643d1fd"
            },
            "id": "1fc0a15b-789a-4627-9b4f-a12e3643d1fd",
            "name": "/cities",
            "request": {
              "description": {
                "content": "Kreiranje grada kada se ne salje naziv grada.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "072ea1e6-d56a-435f-971e-28d949022da2",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT POST a city without name`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not have 'errors' property`).to.haveOwnProperty('errors');\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "28021033-c9ca-44c1-a293-b1f5c6db523e"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "24e36400-146f-41fc-b327-68f4003cc34d"
            },
            "id": "24e36400-146f-41fc-b327-68f4003cc34d",
            "name": "/cities",
            "request": {
              "description": {
                "content": "Kreiranje grada.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{randomCityName}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06ec49a3-6d2b-49e6-9f88-2af53ac36090",
                  "type": "text/javascript",
                  "exec": [
                    "let randomCityName = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "\r",
                    "pm.variables.set('randomCityName', randomCityName);"
                  ],
                  "_lastExecutionId": "ecea5dc1-1a89-4e00-9325-9e4e44b5b287"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71bcff7b-f9dd-4823-81dc-e41e29cb5b12",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should POST a city`, () => {\r",
                    "    pm.response.to.have.status(201);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'name' property is missing`).to.haveOwnProperty('name');\r",
                    "    pm.expect(response, `[ERROR] '_id' property is missing`).to.have.property('_id');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('cityId', response._id);\r",
                    "pm.environment.set('cityName', response.name);"
                  ],
                  "_lastExecutionId": "5f57e50b-fa9a-4cca-b2f8-e98d9d0874b3"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "5e78d723-5922-479e-aad6-82aa6a57fd69"
            },
            "id": "5e78d723-5922-479e-aad6-82aa6a57fd69",
            "name": "/cities",
            "request": {
              "description": {
                "content": "Kreiranje grada sa vec postojecim imenom.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{cityName}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e449178d-f578-481c-9e6f-ebc92f0cfc85",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT POST a city that already exists`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.have.property('errors');\r",
                    "    pm.expect(response.errors.msg, `[ERROR] Message is incorrect!`).to.be.equal('CITY_ALREADY_EXISTS');\r",
                    "});"
                  ],
                  "_lastExecutionId": "d1d43002-c291-412d-8263-79a2b2c86f12"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "4772ceb8-c60e-4271-838d-b8cc652bc365"
            },
            "id": "4772ceb8-c60e-4271-838d-b8cc652bc365",
            "name": "/cities/{{id}}",
            "request": {
              "description": {
                "content": "Citanje grada.\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07470ecd-e50e-4712-8d86-6aca305276bb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', pm.environment.get(\"cityId\"));\r",
                    ""
                  ],
                  "_lastExecutionId": "eae7fd14-c75b-4ea1-937f-889261bfbf55"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "796f3e50-2474-46e7-8009-ce7fb888de5e",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT POST a city that already exists`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'name' property is missing`).to.have.property('name');\r",
                    "    pm.expect(response, `[ERROR] '_id' property is missing/or incorrect`).to.have.property('_id');\r",
                    "    pm.expect(pm.variables.get('id'), `[ERROR] 'ID' does not match`).to.be.equal(response._id);\r",
                    "});"
                  ],
                  "_lastExecutionId": "557a9c70-69f5-4945-b567-7886260f26ee"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "6a23a6e6-ede9-4ced-9747-d71a1a96eb35"
            },
            "id": "6a23a6e6-ede9-4ced-9747-d71a1a96eb35",
            "name": "/cities/{{id}}",
            "request": {
              "description": {
                "content": "Azuriranje grada.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\" : \"{{newRandomCityName}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbf8a4d3-148a-4870-b2b3-039003d9b4f4",
                  "type": "text/javascript",
                  "exec": [
                    "let newRandomCityName = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "\r",
                    "pm.variables.set('newRandomCityName', newRandomCityName);\r",
                    "\r",
                    "pm.variables.set('id', pm.environment.get(\"cityId\"));"
                  ],
                  "_lastExecutionId": "d877a048-5a41-47bc-8efd-e056e2344f89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6536abfc-7cc2-4d00-b881-f7a522d81532",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should UPDATE a city given the id`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "\r",
                    "    pm.expect(response, `[ERROR] '_id' property is missing/or incorrect`).to.have.property('_id');\r",
                    "    pm.expect(pm.variables.get('id'), `[ERROR] 'ID' does not match`).to.be.equal(response._id);\r",
                    "\r",
                    "    pm.expect(response, `[ERROR] 'name' property is missing/or incorrect`).to.have.property('name');\r",
                    "    pm.expect(pm.variables.get('newRandomCityName'), `[ERROR] 'name' does not match`).to.be.equal(response.name);\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('cityName', response.name);"
                  ],
                  "_lastExecutionId": "836f22bb-f8cd-4148-870c-967843e893fd"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "3082d779-4d7d-4669-8fc6-3417a53c57ae"
            },
            "id": "3082d779-4d7d-4669-8fc6-3417a53c57ae",
            "name": "/cities/{{id}}",
            "request": {
              "description": {
                "content": "Brisanje grada.\r\n                ",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d678cab-1f74-4ac3-868c-ac46d4adc574",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', pm.environment.get(\"cityId\"));\r",
                    ""
                  ],
                  "_lastExecutionId": "8de59562-1d97-4237-b3ed-cf423bc8a212"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "667a1b16-ca29-45f5-95aa-c576c16aa098",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should DELETE a city given the id`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'msg' property is missing`).to.have.property('msg');\r",
                    "    pm.expect(response.msg, `[ERROR] Message is incorrect!`).to.be.equal('DELETED');\r",
                    "});"
                  ],
                  "_lastExecutionId": "df612aa2-db24-4e32-bdd1-8cf41a69b14f"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "941218d0-dadf-4759-86de-bb190cedde45"
            },
            "id": "941218d0-dadf-4759-86de-bb190cedde45",
            "name": "/cities?sort=name&order=1",
            "request": {
              "description": {
                "content": "Sortiranje gradova.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "key": "sort",
                    "value": "name"
                  },
                  {
                    "key": "order",
                    "value": "1"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e7bd2b5f-9d21-4fe9-b0f3-714cf08cf1ad",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "let names = [];\r",
                    "response.docs.forEach(item => names.push(item.name));\r",
                    "\r",
                    "let sortedNames = [...names].sort();\r",
                    "\r",
                    "pm.test(`Cities should be sorted by name`, () => {\r",
                    "    pm.expect(sortedNames, `[ERROR] Cities are not properly sorted`).to.eql(names);\r",
                    "});"
                  ],
                  "_lastExecutionId": "f0d64387-5fb8-4a61-9bab-ed009699a9dc"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "e45d86ce-fc72-43a7-977a-46abf02bb8e4"
            },
            "id": "e45d86ce-fc72-43a7-977a-46abf02bb8e4",
            "name": "/cities?limit=3 ",
            "request": {
              "description": {
                "content": "Prikaz 3 grada",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "cities"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "key": "limit",
                    "value": "{{limit}}"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "205efc13-0734-4422-8244-377882ddbfb5",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "let getlimit = () => {\r",
                    "    let str = JSON.stringify(pm.request.url.query);\r",
                    "    let obj = JSON.parse(str);\r",
                    "    return obj[0].value;\r",
                    "}\r",
                    "\r",
                    "pm.test(`Only three are displayed`, () => {\r",
                    "    pm.expect((response.docs).length, `[ERROR] The number of displayed users is incorrect`) ==(getlimit());\r",
                    "});"
                  ],
                  "_lastExecutionId": "0ce8b31f-5adf-4619-a807-8e5d87e7e6cd"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3a18638-0a91-4e33-a090-04f7f4b83060",
                  "type": "text/javascript",
                  "exec": [
                    "let limit = 2;\r",
                    "pm.variables.set('limit', limit);"
                  ],
                  "_lastExecutionId": "0c256ebe-5291-4beb-a2c6-c05de02e45de"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "_": {
          "postman_id": "e12edef6-3c3d-41f3-b16a-6278577027c0"
        },
        "id": "e12edef6-3c3d-41f3-b16a-6278577027c0",
        "name": "Profile Test",
        "item": [
          {
            "_": {
              "postman_id": "ce5a64d1-74f0-45d4-b78f-de744da3d154"
            },
            "id": "ce5a64d1-74f0-45d4-b78f-de744da3d154",
            "name": "/register",
            "request": {
              "description": {
                "content": "Kreiranje korisnika koji ce se dalje koristiti u profile testovima.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "register"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{randomName}}\",\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"password\": \"{{randomPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97a00356-77e2-4738-81ab-80ff85d14f00",
                  "type": "text/javascript",
                  "exec": [
                    "let randomUsername = pm.variables.replaceIn('{{$randomUserName}}');\r",
                    "let randomEmail = pm.variables.replaceIn('{{$randomEmail}}');\r",
                    "let randomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "pm.variables.set(\"randomName\", randomUsername);\r",
                    "pm.variables.set(\"randomEmail\", randomEmail);\r",
                    "pm.variables.set(\"randomPassword\", randomPassword);\r",
                    "\r",
                    "pm.environment.set(\"userPassword\", randomPassword)\r",
                    ""
                  ],
                  "_lastExecutionId": "3704a928-afd8-4e7b-9c48-59ea3f0d433e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46a7f4da-d108-4c26-8b71-8e1400fc6ecd",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should POST user`, () => {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('userEmail', response.user.email);\r",
                    "pm.environment.set('userId', response.user._id); "
                  ],
                  "_lastExecutionId": "13308654-2872-44ce-9134-04420fbf9e7a"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "560f6cff-25d5-4889-add6-f86439877dac"
            },
            "id": "560f6cff-25d5-4889-add6-f86439877dac",
            "name": "/login",
            "request": {
              "description": {
                "content": "Testiranje prijavljivanja sa validnim podacima za prijavu.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}\r\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "acceae89-143f-4f33-af69-81d2254b9c5c",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should GET token (PROFILE)`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain token`).to.have.property('token');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('userToken', response.token);"
                  ],
                  "_lastExecutionId": "9d4e8d90-0f03-40cd-8af6-c107ad23a941"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "30e82351-8def-475c-bc19-77dbce1bdb96"
            },
            "id": "30e82351-8def-475c-bc19-77dbce1bdb96",
            "name": "/profile",
            "request": {
              "description": {
                "content": "Pokusaj citanja podataka za ulogovanog korisnika ukoliko se token ne salje kao deo requesta.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "profile"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "80fa2abf-ae48-40a2-aae3-234333266661",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(`it should NOT be able to consume the route since no token was sent`, () => {\r",
                    "    pm.response.to.be.unauthorized;\r",
                    "    pm.response.to.have.status(401);\r",
                    "});"
                  ],
                  "_lastExecutionId": "fe0dc6a0-5374-4423-b148-4d68b3a40b88"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "2066afa6-4df7-4dbd-8635-d4cccee10ce1"
            },
            "id": "2066afa6-4df7-4dbd-8635-d4cccee10ce1",
            "name": "/profile",
            "request": {
              "description": {
                "content": "Citanje podataka za ulogovanog korisnika.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "profile"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5d218c9c-a603-4e00-8d2e-e68ea6aa7220",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should GET profile`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.response.to.be.ok;\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain email`).to.have.property('email');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain name`).to.have.property('name');\r",
                    "});"
                  ],
                  "_lastExecutionId": "cad1d390-0717-45ca-bb04-1d1655ed67ea"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "fd2f8a3c-90c8-4702-836d-c557888cde0f"
            },
            "id": "fd2f8a3c-90c8-4702-836d-c557888cde0f",
            "name": "/profile",
            "request": {
              "description": {
                "content": "Email i name se salju prazni.\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "profile"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{emptyName}}\",\r\n    \"name\": \"{{emptyEmail}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a8cab60-4043-458c-8a97-aa1ef66b42b7",
                  "type": "text/javascript",
                  "exec": [
                    "let name = \"\";\r",
                    "let email = \"\";\r",
                    "\r",
                    "pm.variables.set('emptyName', name);\r",
                    "pm.variables.set('emptyEmail', email);\r",
                    ""
                  ],
                  "_lastExecutionId": "7ad7e62a-b238-426d-b86c-5123b58f2cad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9bd7849-2925-4573-84e5-2f6640e4ef02",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT UPDATE profile empty name/email`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'errors'`).to.have.property('errors');\r",
                    "});"
                  ],
                  "_lastExecutionId": "35f472bf-baf3-46eb-a10c-106efa9d272b"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "902c15e8-93f4-44e6-a9fd-7fef7a79df48"
            },
            "id": "902c15e8-93f4-44e6-a9fd-7fef7a79df48",
            "name": "/profile",
            "request": {
              "description": {
                "content": "Testiranje api poziva u kom se salje token. \r\nuser = {\r\n name: 'Test123456',\r\n urlTwitter: 'https://hello.com',\r\n urlGitHub: 'https://hello.io',\r\n phone: '123123123',\r\n city: 'Bucaramanga',\r\n country: 'Colombia'\r\n }\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "profile"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"urlTwitter\": \"{{twitter}}\",\r\n    \"urlGitHub\": \"{{git}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9d1a9dcc-156a-4d57-a0b5-b563cbe3b97f",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "let testUser = JSON.parse(pm.environment.get(\"testUser\"));\r",
                    "\r",
                    "pm.test(`it should UPDATE profile`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "\r",
                    "    pm.expect(response.name).to.be.equal(testUser.name);\r",
                    "    pm.expect(response.urlTwitter) == testUser.urlTwitter;\r",
                    "    pm.expect(response.urlGitHub).to.be.eql(testUser.urlGitHub);\r",
                    "    pm.expect(response.phone) === testUser.phone;\r",
                    "    pm.expect(response.city).to.be.deep.equal(testUser.city);\r",
                    "    pm.expect(response.country).to.equal(testUser.country);\r",
                    "\r",
                    "    pm.expect(response,`[ERROR] Response does not contain a data request`).to.deep.include(testUser);\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "dfaf784a-c8e6-43cd-9af6-c765a10d700b"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "00769706-cdde-47d4-b340-6b1796af11a8",
                  "type": "text/javascript",
                  "exec": [
                    "let testUser = {\r",
                    "    name: 'Test123456',\r",
                    "    urlTwitter: 'https://hello.com',\r",
                    "    urlGitHub: 'https://hello.io',\r",
                    "    phone: '123123123',\r",
                    "    city: 'Bucaramanga',\r",
                    "    //country: 'Colombia'\r",
                    "    country: 'Trupale'\r",
                    "}\r",
                    "\r",
                    "pm.variables.set(\"name\", testUser.name);\r",
                    "pm.variables.set(\"twitter\", testUser.urlTwitter);\r",
                    "pm.variables.set(\"git\", testUser.urlGitHub);\r",
                    "pm.variables.set(\"phone\", testUser.phone);\r",
                    "pm.variables.set(\"city\", testUser.city);\r",
                    "pm.variables.set(\"country\", testUser.country);\r",
                    "\r",
                    "pm.environment.set(\"testUser\", JSON.stringify(testUser));\r",
                    "\r",
                    "// u slucaju promene podataka za testiranje, izmene se vrse samo na ovom mestu (u 'testUser' objektu)\r",
                    ""
                  ],
                  "_lastExecutionId": "67bb151f-ca90-413f-aedd-10c31513f782"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "7dd3ae48-ab50-4c15-9c7f-19e973d41819"
            },
            "id": "7dd3ae48-ab50-4c15-9c7f-19e973d41819",
            "name": "/profile",
            "request": {
              "description": {
                "content": "Salju se nevalidni linkovi kao na primer:\r\nuser = {\r\nname: 'Test123456',\r\nurlTwitter: 'invalidUrl',\r\nurlGitHub: 'alsoInvalid',\r\nphone: '123123123',\r\ncity: 'Bucaramanga',\r\ncountry: 'Colombia'\r\n      }\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "profile"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"urlTwitter\": \"{{twitter}}\",\r\n    \"urlGitHub\": \"{{git}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "acca01ee-2cd8-4c03-971e-97af548d22c0",
                  "type": "text/javascript",
                  "exec": [
                    "let testUser = {\r",
                    "    name: 'Test123456',\r",
                    "    urlTwitter: 'invalidUrl',\r",
                    "    urlGitHub: 'invalidUrl',\r",
                    "    phone: '123123123',\r",
                    "    city: 'Bucaramanga',\r",
                    "    country: 'Colombia'\r",
                    "}\r",
                    "\r",
                    "pm.variables.set(\"name\", testUser.name);\r",
                    "pm.variables.set(\"twitter\", testUser.urlTwitter);\r",
                    "pm.variables.set(\"git\", testUser.urlGitHub);\r",
                    "pm.variables.set(\"phone\", testUser.phone);\r",
                    "pm.variables.set(\"city\", testUser.city);\r",
                    "pm.variables.set(\"country\", testUser.country);\r",
                    "\r",
                    "// u slucaju promene podataka za testiranje, izmene se vrse samo na ovom mestu (u 'testUser' objektu)\r",
                    ""
                  ],
                  "_lastExecutionId": "a9ac7cd5-2906-4967-bd81-f08c53ffd79d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3182b907-03b9-43be-ad0a-27e5730c29a4",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "let messages = [];\r",
                    "response.errors.msg.forEach(item => item.msg)\r",
                    "\r",
                    "pm.test(`it should UPDATE profile`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'errors'`).to.have.property('errors');\r",
                    "    messages.forEach(item => pm.expect(item, `[ERROR] Invalid error message`).to.be.equal('NOT_A_VALID_URL'));\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "99eeb253-4ca5-4e17-adc9-26c14002d4b5"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "a6b3d9e8-986a-4066-b4fc-7012f8e2d361"
            },
            "id": "a6b3d9e8-986a-4066-b4fc-7012f8e2d361",
            "name": "/profile/changePassword",
            "request": {
              "description": {
                "content": "Testiranje api poziva u kom se salje token.\r\nKao oldPassword salje se nevazeci password.\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "profile",
                  "changePassword"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"oldPassword\": \"{{newRandomPassword}}{{newRandomPassword}}\",\r\n    \"newPassword\": \"{{newRandomPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abc2accd-3af6-4638-b5ae-69e6e02e01ee",
                  "type": "text/javascript",
                  "exec": [
                    "let newRandomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "pm.variables.set('newRandomPassword', newRandomPassword);"
                  ],
                  "_lastExecutionId": "83c4d930-294f-4919-9289-b3e3ae5f7c85"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92e8c692-95de-4d31-a216-3716bf4c3369",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`It should NOT change password`, () => {\r",
                    "    pm.response.to.have.status(409);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'errors'`).to.have.property('errors');\r",
                    "    pm.expect(response.errors.msg, `[ERROR] Incorrect message!`).to.be.equal('WRONG_PASSWORD');\r",
                    "});"
                  ],
                  "_lastExecutionId": "70c1f6c9-d15c-4fc9-beeb-a44782dcf9f2"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "7e087c13-84e4-45c5-aa9c-b6cbb88713ff"
            },
            "id": "7e087c13-84e4-45c5-aa9c-b6cbb88713ff",
            "name": "/profile/changePassword",
            "request": {
              "description": {
                "content": "Testiranje api poziva u kom se salje token. \r\nNovi password treba da ima manje od 5 karaktera.\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "profile",
                  "changePassword"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"oldPassword\": \"{{userPassword}}\",\r\n    \"newPassword\": \"{{newShortPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52d506af-2a04-4653-ba5c-be8bbccf184c",
                  "type": "text/javascript",
                  "exec": [
                    "let newRandomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "let newShortPassword = newRandomPassword.slice(-4);\r",
                    "\r",
                    "pm.variables.set('newShortPassword', newShortPassword);"
                  ],
                  "_lastExecutionId": "156cd7e8-2e29-4ffe-9edb-5a4ea2745586"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddda66b4-0df9-4aec-aaa0-71eb990b0f98",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "let messages = ['test error message'];\r",
                    "response.errors.msg.forEach(item =>\r",
                    "    item.param == 'newPassword' && messages.push(item.msg));\r",
                    "\r",
                    "pm.test(`it should NOT change a too short password`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'errors'`).to.have.property('errors');\r",
                    "    pm.expect(messages, `[ERROR] Correct error message is missing`).to.be.an('array').that.includes(\"PASSWORD_TOO_SHORT_MIN_5\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "d8a14ec5-4b72-4f69-a193-66eef1bb4315"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "dadf93e9-db4b-4f9c-890d-27d14730a93c"
            },
            "id": "dadf93e9-db4b-4f9c-890d-27d14730a93c",
            "name": "/profile/changePassword",
            "request": {
              "description": {
                "content": "Testiranje api poziva u kom se salje token. Salju se validne lozinke.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "profile",
                  "changePassword"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"oldPassword\": \"{{userPassword}}\",\r\n    \"newPassword\": \"{{newRandomPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb3c43ba-bebd-4b73-88a3-2699fc31814a",
                  "type": "text/javascript",
                  "exec": [
                    "let newRandomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "\r",
                    "pm.variables.set('newRandomPassword', newRandomPassword);\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "b0b31bda-1f12-459e-8471-eeb75d00ef87"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b25f5254-3d03-43e1-a05f-f6f36f9d5a1a",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should change password`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'msg ['PASSWORD_CHANGED']'`).to.have.property('msg').that.be.equal('PASSWORD_CHANGED');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('userPassword', pm.variables.get('newRandomPassword'));\r",
                    ""
                  ],
                  "_lastExecutionId": "ae617b15-5674-4706-a5ab-b19f65719b03"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "5f87930d-b696-478a-a958-e83aba45abbd"
            },
            "id": "5f87930d-b696-478a-a958-e83aba45abbd",
            "name": "/users/{{id}}",
            "request": {
              "description": {
                "content": "Brisanj kreiranog usera za potrebe ove grupe tstova.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ce3f2aa-e00c-4f0d-8227-6fa296494055",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', '{{userId}}');"
                  ],
                  "_lastExecutionId": "9aa309b7-b908-4820-ae2f-7169e90e2177"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "58f863af-92a3-42d1-9e3f-0badec44804c",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should DELETE a user given the id`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'msg ['PASSWORD_CHANGED']'`).to.have.property('msg').that.be.equal('DELETED');\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "d20e7550-b333-4612-bd94-44c2eb750ec3"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      },
      {
        "_": {
          "postman_id": "b335b0c1-4b83-41ff-a63e-51f6a17a34df"
        },
        "id": "b335b0c1-4b83-41ff-a63e-51f6a17a34df",
        "name": "User Test",
        "item": [
          {
            "_": {
              "postman_id": "9f1a75f5-f5d7-4f64-a384-692bd354a858"
            },
            "id": "9f1a75f5-f5d7-4f64-a384-692bd354a858",
            "name": "/login",
            "request": {
              "description": {
                "content": "Logujemo admina i cuvamo njegov token.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"{{adminPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0363b29-5b9f-4505-b587-f144f8cda814",
                  "type": "text/javascript",
                  "exec": [
                    "pm.environment.set('adminEmail', 'admin@admin.com');\r",
                    "pm.environment.set('adminPassword', '12345');"
                  ],
                  "_lastExecutionId": "3a64b4f4-18ff-47f1-be72-f6a2563e0844"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2e164c67-0dbd-4a0b-aefd-ce57969263bc",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should GET token as admin (USER)`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain token`).to.have.property('token');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('adminToken', response.token);  "
                  ],
                  "_lastExecutionId": "390304a8-1b2c-4495-bd2a-7544ae3752da"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "264b307d-82e5-4da5-b827-1f576a39e396"
            },
            "id": "264b307d-82e5-4da5-b827-1f576a39e396",
            "name": "/users",
            "request": {
              "description": {
                "content": "Kreiramo usera koji ce se koristiti u daljim API pozivima.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b9374f1a-300b-4078-8b30-f5ad775476ce",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should POST user`, () => {\r",
                    "    pm.response.to.have.status(201);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Some property is missing`).that.includes.all.keys(['_id', 'name', 'email', 'verification']);\r",
                    "})\r",
                    "\r",
                    "let req = JSON.parse(pm.request.body.raw);\r",
                    "\r",
                    "pm.environment.set('userPassword', req.password);\r",
                    "pm.environment.set('userEmail', response.email);\r",
                    "pm.environment.set('userId', response._id);\r",
                    ""
                  ],
                  "_lastExecutionId": "b04b789a-ef2b-44e3-97f1-1653d567bb76"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "4eb3f8a5-cb14-4561-bf78-17f12166477c",
                  "type": "text/javascript",
                  "exec": [
                    "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "let email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                    "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "let role = 'user';\r",
                    "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                    "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                    "\r",
                    "pm.variables.set(\"name\", name);\r",
                    "pm.variables.set(\"email\", email);\r",
                    "pm.variables.set(\"password\", password);\r",
                    "pm.variables.set(\"role\", role);\r",
                    "pm.variables.set(\"phone\", phone);\r",
                    "pm.variables.set(\"city\", city);\r",
                    "pm.variables.set(\"country\", country);"
                  ],
                  "_lastExecutionId": "f9c24426-c8b4-4309-af4a-82b725458a24"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "37d75238-edc0-4fa9-a001-4dcf0e5a91f6"
            },
            "id": "37d75238-edc0-4fa9-a001-4dcf0e5a91f6",
            "name": "/login",
            "request": {
              "description": {
                "content": "Salju se user podaci i uvanje user tokena.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7fa7e18f-8f65-4126-89c4-8dffe7e093ec",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should GET token as user (USER)`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain token`).to.have.property('token');\r",
                    "});\r",
                    "\r",
                    "pm.environment.set('userToken', response.token);  "
                  ],
                  "_lastExecutionId": "9fad83bf-337c-4adf-a898-64726928b0a6"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "317f7097-2d53-44cc-a8bc-6f5dec19f1fb"
            },
            "id": "317f7097-2d53-44cc-a8bc-6f5dec19f1fb",
            "name": "/users",
            "request": {
              "description": {
                "content": "Pokusaj pristupa bez utentifikacije",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b0fe73eb-08e2-4c7c-872a-8ee6c842d3e6",
                  "type": "text/javascript",
                  "exec": [
                    "    pm.test(`it should NOT be able to consume the route since no token was sent`, () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "    pm.response.to.be.unauthorized;\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "76195d09-281e-4846-924a-c5151340972f"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "a188d4a7-a7e6-4359-8394-2fc706b6924c"
            },
            "id": "a188d4a7-a7e6-4359-8394-2fc706b6924c",
            "name": "/users",
            "request": {
              "description": {
                "content": "Salje se admin token.   ",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{adminToken}}"
                }
              ],
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2320cb6a-8abf-41ba-a02d-be67119f3f0a",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should GET all the users`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'docs'`).to.have.property('docs').and.to.be.an('array');\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "15fa6650-5528-4b81-a0b6-631714007ecf"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "46abbcaf-3cae-4e0e-bab1-364b7d3a0244"
            },
            "id": "46abbcaf-3cae-4e0e-bab1-364b7d3a0244",
            "name": "/users?filter=admin&fields=email",
            "request": {
              "description": {
                "content": "Filtriranje resultata, salje se admin token.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "key": "filter",
                    "value": "admin"
                  },
                  {
                    "key": "fields",
                    "value": "email"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b98d995d-7958-4a98-8b5e-6eeacd827ebc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f874d91-520b-4049-9b7c-28c4725d6824"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "961cc702-598e-4b9d-84d0-195012f2eef8",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "let emailAddresses = [];\r",
                    "response.docs.forEach(item => emailAddresses.push(item.email));\r",
                    "\r",
                    "pm.test(`it should GET the users with filters`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Response does not contain 'docs'`).to.have.property('docs').and.to.be.an('array');\r",
                    "    pm.expect((emailAddresses).length, `[ERROR] 'docs' contains more than one result`).to.be.equal(1);\r",
                    "    emailAddresses.forEach(item => pm.expect(item, `[ERROR] Wrong email address`).contain('admin'));\r",
                    "});\r",
                    "\r",
                    "pm.test(`Response time is less than 200ms`, () => {\r",
                    "    pm.expect(pm.response.responseTime).to.be.below(200);\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "885eaa6e-bfe3-4b85-997b-707c4b6bd5e5"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "6d127aac-6bfa-4383-9d6d-f5e3924f8c07"
            },
            "id": "6d127aac-6bfa-4383-9d6d-f5e3924f8c07",
            "name": "/users",
            "request": {
              "description": {
                "content": "Neuspesno kreiranje usera od strane admina.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{adminToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b41aac1c-dd47-4e4d-abf6-7caf5cbf4854",
                  "type": "text/javascript",
                  "exec": [
                    "let email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                    "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "let role = 'user';\r",
                    "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                    "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                    "\r",
                    "pm.variables.set(\"email\", email);\r",
                    "pm.variables.set(\"password\", password);\r",
                    "pm.variables.set(\"role\", role);\r",
                    "pm.variables.set(\"phone\", phone);\r",
                    "pm.variables.set(\"city\", city);\r",
                    "pm.variables.set(\"country\", country);"
                  ],
                  "_lastExecutionId": "57dbcc35-91f7-4a28-bab9-e9ec01cc6761"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2e572ef6-3d2a-4d13-ac8f-554b12930408",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT POST a user without name`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "f1c75ea7-5591-4121-b418-e0488fced1c7"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "72667c94-8a19-4afd-b1ca-73ea1c58decf"
            },
            "id": "72667c94-8a19-4afd-b1ca-73ea1c58decf",
            "name": "/users",
            "request": {
              "description": {
                "content": "Admin uspesno kreira usera, ciji ID cuvamo za napredne api pozive.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72066ae0-5d9b-43b1-a90b-c74895bd5dd9",
                  "type": "text/javascript",
                  "exec": [
                    "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "let email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                    "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "let role = 'user';\r",
                    "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                    "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                    "\r",
                    "pm.variables.set(\"name\", name);\r",
                    "pm.variables.set(\"email\", email);\r",
                    "pm.variables.set(\"password\", password);\r",
                    "pm.variables.set(\"role\", role);\r",
                    "pm.variables.set(\"phone\", phone);\r",
                    "pm.variables.set(\"city\", city);\r",
                    "pm.variables.set(\"country\", country);"
                  ],
                  "_lastExecutionId": "423afb2f-fd52-4059-8d7b-1dabae2811b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d938f60b-ee2b-47f5-8c3b-022b4e9e2649",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should POST user`, () => {\r",
                    "    pm.response.to.have.status(201);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] Some property is missing`).that.includes.all.keys(['_id', 'name', 'email', 'verification']);\r",
                    "})\r",
                    "pm.environment.set('anotherUserId', response._id);\r",
                    "pm.environment.set('anotherUserEmail', response.email);\r",
                    ""
                  ],
                  "_lastExecutionId": "a626d383-cd9e-4cb0-a49c-753adc970738"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "4d47f136-1d75-44f8-8c37-6cfc49afd526"
            },
            "id": "4d47f136-1d75-44f8-8c37-6cfc49afd526",
            "name": "/users",
            "request": {
              "description": {
                "content": "Salje se admin token.\r\nSalje se user sa emailom koji vec postoji u bazi.\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{existingEmail}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a06d444f-9ccf-4fc3-bb23-b1dacfbebe0e",
                  "type": "text/javascript",
                  "exec": [
                    "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "let existingEmail = pm.variables.replaceIn('{{anotherUserEmail}}');\r",
                    "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "let role = 'user';\r",
                    "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                    "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                    "\r",
                    "pm.variables.set(\"name\", name);\r",
                    "pm.variables.set(\"existingEmail\", existingEmail);\r",
                    "pm.variables.set(\"password\", password);\r",
                    "pm.variables.set(\"role\", role);\r",
                    "pm.variables.set(\"phone\", phone);\r",
                    "pm.variables.set(\"city\", city);\r",
                    "pm.variables.set(\"country\", country);"
                  ],
                  "_lastExecutionId": "a2e54fd4-2a06-46d8-b4a0-27264705e63c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76d6d4b2-eded-4766-8161-4e51c7ad1f87",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT POST a user with email that already exists`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');\r",
                    "    pm.expect(response.errors.msg, `[ERROR] wrong error message`).to.be.equal('EMAIL_ALREADY_EXISTS');\r",
                    "})\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "85afeae4-a628-433a-a035-623f9c363348"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "a7197002-5ce5-4f40-986d-e1d03b0269af"
            },
            "id": "a7197002-5ce5-4f40-986d-e1d03b0269af",
            "name": "/users",
            "request": {
              "description": {
                "content": "Pokusj kreiranja usera sa nevalidnom rolom.\r\nValidne role su “admin” i “user”.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{invalidRole}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a9250b6-c291-48bf-bcdd-3b617b965e20",
                  "type": "text/javascript",
                  "exec": [
                    "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "let email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                    "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                    "let invalidRole = pm.variables.replaceIn('{{$randomIngverb}}');\r",
                    "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                    "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                    "\r",
                    "pm.variables.set(\"name\", name);\r",
                    "pm.variables.set(\"email\", email);\r",
                    "pm.variables.set(\"password\", password);\r",
                    "pm.variables.set(\"invalidRole\", invalidRole);\r",
                    "pm.variables.set(\"phone\", phone);\r",
                    "pm.variables.set(\"city\", city);\r",
                    "pm.variables.set(\"country\", country);"
                  ],
                  "_lastExecutionId": "ffdabb63-e20a-4d4e-9b99-e4087da4e38b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aac5fbdc-a7f4-4fa6-b123-8db370465f1d",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT POST a user with not known role`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');    \r",
                    "});"
                  ],
                  "_lastExecutionId": "50ef57e1-e64b-4e26-824a-641f800f66a6"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "06c54bfa-1232-4c3f-b95a-0c6f75bcc5cd"
            },
            "id": "06c54bfa-1232-4c3f-b95a-0c6f75bcc5cd",
            "name": "/users/{{id}}",
            "request": {
              "description": {
                "content": "Salje se admin token.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e0822e5-114c-4ea5-afa6-d974a240a7e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id','{{anotherUserId}}');"
                  ],
                  "_lastExecutionId": "7531faed-72dd-4da5-92eb-3e474b6f8dae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a70ab811-5152-49ff-a2bb-e964e3a70e5e",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "let id = pm.environment.get('anotherUserId');\r",
                    "\r",
                    "pm.test(`it should GET a user by the given id`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'name' property is missing`).to.haveOwnProperty('name');\r",
                    "    pm.expect(response, `[ERROR] '_id' property is missing`).to.haveOwnProperty('_id').to.be.equal(id);\r",
                    "});\r",
                    "\r",
                    "let anotherUserData = JSON.stringify(response);\r",
                    "pm.environment.set('anotherUserData', anotherUserData);"
                  ],
                  "_lastExecutionId": "c41cab03-7783-4f9c-be51-b0f5bed2c2a6"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "3d7f3818-e57d-41a3-bc4b-dcef51708f8e"
            },
            "id": "3d7f3818-e57d-41a3-bc4b-dcef51708f8e",
            "name": "/users/{{id}}",
            "request": {
              "description": {
                "content": "Neuspesan pokusaj za update usera od strane admina.\r\nSalje se novo ime za usera i novi email koji ne postoji u bazi.\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{adminToken}}"
                }
              ],
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{newUserName}}\",\r\n    \"email\": \"{{unrecordedEmail}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "714a4213-6522-4caf-a9e2-785af60aba75",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', '{{anotherUserId}}');\r",
                    "//-------\r",
                    "\r",
                    "let fullName = pm.variables.replaceIn('{{$randomFullName}}');\r",
                    "let randomUserName = pm.variables.replaceIn('{{$randomUserName}}');\r",
                    "let randomDomainName = pm.variables.replaceIn('{{$randomDomainName}}');\r",
                    "let unrecordedEmail = randomUserName + '@' + randomDomainName;\r",
                    "\r",
                    "pm.environment.get(\"variable_key\");\r",
                    "pm.variables.set('newUserName', fullName);\r",
                    "pm.variables.set('unrecordedEmail', unrecordedEmail);\r",
                    "//------\r",
                    "\r",
                    "let user = pm.environment.get('anotherUserData');\r",
                    "let anotherUserData = JSON.parse(user);\r",
                    "\r",
                    "pm.variables.set(\"role\", anotherUserData.role);\r",
                    "pm.variables.set(\"phone\", anotherUserData.phone);\r",
                    "pm.variables.set(\"city\", anotherUserData.city);\r",
                    "pm.variables.set(\"country\", anotherUserData.country);\r",
                    "//------\r",
                    "\r",
                    "pm.environment.set('anotherUserEmail', unrecordedEmail);\r",
                    "pm.environment.set('anotherUserName', fullName);"
                  ],
                  "_lastExecutionId": "fc7f22d0-81c4-4d4d-9298-37fafaee9287"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "43e9e0dc-8000-4c86-95b3-56bf610c03bb",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "let anotherUserEmail = pm.environment.get('anotherUserEmail');\r",
                    "let anotherUserId = pm.environment.get('anotherUserId');\r",
                    "let anotherUserName = pm.environment.get('anotherUserName');\r",
                    "\r",
                    "pm.test(`it should UPDATE a user given the id`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'name' property is missing`).to.haveOwnProperty('name').to.be.equal(anotherUserName);\r",
                    "    pm.expect(response, `[ERROR] '_id' property is missing`).to.haveOwnProperty('_id').to.be.equal(anotherUserId);\r",
                    "    pm.expect(response, `[ERROR] 'email' property is missing`).to.haveOwnProperty('email').to.be.equal((anotherUserEmail).toLowerCase());\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "e1fbb284-5651-4f68-a88b-c7ef87ad1e84"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "cf279553-32f7-43b9-bd29-19d1983e79fe"
            },
            "id": "cf279553-32f7-43b9-bd29-19d1983e79fe",
            "name": "/users/{{id}}",
            "request": {
              "description": {
                "content": "Neuspesan pokusaj update user-a od strane admina.\r\nSalje se email korisnka koji vec postoji u bazi\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{existingEmail}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd9c9516-5ab5-422b-80de-ae702a6d4966",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', '{{anotherUserId}}');\r",
                    "\r",
                    "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "let existingEmail = 'admin@admin.com';\r",
                    "let role = 'user';\r",
                    "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                    "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                    "\r",
                    "pm.variables.set(\"name\", name);\r",
                    "pm.variables.set(\"existingEmail\", existingEmail);\r",
                    "pm.variables.set(\"role\", role);\r",
                    "pm.variables.set(\"phone\", phone);\r",
                    "pm.variables.set(\"city\", city);\r",
                    "pm.variables.set(\"country\", country);"
                  ],
                  "_lastExecutionId": "26fb3409-1ee0-45d2-98d9-323e4772dac7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a38d4044-6283-43f4-aae7-daa86eddcb18",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT UPDATE a user with email that already exists (email: admin@admin.com)`, () => {\r",
                    "    pm.response.to.have.status(422);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');\r",
                    "    pm.expect(response.errors.msg, `[ERROR] Wrong message!`).to.be.equal('EMAIL_ALREADY_EXISTS');\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "6fea99bb-56b3-479e-965e-cb19932cf02b"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "a6a807e2-6eb6-45b7-8445-8879161a72c5"
            },
            "id": "a6a807e2-6eb6-45b7-8445-8879161a72c5",
            "name": "/users/{{id}}",
            "request": {
              "description": {
                "content": "Neuspesan pokusaj usera da update drugog usera.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{existingEmail}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{userToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0bedf5e-e4de-40e8-ace0-18441dd6366a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', '{{anotherUserId}}');\r",
                    "\r",
                    "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                    "let existingEmail = 'admin@admin.com';\r",
                    "let role = 'user';\r",
                    "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                    "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                    "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                    "\r",
                    "pm.variables.set(\"name\", name);\r",
                    "pm.variables.set(\"existingEmail\", existingEmail);\r",
                    "pm.variables.set(\"role\", role);\r",
                    "pm.variables.set(\"phone\", phone);\r",
                    "pm.variables.set(\"city\", city);\r",
                    "pm.variables.set(\"country\", country);"
                  ],
                  "_lastExecutionId": "2cc897c1-4afa-44ff-a046-4ef558a08279"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0174e76-2188-4fe7-9f48-eee2b1219754",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should NOT UPDATE another user if not an admin`, () => {\r",
                    "    pm.response.to.have.status(401);\r",
                    "    pm.response.to.be.unauthorized;\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');\r",
                    "    pm.expect(response.errors.msg, `[ERROR] Wrong message!`).to.be.equal('UNAUTHORIZED');\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "b5a1306f-cad4-412b-b421-34170a84f8dd"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "d84fc14c-8d1b-478d-9a76-ff7369a91a14"
            },
            "id": "d84fc14c-8d1b-478d-9a76-ff7369a91a14",
            "name": "/delete/{{id}}",
            "request": {
              "description": {
                "content": "Brisanje korisnika od strane admina;\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfe22761-c91b-4315-acb5-dd3daa9bfa19",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', '{{anotherUserId}}');"
                  ],
                  "_lastExecutionId": "c910e866-24b7-484e-b336-5df78c588796"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "90fd6079-6225-4392-a4f1-9795588433ac",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should DELETE a user given the id`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'msg' property is missing`).to.haveOwnProperty('msg');\r",
                    "    pm.expect(response.msg, `[ERROR] Wrong message!`).to.be.equal('DELETED');\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "dd93eaa9-dc04-48e1-9b90-9c6341b01b96"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "acb00778-1ed7-47eb-beea-011ab403606e"
            },
            "id": "acb00778-1ed7-47eb-beea-011ab403606e",
            "name": "/delete/{{id}}",
            "request": {
              "description": {
                "content": "Brisanje korisnika od strane admina;\r\n",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users",
                  "{{id}}"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72a79f35-55ef-44cd-adea-7300e65091d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('id', '{{userId}}');"
                  ],
                  "_lastExecutionId": "df2cf8ff-9dcc-4285-b049-9bc19d975236"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83e60acf-21e2-4447-9ba1-334b9c357bf6",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`it should DELETE a user given the id`, () => {\r",
                    "    pm.response.to.have.status(200);\r",
                    "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                    "    pm.expect(response, `[ERROR] 'msg' property is missing`).to.haveOwnProperty('msg');\r",
                    "    pm.expect(response.msg, `[ERROR] Wrong message!`).to.be.equal('DELETED');\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "cc9e3bad-9e06-425f-8a64-d13872341cb7"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "_": {
              "postman_id": "35124e5f-25f1-41f5-81e7-e6206a08c373"
            },
            "id": "35124e5f-25f1-41f5-81e7-e6206a08c373",
            "name": "/users?filter=user&fields=role",
            "request": {
              "description": {
                "content": "Filtriranje usera.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "users"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "key": "filter",
                    "value": "user"
                  },
                  {
                    "key": "fields",
                    "value": "role"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "bearer",
                "bearer": [
                  {
                    "type": "string",
                    "value": "{{adminToken}}",
                    "key": "token"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7ae7f63e-39b4-49c1-95f4-112464567e5f",
                  "type": "text/javascript",
                  "exec": [
                    "let response = pm.response.json();\r",
                    "\r",
                    "pm.test(`Listing all users`, () => {\r",
                    "    response.docs.forEach(item => pm.expect(item.role, `[ERROR] Wrong role!`).to.be.equal('user'));\r",
                    "});"
                  ],
                  "_lastExecutionId": "c2ca31fe-17bb-49c8-9365-f4e417354e39"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "b352d0e3-0b85-4902-9488-9c68569a397d",
      "name": "REST API - jwt, node.JS, mongoDB",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "35a30778-517a-48cb-a6cb-cb23911b6dcb",
    "name": "development",
    "values": [
      {
        "type": "any",
        "value": "localhost:3000",
        "key": "baseUrl"
      },
      {
        "type": "any",
        "value": "admin@admin.com",
        "key": "adminEmail"
      },
      {
        "type": "any",
        "value": "12345",
        "key": "adminPassword"
      },
      {
        "type": "any",
        "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
        "key": "adminToken"
      },
      {
        "type": "any",
        "value": "henderson_cremin83@gmail.com",
        "key": "userEmail"
      },
      {
        "type": "any",
        "value": "11a94859-8b58-426b-954d-7ff789b86855",
        "key": "userVerification"
      },
      {
        "type": "any",
        "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81fad4e0a7b61fd3662211208ff4eb145f96cec7ec7ccda67e28c94928f6433224a5f12ea7f1d6717a7e9bd2154b2a0c5f17e114baaed2ade9ac0b858e397f3f8e666825e338d94a4687f55c96e6829715723db906741b042375a135dbe3e2ab842a231a63f62046d19bed1188d365bd91973943b7fc1f89956af1b3818a1c97ade",
        "key": "userToken"
      },
      {
        "type": "any",
        "value": "5fbc36a20bcf1811a06559ca",
        "key": "userId"
      },
      {
        "type": "any",
        "value": "5fbc36a00bcf1811a06559c6",
        "key": "cityId"
      },
      {
        "type": "any",
        "value": "Catalinamouth",
        "key": "cityName"
      },
      {
        "type": "any",
        "value": "YLY0HOjbwvSxuVT",
        "key": "userPassword"
      },
      {
        "type": "any",
        "value": "{\"name\":\"Test123456\",\"urlTwitter\":\"https://hello.com\",\"urlGitHub\":\"https://hello.io\",\"phone\":\"123123123\",\"city\":\"Bucaramanga\",\"country\":\"Trupale\"}",
        "key": "testUser"
      },
      {
        "type": "any",
        "value": "5fbc36a20bcf1811a06559cc",
        "key": "anotherUserId"
      },
      {
        "type": "any",
        "value": "Mario.Beatty@skyla.org",
        "key": "anotherUserEmail"
      },
      {
        "type": "any",
        "value": "{\"role\":\"user\",\"verified\":false,\"_id\":\"5fbc36a20bcf1811a06559cc\",\"name\":\"Donny\",\"email\":\"henry.schuster19@hotmail.com\",\"phone\":\"815-364-8185\",\"city\":\"North Danialfort\",\"country\":\"Guadeloupe\",\"verification\":\"b71bd962-59aa-4a27-9dad-f9d243c4b1cf\",\"createdAt\":\"2020-11-23T22:24:34.795Z\",\"updatedAt\":\"2020-11-23T22:24:34.795Z\"}",
        "key": "anotherUserData"
      },
      {
        "type": "any",
        "value": "Miss Sarah Wolf",
        "key": "anotherUserName"
      }
    ]
  },
  "globals": {
    "id": "5912e7e4-a0da-4354-9f75-9cfaf2150980",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 52,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 84,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 52,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 52,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 52,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 54,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 52,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 32,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.903846153846153,
      "responseMin": 5,
      "responseMax": 54,
      "responseSd": 7.01991566732331,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1606170270576,
      "completed": 1606170275675
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 52,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b11c4e11-eb42-4af6-8cce-c20ab28a6f2c",
          "httpRequestId": "f6c614aa-757c-44bd-b6b0-6e28cb093176"
        },
        "item": {
          "_": {
            "postman_id": "6774574f-3706-4c38-8714-717c34d2a7a2"
          },
          "id": "6774574f-3706-4c38-8714-717c34d2a7a2",
          "name": "/",
          "request": {
            "description": {
              "content": "Testiranje servera, testiramo da li je server dostupan.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "395fed60-196f-4b73-8f94-6e8e64e78149",
                "type": "text/javascript",
                "exec": [
                  "\r",
                  "pm.test(`It should GET home API url`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.response.to.be.ok;\r",
                  "    //pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/html; charset=utf-8');\r",
                  "});\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "b6b24ab1-fe90-461d-9d02-c069a15fd006"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje servera, testiramo da li je server dostupan.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "25ccb0db-feee-4734-8f63-ce9b690f4c24",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "cac3f90c-a39b-40ee-ba8f-09407aed3d90",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "560"
            },
            {
              "key": "ETag",
              "value": "W/\"230-vwO2Qozeo8VDCVykrYogg8CdMqM\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:30 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              60,
              33,
              68,
              79,
              67,
              84,
              89,
              80,
              69,
              32,
              104,
              116,
              109,
              108,
              62,
              10,
              60,
              104,
              116,
              109,
              108,
              32,
              108,
              97,
              110,
              103,
              61,
              34,
              101,
              110,
              34,
              62,
              10,
              10,
              60,
              104,
              101,
              97,
              100,
              62,
              10,
              32,
              32,
              60,
              109,
              101,
              116,
              97,
              32,
              99,
              104,
              97,
              114,
              115,
              101,
              116,
              61,
              34,
              85,
              84,
              70,
              45,
              56,
              34,
              62,
              10,
              32,
              32,
              60,
              109,
              101,
              116,
              97,
              32,
              110,
              97,
              109,
              101,
              61,
              34,
              118,
              105,
              101,
              119,
              112,
              111,
              114,
              116,
              34,
              32,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              61,
              34,
              119,
              105,
              100,
              116,
              104,
              61,
              100,
              101,
              118,
              105,
              99,
              101,
              45,
              119,
              105,
              100,
              116,
              104,
              44,
              32,
              105,
              110,
              105,
              116,
              105,
              97,
              108,
              45,
              115,
              99,
              97,
              108,
              101,
              61,
              49,
              46,
              48,
              34,
              62,
              10,
              32,
              32,
              60,
              109,
              101,
              116,
              97,
              32,
              104,
              116,
              116,
              112,
              45,
              101,
              113,
              117,
              105,
              118,
              61,
              34,
              88,
              45,
              85,
              65,
              45,
              67,
              111,
              109,
              112,
              97,
              116,
              105,
              98,
              108,
              101,
              34,
              32,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              61,
              34,
              105,
              101,
              61,
              101,
              100,
              103,
              101,
              34,
              62,
              10,
              32,
              32,
              60,
              116,
              105,
              116,
              108,
              101,
              62,
              110,
              111,
              100,
              101,
              45,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              45,
              109,
              111,
              110,
              103,
              111,
              100,
              98,
              45,
              106,
              119,
              116,
              45,
              114,
              101,
              115,
              116,
              45,
              97,
              112,
              105,
              45,
              115,
              107,
              101,
              108,
              101,
              116,
              111,
              110,
              60,
              47,
              116,
              105,
              116,
              108,
              101,
              62,
              10,
              60,
              47,
              104,
              101,
              97,
              100,
              62,
              10,
              10,
              60,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              60,
              104,
              49,
              32,
              115,
              116,
              121,
              108,
              101,
              61,
              34,
              116,
              101,
              120,
              116,
              45,
              97,
              108,
              105,
              103,
              110,
              58,
              99,
              101,
              110,
              116,
              101,
              114,
              59,
              32,
              109,
              97,
              114,
              103,
              105,
              110,
              45,
              116,
              111,
              112,
              58,
              32,
              49,
              48,
              48,
              112,
              120,
              34,
              62,
              65,
              80,
              73,
              32,
              104,
              111,
              109,
              101,
              60,
              47,
              104,
              49,
              62,
              10,
              32,
              32,
              60,
              104,
              50,
              32,
              115,
              116,
              121,
              108,
              101,
              61,
              34,
              116,
              101,
              120,
              116,
              45,
              97,
              108,
              105,
              103,
              110,
              58,
              99,
              101,
              110,
              116,
              101,
              114,
              34,
              62,
              70,
              111,
              114,
              32,
              109,
              111,
              114,
              101,
              32,
              105,
              110,
              102,
              111,
              32,
              118,
              105,
              115,
              105,
              116,
              58,
              32,
              60,
              97,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              61,
              34,
              95,
              98,
              108,
              97,
              110,
              107,
              34,
              32,
              104,
              114,
              101,
              102,
              61,
              34,
              32,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              103,
              105,
              116,
              104,
              117,
              98,
              46,
              99,
              111,
              109,
              47,
              100,
              97,
              118,
              101,
              108,
              108,
              97,
              110,
              101,
              100,
              97,
              109,
              47,
              110,
              111,
              100,
              101,
              45,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              45,
              109,
              111,
              110,
              103,
              111,
              100,
              98,
              45,
              106,
              119,
              116,
              45,
              114,
              101,
              115,
              116,
              45,
              97,
              112,
              105,
              45,
              115,
              107,
              101,
              108,
              101,
              116,
              111,
              110,
              34,
              62,
              110,
              111,
              100,
              101,
              45,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              45,
              109,
              111,
              110,
              103,
              111,
              100,
              98,
              45,
              106,
              119,
              116,
              45,
              114,
              101,
              115,
              116,
              45,
              97,
              112,
              105,
              45,
              115,
              107,
              101,
              108,
              101,
              116,
              111,
              110,
              60,
              47,
              97,
              62,
              60,
              47,
              104,
              50,
              62,
              10,
              60,
              47,
              98,
              111,
              100,
              121,
              62,
              10,
              10,
              60,
              47,
              104,
              116,
              109,
              108,
              62,
              10
            ]
          },
          "cookie": [],
          "responseTime": 54,
          "responseSize": 560
        },
        "id": "6774574f-3706-4c38-8714-717c34d2a7a2",
        "assertions": [
          {
            "assertion": "It should GET home API url",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b34fb5ba-6ffc-4c10-875a-36c94d27add6",
          "length": 52,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c654b623-006e-4d43-8a88-b1128dffc460"
        },
        "item": {
          "_": {
            "postman_id": "fffa2a2d-7a22-4166-b1db-05ebecbcdb55"
          },
          "id": "fffa2a2d-7a22-4166-b1db-05ebecbcdb55",
          "name": "/login",
          "request": {
            "description": {
              "content": "Testiranje prijavljivanja sa praznim requestom.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {}
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "262bf450-8e93-4344-8f24-659af109c1c7",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "let emailMessages = [];\r",
                  "let passwordMessages = [];\r",
                  "\r",
                  "response.errors.msg.forEach(item => {\r",
                  "    item.param === 'email' && emailMessages.push(item.msg);\r",
                  "    item.param === 'password' && passwordMessages.push(item.msg);\r",
                  "});\r",
                  "\r",
                  "pm.test(`It should NOT POST login if body is empty`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(emailMessages, `[ERROR] Some error message is missing`).to.include.members(['MISSING', 'IS_EMPTY', 'EMAIL_IS_NOT_VALID']);\r",
                  "    pm.expect(passwordMessages, `[ERROR] Some error message is missing`).to.include.members(['MISSING', 'IS_EMPTY', 'PASSWORD_TOO_SHORT_MIN_5']);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "f81c1789-9f43-49fb-bc7c-0754676ad0f1"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje prijavljivanja sa praznim requestom.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d986bf80-edc7-4b36-a435-408b223a8a18",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 0,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {}
            }
          }
        },
        "response": {
          "id": "554bd88c-0dde-4ebc-ac09-fb811729879e",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "371"
            },
            {
              "key": "ETag",
              "value": "W/\"173-1Mandhngjbb1vmecJPbcGqD0e7Q\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:30 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              91,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              77,
              73,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              73,
              83,
              95,
              69,
              77,
              80,
              84,
              89,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              69,
              77,
              65,
              73,
              76,
              95,
              73,
              83,
              95,
              78,
              79,
              84,
              95,
              86,
              65,
              76,
              73,
              68,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              77,
              73,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              112,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              73,
              83,
              95,
              69,
              77,
              80,
              84,
              89,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              112,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              80,
              65,
              83,
              83,
              87,
              79,
              82,
              68,
              95,
              84,
              79,
              79,
              95,
              83,
              72,
              79,
              82,
              84,
              95,
              77,
              73,
              78,
              95,
              53,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              112,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 371
        },
        "id": "fffa2a2d-7a22-4166-b1db-05ebecbcdb55",
        "assertions": [
          {
            "assertion": "It should NOT POST login if body is empty",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2f7d2a9c-ca36-4dd3-9747-901fbe4a34f3",
          "length": 52,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e2d74c29-efbf-483b-b594-10bc9c3f270e"
        },
        "item": {
          "_": {
            "postman_id": "58d8645c-76ee-4368-9464-e98dce1080e2"
          },
          "id": "58d8645c-76ee-4368-9464-e98dce1080e2",
          "name": "/login",
          "request": {
            "description": {
              "content": "Testiranje prijavljivanja sa validnim podacima za prijavu.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"{{adminPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9ddfdf3b-5b58-44bb-9948-8e47df250b92",
                "type": "text/javascript",
                "exec": [
                  "let schema = {\r",
                  "    \"type\": \"object\",\r",
                  "    \"properties\": {\r",
                  "        \"token\": {\r",
                  "            \"type\": \"string\"\r",
                  "        },\r",
                  "        \"user\": {\r",
                  "            \"type\": \"object\",\r",
                  "            \"properties\": {\r",
                  "                \"_id\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                },\r",
                  "                \"name\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                },\r",
                  "                \"email\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                },\r",
                  "                \"role\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                },\r",
                  "                \"verified\": {\r",
                  "                    \"type\": \"boolean\"\r",
                  "                },\r",
                  "                \"verification\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                }\r",
                  "            },\r",
                  "            \"required\": [\r",
                  "                \"_id\",\r",
                  "                \"name\",\r",
                  "                \"email\",\r",
                  "                \"role\",\r",
                  "                \"verified\",\r",
                  "                \"verification\"\r",
                  "            ]\r",
                  "        }\r",
                  "    },\r",
                  "    \"required\": [\r",
                  "        \"token\",\r",
                  "        \"user\"\r",
                  "    ]\r",
                  "}\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should GET token`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Schema is invalid`).to.have.jsonSchema(schema);\r",
                  "    pm.expect(response, `[ERROR] Response does not contain token and user properties`).to.have.all.keys('token', 'user');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('adminToken', response.token);"
                ],
                "_lastExecutionId": "fe6b7e47-5f3c-4e9e-b112-aae063514205"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2c6a2ca6-75fa-4a10-be59-933deb2dbb52",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set('adminEmail', 'admin@admin.com');\r",
                  "pm.environment.set('adminPassword', '12345');"
                ],
                "_lastExecutionId": "47700dc3-b49e-4af9-a3f5-3223e86e88c2"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje prijavljivanja sa validnim podacima za prijavu.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e10a0ef9-f67f-4523-909e-47fcfad25c50",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 62,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"admin@admin.com\",\r\n    \"password\": \"12345\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ec710c2d-ce92-49d8-a182-53d8a5b6746b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "578"
            },
            {
              "key": "ETag",
              "value": "W/\"242-J6Dfwubg6R0VFUZvahyjypHN5Yk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:30 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              102,
              99,
              102,
              51,
              102,
              55,
              56,
              49,
              51,
              56,
              102,
              54,
              49,
              102,
              101,
              54,
              50,
              55,
              51,
              100,
              98,
              100,
              49,
              100,
              54,
              99,
              48,
              53,
              102,
              49,
              53,
              101,
              51,
              48,
              52,
              57,
              54,
              100,
              55,
              97,
              48,
              56,
              53,
              57,
              49,
              57,
              98,
              98,
              99,
              100,
              99,
              102,
              49,
              49,
              102,
              50,
              55,
              49,
              100,
              99,
              101,
              99,
              102,
              98,
              53,
              54,
              52,
              99,
              100,
              48,
              57,
              97,
              101,
              56,
              56,
              55,
              55,
              101,
              100,
              101,
              56,
              102,
              48,
              98,
              50,
              57,
              101,
              100,
              101,
              50,
              97,
              49,
              99,
              98,
              102,
              48,
              52,
              100,
              101,
              50,
              48,
              97,
              51,
              98,
              56,
              49,
              101,
              56,
              98,
              53,
              102,
              57,
              52,
              50,
              55,
              48,
              52,
              101,
              57,
              57,
              55,
              48,
              54,
              56,
              56,
              57,
              101,
              57,
              52,
              98,
              55,
              53,
              57,
              52,
              98,
              102,
              56,
              53,
              99,
              97,
              49,
              50,
              100,
              101,
              101,
              57,
              51,
              100,
              99,
              48,
              57,
              55,
              48,
              99,
              55,
              57,
              97,
              54,
              50,
              101,
              57,
              49,
              48,
              51,
              53,
              100,
              98,
              102,
              97,
              102,
              53,
              48,
              51,
              100,
              98,
              99,
              101,
              102,
              100,
              98,
              49,
              97,
              52,
              57,
              101,
              97,
              101,
              49,
              57,
              56,
              51,
              55,
              57,
              100,
              53,
              51,
              100,
              52,
              52,
              55,
              99,
              50,
              54,
              97,
              102,
              48,
              98,
              101,
              57,
              97,
              48,
              98,
              54,
              54,
              49,
              53,
              52,
              57,
              56,
              49,
              100,
              54,
              54,
              50,
              102,
              101,
              49,
              98,
              49,
              98,
              56,
              97,
              97,
              100,
              100,
              56,
              56,
              98,
              53,
              102,
              101,
              50,
              97,
              100,
              55,
              51,
              48,
              97,
              54,
              55,
              97,
              49,
              53,
              51,
              102,
              101,
              50,
              102,
              57,
              102,
              98,
              97,
              50,
              48,
              49,
              53,
              50,
              48,
              55,
              102,
              97,
              52,
              53,
              99,
              48,
              100,
              52,
              102,
              52,
              52,
              97,
              49,
              50,
              51,
              55,
              52,
              53,
              97,
              55,
              99,
              100,
              56,
              98,
              52,
              56,
              50,
              55,
              52,
              98,
              99,
              56,
              49,
              51,
              49,
              53,
              54,
              52,
              101,
              97,
              99,
              56,
              48,
              99,
              99,
              48,
              48,
              54,
              48,
              100,
              50,
              102,
              102,
              52,
              52,
              102,
              98,
              54,
              102,
              55,
              48,
              49,
              51,
              55,
              49,
              99,
              55,
              52,
              57,
              99,
              48,
              54,
              99,
              55,
              97,
              102,
              98,
              56,
              57,
              55,
              101,
              57,
              54,
              51,
              101,
              49,
              99,
              100,
              97,
              99,
              48,
              102,
              49,
              101,
              55,
              57,
              100,
              54,
              49,
              50,
              101,
              97,
              57,
              55,
              53,
              52,
              99,
              56,
              99,
              100,
              48,
              99,
              97,
              97,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              97,
              97,
              49,
              99,
              50,
              99,
              51,
              53,
              101,
              102,
              55,
              97,
              52,
              101,
              57,
              55,
              98,
              53,
              101,
              57,
              57,
              53,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              117,
              112,
              101,
              114,
              32,
              65,
              100,
              109,
              105,
              110,
              105,
              115,
              116,
              114,
              97,
              116,
              111,
              114,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              64,
              97,
              100,
              109,
              105,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              100,
              54,
              101,
              48,
              55,
              50,
              99,
              45,
              48,
              101,
              97,
              102,
              45,
              52,
              50,
              51,
              57,
              45,
              98,
              98,
              53,
              101,
              45,
              52,
              57,
              53,
              101,
              54,
              52,
              56,
              54,
              49,
              52,
              56,
              102,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 578
        },
        "id": "58d8645c-76ee-4368-9464-e98dce1080e2",
        "assertions": [
          {
            "assertion": "It should GET token",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6f2f11c1-e299-4036-a961-01b7d8add70f",
          "length": 52,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "568f885f-c9b9-4b8a-913c-446cebed22b0"
        },
        "item": {
          "_": {
            "postman_id": "2fa0f794-73a2-49f9-b7db-49833378cc34"
          },
          "id": "2fa0f794-73a2-49f9-b7db-49833378cc34",
          "name": "/register",
          "request": {
            "description": {
              "content": "Testiranje registracije sa validnim podacima.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "register"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randomName}}\",\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"password\": \"{{randomPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e83159a3-d6da-40b8-8b9a-f2b35411eca0",
                "type": "text/javascript",
                "exec": [
                  "let randomUsername = pm.variables.replaceIn('{{$randomUserName}}');\r",
                  "let randomEmail = pm.variables.replaceIn('{{$randomEmail}}');\r",
                  "let randomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "pm.variables.set(\"randomName\", randomUsername);\r",
                  "pm.variables.set(\"randomEmail\", randomEmail);\r",
                  "pm.variables.set(\"randomPassword\", randomPassword);\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "7c8cc6cd-ff52-4e45-8f89-14c99f94c8ca"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b346ada8-fd34-43a7-b863-e77858bbb345",
                "type": "text/javascript",
                "exec": [
                  "let schema = {\r",
                  "    \"type\": \"object\",\r",
                  "    \"properties\": {\r",
                  "        \"token\": {\r",
                  "            \"type\": \"string\"\r",
                  "        },\r",
                  "        \"user\": {\r",
                  "            \"type\": \"object\",\r",
                  "            \"properties\": {\r",
                  "                \"_id\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                },\r",
                  "                \"name\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                },\r",
                  "                \"email\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                },\r",
                  "                \"role\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                },\r",
                  "                \"verified\": {\r",
                  "                    \"type\": \"boolean\"\r",
                  "                },\r",
                  "                \"verification\": {\r",
                  "                    \"type\": \"string\"\r",
                  "                }\r",
                  "            },\r",
                  "            \"required\": [\r",
                  "                \"_id\",\r",
                  "                \"name\",\r",
                  "                \"email\",\r",
                  "                \"role\",\r",
                  "                \"verified\",\r",
                  "                \"verification\"\r",
                  "            ]\r",
                  "        }\r",
                  "    },\r",
                  "    \"required\": [\r",
                  "        \"token\",\r",
                  "        \"user\"\r",
                  "    ]\r",
                  "}\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should POST register`, (() => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response.user.role, `[ERROR] The role is not correct`).to.be.equal('user');\r",
                  "    pm.expect(pm.variables.get('randomName'), `[ERROR] Username does not match`).to.be.equal(response.user.name);\r",
                  "    pm.expect(pm.variables.get('randomEmail').toLowerCase(), `[ERROR] Email does not match`).to.be.equal((response.user.email).toLowerCase());\r",
                  "    pm.expect(response, `[ERROR] Schema is invalid`).to.have.jsonSchema(schema);\r",
                  "}));\r",
                  "\r",
                  "pm.environment.set('userEmail', response.user.email);\r",
                  "pm.environment.set('userVerification', response.user.verification);\r",
                  "pm.environment.set('userToken', response.token);\r",
                  "pm.environment.set('userId', response.user._id);\r",
                  ""
                ],
                "_lastExecutionId": "7d9858a4-995d-44b4-9934-523a6f1576c1"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje registracije sa validnim podacima.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "register"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "41edd2f5-4823-4265-8b59-5d01504cf803",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 115,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Hermina_Baumbach28\",\r\n    \"email\": \"Boyd.Becker@hotmail.com\",\r\n    \"password\": \"qwyzrFRIaM7YmQ1\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "1ea7b934-61cd-498d-b428-9fc851292a3e",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "585"
            },
            {
              "key": "ETag",
              "value": "W/\"249-4okqja9fj4OYbKh+seV8nEwqB+Q\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              102,
              99,
              102,
              51,
              102,
              55,
              56,
              49,
              51,
              56,
              102,
              54,
              49,
              102,
              101,
              54,
              50,
              55,
              51,
              100,
              98,
              100,
              49,
              100,
              54,
              99,
              48,
              53,
              102,
              49,
              53,
              101,
              51,
              48,
              52,
              57,
              54,
              100,
              55,
              97,
              48,
              56,
              53,
              57,
              49,
              57,
              98,
              98,
              99,
              100,
              99,
              102,
              49,
              49,
              102,
              50,
              55,
              49,
              100,
              99,
              101,
              99,
              102,
              98,
              53,
              54,
              52,
              99,
              100,
              48,
              57,
              97,
              101,
              56,
              56,
              55,
              55,
              101,
              100,
              101,
              56,
              102,
              48,
              98,
              50,
              57,
              101,
              100,
              101,
              50,
              97,
              49,
              99,
              98,
              102,
              99,
              49,
              53,
              101,
              102,
              50,
              54,
              57,
              100,
              102,
              52,
              57,
              51,
              48,
              50,
              52,
              49,
              53,
              100,
              54,
              52,
              102,
              101,
              99,
              51,
              100,
              102,
              57,
              101,
              56,
              49,
              102,
              52,
              53,
              56,
              52,
              97,
              51,
              98,
              97,
              97,
              100,
              57,
              102,
              54,
              48,
              48,
              51,
              54,
              56,
              57,
              52,
              50,
              53,
              49,
              99,
              100,
              101,
              53,
              52,
              102,
              49,
              55,
              101,
              57,
              52,
              49,
              54,
              98,
              100,
              50,
              101,
              100,
              57,
              52,
              100,
              98,
              52,
              97,
              100,
              101,
              54,
              55,
              49,
              101,
              52,
              49,
              53,
              56,
              51,
              57,
              100,
              55,
              50,
              57,
              51,
              102,
              99,
              98,
              54,
              54,
              51,
              53,
              51,
              57,
              48,
              101,
              102,
              55,
              54,
              102,
              98,
              101,
              50,
              98,
              101,
              98,
              101,
              102,
              54,
              99,
              48,
              99,
              55,
              56,
              54,
              101,
              56,
              54,
              98,
              48,
              57,
              53,
              101,
              102,
              99,
              102,
              51,
              57,
              53,
              53,
              56,
              53,
              52,
              100,
              97,
              51,
              53,
              97,
              99,
              57,
              48,
              100,
              99,
              98,
              52,
              57,
              49,
              99,
              99,
              97,
              48,
              56,
              98,
              52,
              56,
              49,
              53,
              50,
              52,
              55,
              101,
              56,
              97,
              56,
              56,
              55,
              49,
              54,
              49,
              48,
              100,
              99,
              102,
              53,
              55,
              53,
              55,
              53,
              100,
              57,
              56,
              100,
              100,
              51,
              55,
              100,
              55,
              56,
              51,
              97,
              48,
              56,
              52,
              54,
              97,
              99,
              55,
              56,
              49,
              56,
              102,
              55,
              48,
              53,
              54,
              56,
              99,
              99,
              56,
              57,
              101,
              99,
              48,
              50,
              55,
              55,
              97,
              56,
              48,
              53,
              48,
              99,
              102,
              52,
              101,
              100,
              101,
              100,
              97,
              102,
              51,
              99,
              48,
              51,
              50,
              97,
              49,
              48,
              57,
              52,
              51,
              48,
              56,
              53,
              56,
              97,
              98,
              98,
              97,
              53,
              98,
              50,
              51,
              98,
              100,
              98,
              57,
              98,
              50,
              97,
              55,
              54,
              49,
              50,
              56,
              97,
              102,
              102,
              100,
              57,
              98,
              97,
              57,
              99,
              54,
              97,
              102,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              57,
              102,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              72,
              101,
              114,
              109,
              105,
              110,
              97,
              95,
              66,
              97,
              117,
              109,
              98,
              97,
              99,
              104,
              50,
              56,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              98,
              111,
              121,
              100,
              46,
              98,
              101,
              99,
              107,
              101,
              114,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              100,
              100,
              48,
              97,
              52,
              56,
              51,
              51,
              45,
              55,
              97,
              101,
              49,
              45,
              52,
              56,
              49,
              48,
              45,
              56,
              101,
              54,
              53,
              45,
              55,
              57,
              100,
              100,
              53,
              56,
              56,
              57,
              50,
              57,
              52,
              57,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 585
        },
        "id": "2fa0f794-73a2-49f9-b7db-49833378cc34",
        "assertions": [
          {
            "assertion": "It should POST register",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "92e3928d-3606-4119-b929-0c714b099145",
          "length": 52,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ecd136f1-8be1-4f8e-90bf-114288454c8e"
        },
        "item": {
          "_": {
            "postman_id": "f9e55168-0440-4e9e-bb13-3115d1cb726b"
          },
          "id": "f9e55168-0440-4e9e-bb13-3115d1cb726b",
          "name": "/register",
          "request": {
            "description": {
              "content": "Testiranje registracije sa postojecim emailom",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "register"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\" : \"{{randomName}}\",\r\n    \"email\": \"{{existingEmail}}\",\r\n    \"password\": \"{{randomPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ebeaf176-24a9-41a7-bc6e-b4675efe23a5",
                "type": "text/javascript",
                "exec": [
                  "let randomUsername = pm.variables.replaceIn('{{$randomUserName}}');\r",
                  "let randomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "pm.variables.set(\"randomName\", randomUsername);\r",
                  "pm.variables.set(\"existingEmail\", '{{userEmail}}');\r",
                  "pm.variables.set(\"randomPassword\", randomPassword);\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9656f05c-ceed-4f80-9ee8-413a2335312d"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b4cd28a9-85f5-46ee-a852-0e5de2f5f726",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should NOT POST a register if email already exists`, () => {\r",
                  "\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'errors' property`).to.have.property('errors');\r",
                  "    pm.expect(response.errors.msg, `[ERROR] Incorect message!`).to.be.equal('EMAIL_ALREADY_EXISTS');\r",
                  "});"
                ],
                "_lastExecutionId": "ed7f299d-ff8c-4173-809f-99f351087c9a"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje registracije sa postojecim emailom",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "register"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "275284fa-1c07-4844-bb0f-f9cb2d248981",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 106,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\" : \"Prince10\",\r\n    \"email\": \"boyd.becker@hotmail.com\",\r\n    \"password\": \"507zIAcXnw1U9uw\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "7f186297-2573-4fbd-85ae-6b513e8271a7",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "ETag",
              "value": "W/\"29-UWzmy2PHGgyraQbu1dIsKvHUWZA\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              69,
              77,
              65,
              73,
              76,
              95,
              65,
              76,
              82,
              69,
              65,
              68,
              89,
              95,
              69,
              88,
              73,
              83,
              84,
              83,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 8,
          "responseSize": 41
        },
        "id": "f9e55168-0440-4e9e-bb13-3115d1cb726b",
        "assertions": [
          {
            "assertion": "It should NOT POST a register if email already exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "74748b5b-ded9-4700-944b-330e7651c352",
          "length": 52,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "57898981-2246-48df-a08f-3338ad82819e"
        },
        "item": {
          "_": {
            "postman_id": "da2fdbe6-0f9f-45f4-bc42-772c72248832"
          },
          "id": "da2fdbe6-0f9f-45f4-bc42-772c72248832",
          "name": "/verify",
          "request": {
            "url": {
              "path": [
                "verify"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\": \"{{userVerification}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ee26246-4e80-4d27-a60e-44a5ed7bc2d0",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should POST verify`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain email and verified properties`).to.have.all.keys(['email', 'verified']);\r",
                  "    pm.expect(response.verified, `[ERROR] 'verified' is false`).to.be.true;\r",
                  "});"
                ],
                "_lastExecutionId": "733ccdfb-437e-41bf-8398-31d49d1af52f"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "verify"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e51758fd-55d8-4f6f-8c5d-430fcf316400",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 54,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\": \"dd0a4833-7ae1-4810-8e65-79dd58892949\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ad4aa989-319a-4bf2-b8b3-c3113b78448e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "51"
            },
            {
              "key": "ETag",
              "value": "W/\"33-QMhn59zCv0bnH2QQiwt578O6VjA\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              98,
              111,
              121,
              100,
              46,
              98,
              101,
              99,
              107,
              101,
              114,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 14,
          "responseSize": 51
        },
        "id": "da2fdbe6-0f9f-45f4-bc42-772c72248832",
        "assertions": [
          {
            "assertion": "It should POST verify",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "07becf73-d3d4-4bc9-b9da-6357261d928f",
          "length": 52,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7223b203-77ae-4749-8422-217e14959b25"
        },
        "item": {
          "_": {
            "postman_id": "a7f0626c-5d81-4e7c-b111-55af365e2168"
          },
          "id": "a7f0626c-5d81-4e7c-b111-55af365e2168",
          "name": "/verify",
          "request": {
            "description": {
              "content": "Verifikacija vec verifikovanog korisnika.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "verify"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\": \"{{userVerification}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c9e5b25-b8ff-4371-9016-cc5acc8cc7aa",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT POST verify if user is already verified`, () => {\r",
                  "    pm.response.to.have.status(404);\r",
                  "    pm.expect(response.errors.msg, `[ERROR] Message is not corect'`).to.be.equal('NOT_FOUND_OR_ALREADY_VERIFIED');\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "d1eec7b4-2961-4698-952f-b60b7b24de65"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Verifikacija vec verifikovanog korisnika.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "verify"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f14f3c14-1eee-466e-b06e-c2d9773f5e50",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 54,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\": \"dd0a4833-7ae1-4810-8e65-79dd58892949\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "62d277eb-67a7-46d0-9b32-c4dde4971a70",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "50"
            },
            {
              "key": "ETag",
              "value": "W/\"32-BpQg3Mge+IopgpwHtShzHfOUs0g\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              78,
              79,
              84,
              95,
              70,
              79,
              85,
              78,
              68,
              95,
              79,
              82,
              95,
              65,
              76,
              82,
              69,
              65,
              68,
              89,
              95,
              86,
              69,
              82,
              73,
              70,
              73,
              69,
              68,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 7,
          "responseSize": 50
        },
        "id": "a7f0626c-5d81-4e7c-b111-55af365e2168",
        "assertions": [
          {
            "assertion": "it should NOT POST verify if user is already verified",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b4f15426-5a4f-4be9-88ce-f0500bbd748f",
          "length": 52,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f767f1f4-e352-43a6-bfee-7d343fe61e10"
        },
        "item": {
          "_": {
            "postman_id": "0e57c293-133a-4366-b877-63d16f5ec840"
          },
          "id": "0e57c293-133a-4366-b877-63d16f5ec840",
          "name": "/forgot",
          "request": {
            "description": {
              "content": "Testiranje sa validnim email-om. Dobija se verification koji bi se koristio za /reset API poziv",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "forgot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{userEmail}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a3d27b26-f5f0-4c49-ae7b-45e8f803da5e",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should POST forgot`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'msg' property is missing`).to.haveOwnProperty('msg');\r",
                  "    pm.expect(response, `[ERROR] 'verification' property is missing`).to.have.property('verification');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('userVerification', response.verification);"
                ],
                "_lastExecutionId": "09390cdf-615b-4c85-8a92-09c4e5d2d460"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje sa validnim email-om. Dobija se verification koji bi se koristio za /reset API poziv",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "forgot"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "53f19594-76d0-40f1-98ae-686e4ad55be4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 44,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"boyd.becker@hotmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "31e79f52-e79c-4db5-8662-9d35e155f35b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "114"
            },
            {
              "key": "ETag",
              "value": "W/\"72-g+pmkOBWbIuXDArf4hXEMVZjvc8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              82,
              69,
              83,
              69,
              84,
              95,
              69,
              77,
              65,
              73,
              76,
              95,
              83,
              69,
              78,
              84,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              98,
              111,
              121,
              100,
              46,
              98,
              101,
              99,
              107,
              101,
              114,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              49,
              97,
              57,
              52,
              56,
              53,
              57,
              45,
              56,
              98,
              53,
              56,
              45,
              52,
              50,
              54,
              98,
              45,
              57,
              53,
              52,
              100,
              45,
              55,
              102,
              102,
              55,
              56,
              57,
              98,
              56,
              54,
              56,
              53,
              53,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 114
        },
        "id": "0e57c293-133a-4366-b877-63d16f5ec840",
        "assertions": [
          {
            "assertion": "it should POST forgot",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "35ed8f59-ab22-450a-8c64-4240b12d0b3b",
          "length": 52,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0939426b-9cdf-49eb-82f5-07f0f8bea85e"
        },
        "item": {
          "_": {
            "postman_id": "95e34733-ee2b-4b27-8ba0-fe6d39b482fa"
          },
          "id": "95e34733-ee2b-4b27-8ba0-fe6d39b482fa",
          "name": "/reset",
          "request": {
            "description": {
              "content": "Resetovanje sa validnim passwordom i id-em. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "reset"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\": \"{{userVerification}}\",\r\n    \"password\": \"{{newRandomPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "7f0cf587-cc48-4277-aa7b-0e2b443d6ff5",
                "type": "text/javascript",
                "exec": [
                  "let newPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "pm.variables.set('newRandomPassword', newPassword);"
                ],
                "_lastExecutionId": "b7168e0b-4fa0-4c56-8db9-b3ca0e42f5a7"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b2d6c2a7-89de-47ee-8c52-f3d3ff21e32c",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should POST reset`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'msg' propery is missing (or has no required value)`).to.haveOwnProperty('msg').to.be.equal('PASSWORD_CHANGED');\r",
                  "});"
                ],
                "_lastExecutionId": "eece7457-cf76-40fb-b9b5-d002ecff4204"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Resetovanje sa validnim passwordom i id-em. ",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "reset"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b19a7243-89d0-41ca-9161-8854a0c8b8fe",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 90,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\": \"11a94859-8b58-426b-954d-7ff789b86855\",\r\n    \"password\": \"7_iM2iRaZHzZDFz\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "13c4880f-217e-4aeb-8d65-cf507bb0b0e3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "26"
            },
            {
              "key": "ETag",
              "value": "W/\"1a-8NMTb7T0mpAGXOVs0yAvyVZSkGQ\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              80,
              65,
              83,
              83,
              87,
              79,
              82,
              68,
              95,
              67,
              72,
              65,
              78,
              71,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 17,
          "responseSize": 26
        },
        "id": "95e34733-ee2b-4b27-8ba0-fe6d39b482fa",
        "assertions": [
          {
            "assertion": "It should POST reset",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a02c225e-f50b-4e3e-afbe-3ee6a7e019ec",
          "length": 52,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f37711f4-bb93-43cb-bc68-c72858947fde"
        },
        "item": {
          "_": {
            "postman_id": "99543dbd-6513-400e-b1c1-08c0ad45372e"
          },
          "id": "99543dbd-6513-400e-b1c1-08c0ad45372e",
          "name": "/token",
          "request": {
            "description": {
              "content": "Osvezavanje tokena ukoliko se ne salje stari token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "token"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d9efeda4-2f66-4e7a-b317-777a3289f317",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`it should NOT be able to consume the route since no token was sent`, () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "    pm.response.to.be.unauthorized;\r",
                  "});"
                ],
                "_lastExecutionId": "0db40569-2328-4d2d-92cb-66b1572a715f"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Osvezavanje tokena ukoliko se ne salje stari token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "token"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "075f8929-0d18-4a45-9f7d-6f7a7fcf4689",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "3dd9a0e3-d6cd-4802-b315-b505a81c5ed7",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 12
        },
        "id": "99543dbd-6513-400e-b1c1-08c0ad45372e",
        "assertions": [
          {
            "assertion": "it should NOT be able to consume the route since no token was sent",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bd587691-bf37-4374-bcbe-2f8449c46799",
          "length": 52,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "53ffb043-7acb-4a16-974a-a95b80d4a83f"
        },
        "item": {
          "_": {
            "postman_id": "053fab6e-d5b6-4d28-85a3-617b8a5d93ef"
          },
          "id": "053fab6e-d5b6-4d28-85a3-617b8a5d93ef",
          "name": "/token",
          "request": {
            "description": {
              "content": "Uspesno ozvezavanje tokena.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "token"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b02312b2-900b-4d67-aee3-693be50b40ac",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should GET a fresh token`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain token`).to.haveOwnProperty('token');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('userToken', response.token);"
                ],
                "_lastExecutionId": "b18cae06-5320-446a-ade2-594acd9896d7"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Uspesno ozvezavanje tokena.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "token"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f4584a3baad9f60036894251cde54f17e9416bd2ed94db4ade671e415839d7293fcb6635390ef76fbe2bebef6c0c786e86b095efcf3955854da35ac90dcb491cca08b4815247e8a8871610dcf57575d98dd37d783a0846ac7818f70568cc89ec0277a8050cf4ededaf3c032a109430858abba5b23bdb9b2a76128affd9ba9c6af",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4ac9f506-1884-4e89-b969-5b182237cb34",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f4584a3baad9f60036894251cde54f17e9416bd2ed94db4ade671e415839d7293fcb6635390ef76fbe2bebef6c0c786e86b095efcf3955854da35ac90dcb491cca08b4815247e8a8871610dcf57575d98dd37d783a0846ac7818f70568cc89ec0277a8050cf4ededaf3c032a109430858abba5b23bdb9b2a76128affd9ba9c6af",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "8a6726dd-20f7-4719-8d82-b1090497bf03",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "396"
            },
            {
              "key": "ETag",
              "value": "W/\"18c-EAHJBcCKBqnHSo5vKnUnF0acWGk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              102,
              99,
              102,
              51,
              102,
              55,
              56,
              49,
              51,
              56,
              102,
              54,
              49,
              102,
              101,
              54,
              50,
              55,
              51,
              100,
              98,
              100,
              49,
              100,
              54,
              99,
              48,
              53,
              102,
              49,
              53,
              101,
              51,
              48,
              52,
              57,
              54,
              100,
              55,
              97,
              48,
              56,
              53,
              57,
              49,
              57,
              98,
              98,
              99,
              100,
              99,
              102,
              49,
              49,
              102,
              50,
              55,
              49,
              100,
              99,
              101,
              99,
              102,
              98,
              53,
              54,
              52,
              99,
              100,
              48,
              57,
              97,
              101,
              56,
              56,
              55,
              55,
              101,
              100,
              101,
              56,
              102,
              48,
              98,
              50,
              57,
              101,
              100,
              101,
              50,
              97,
              49,
              99,
              98,
              102,
              99,
              49,
              53,
              101,
              102,
              50,
              54,
              57,
              100,
              102,
              52,
              57,
              51,
              48,
              50,
              52,
              49,
              53,
              100,
              54,
              52,
              102,
              101,
              99,
              51,
              100,
              102,
              57,
              101,
              56,
              49,
              102,
              52,
              53,
              56,
              52,
              97,
              51,
              98,
              97,
              97,
              100,
              57,
              102,
              54,
              48,
              48,
              51,
              54,
              56,
              57,
              52,
              50,
              53,
              49,
              99,
              100,
              101,
              53,
              52,
              102,
              49,
              55,
              101,
              57,
              52,
              49,
              54,
              98,
              100,
              50,
              101,
              100,
              57,
              52,
              100,
              98,
              52,
              97,
              100,
              101,
              54,
              55,
              49,
              101,
              52,
              49,
              53,
              56,
              51,
              57,
              100,
              55,
              50,
              57,
              51,
              102,
              99,
              98,
              54,
              54,
              51,
              53,
              51,
              57,
              48,
              101,
              102,
              55,
              54,
              102,
              98,
              101,
              50,
              98,
              101,
              98,
              101,
              102,
              54,
              99,
              48,
              99,
              55,
              56,
              54,
              101,
              56,
              54,
              98,
              48,
              57,
              53,
              101,
              102,
              99,
              102,
              51,
              57,
              53,
              53,
              56,
              53,
              52,
              100,
              97,
              51,
              53,
              97,
              99,
              57,
              48,
              100,
              99,
              98,
              52,
              57,
              49,
              99,
              99,
              97,
              48,
              56,
              98,
              52,
              56,
              49,
              53,
              50,
              52,
              55,
              101,
              56,
              97,
              56,
              56,
              55,
              49,
              54,
              49,
              48,
              100,
              99,
              102,
              53,
              55,
              53,
              55,
              53,
              100,
              57,
              56,
              100,
              100,
              51,
              55,
              100,
              55,
              56,
              51,
              97,
              48,
              56,
              52,
              54,
              97,
              99,
              55,
              56,
              49,
              56,
              102,
              55,
              48,
              53,
              54,
              56,
              99,
              99,
              56,
              57,
              101,
              99,
              48,
              50,
              55,
              55,
              97,
              56,
              48,
              53,
              48,
              99,
              102,
              52,
              101,
              100,
              101,
              100,
              97,
              102,
              51,
              99,
              48,
              51,
              50,
              97,
              49,
              48,
              57,
              52,
              51,
              48,
              56,
              53,
              56,
              97,
              98,
              98,
              97,
              53,
              98,
              50,
              51,
              98,
              100,
              98,
              57,
              98,
              50,
              97,
              55,
              54,
              49,
              50,
              56,
              97,
              102,
              102,
              100,
              57,
              98,
              97,
              57,
              99,
              54,
              97,
              102,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 18,
          "responseSize": 396
        },
        "id": "053fab6e-d5b6-4d28-85a3-617b8a5d93ef",
        "assertions": [
          {
            "assertion": "it should GET a fresh token",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f7776982-70aa-42ee-9c30-c8f2b49b7304",
          "length": 52,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9c5bd169-dfae-4134-bf46-76738a1f980d"
        },
        "item": {
          "_": {
            "postman_id": "8587e858-634e-4829-ba0f-bfeba7aa6ef1"
          },
          "id": "8587e858-634e-4829-ba0f-bfeba7aa6ef1",
          "name": "/users/{{id}}",
          "request": {
            "description": {
              "content": "Brisanje korisnika. Salje se admin token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "68f82da8-861b-4e41-a44f-fda23d16db5e",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', pm.environment.get(\"userId\"));\r",
                  ""
                ],
                "_lastExecutionId": "97a9d251-be4c-492c-8d00-eb8a11cc9790"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "097a83c3-6df8-4798-bd5c-174782f9aa78",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should DELETE a user given the id`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'msg' property (or corect message) is missing`).to.haveOwnProperty('msg').to.be.equal('DELETED');\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "cdda6e48-a913-4229-a8ac-19e1af363e83"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Brisanje korisnika. Salje se admin token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users",
              "5fbc369f0bcf1811a06559c2"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d662fe1b1b8aadd88b5fe2ad730a67a153fe2f9fba2015207fa45c0d4f44a123745a7cd8b48274bc8131564eac80cc0060d2ff44fb6f701371c749c06c7afb897e963e1cdac0f1e79d612ea9754c8cd0caa",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a90dfe9d-c395-4349-b8e5-0c80ff90be64",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d662fe1b1b8aadd88b5fe2ad730a67a153fe2f9fba2015207fa45c0d4f44a123745a7cd8b48274bc8131564eac80cc0060d2ff44fb6f701371c749c06c7afb897e963e1cdac0f1e79d612ea9754c8cd0caa",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b87449d0-6925-4826-8613-ffcbe290a72d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "ETag",
              "value": "W/\"11-1TLYp3hRJ+LTeGYiz9MECJYsCSc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              68,
              69,
              76,
              69,
              84,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 17
        },
        "id": "8587e858-634e-4829-ba0f-bfeba7aa6ef1",
        "assertions": [
          {
            "assertion": "it should DELETE a user given the id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "21bff85f-bf1e-4a8c-ae4f-6db3c249a6eb",
          "length": 52,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "96982de9-e3dc-47e2-9078-f9d7d181f713"
        },
        "item": {
          "_": {
            "postman_id": "ec080753-0e9a-4c04-b92b-7deb197d2954"
          },
          "id": "ec080753-0e9a-4c04-b92b-7deb197d2954",
          "name": "/login",
          "request": {
            "description": {
              "content": "Prijavljivanje kao administrator i cuvanje tokena za naredne api pozive.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"{{adminPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "22709736-faa5-4624-806a-cc1bb98a399b",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set('adminEmail', 'admin@admin.com');\r",
                  "pm.environment.set('adminPassword', '12345');"
                ],
                "_lastExecutionId": "caf7a750-329f-413b-a4bc-a4f3d4de1ad6"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8ba70e02-1f00-4298-aae1-ce5160905905",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should GET token (CITY)`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain token`).to.have.property('token');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('adminToken', response.token);"
                ],
                "_lastExecutionId": "34b4edd8-7a53-480d-bb3d-a1ea5e6d8c94"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Prijavljivanje kao administrator i cuvanje tokena za naredne api pozive.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5b7e6b1f-d34c-4ac3-b080-8e7b0c03291b",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 62,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"admin@admin.com\",\r\n    \"password\": \"12345\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "326d2c6a-0717-400c-a0c4-1ba872761c32",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "578"
            },
            {
              "key": "ETag",
              "value": "W/\"242-uswTKjEJkhez6fhR38HiYocGdno\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              102,
              99,
              102,
              51,
              102,
              55,
              56,
              49,
              51,
              56,
              102,
              54,
              49,
              102,
              101,
              54,
              50,
              55,
              51,
              100,
              98,
              100,
              49,
              100,
              54,
              99,
              48,
              53,
              102,
              49,
              53,
              101,
              51,
              48,
              52,
              57,
              54,
              100,
              55,
              97,
              48,
              56,
              53,
              57,
              49,
              57,
              98,
              98,
              99,
              100,
              99,
              102,
              49,
              49,
              102,
              50,
              55,
              49,
              100,
              99,
              101,
              99,
              102,
              98,
              53,
              54,
              52,
              99,
              100,
              48,
              57,
              97,
              101,
              56,
              56,
              55,
              55,
              101,
              100,
              101,
              56,
              102,
              48,
              98,
              50,
              57,
              101,
              100,
              101,
              50,
              97,
              49,
              99,
              98,
              102,
              48,
              52,
              100,
              101,
              50,
              48,
              97,
              51,
              98,
              56,
              49,
              101,
              56,
              98,
              53,
              102,
              57,
              52,
              50,
              55,
              48,
              52,
              101,
              57,
              57,
              55,
              48,
              54,
              56,
              56,
              57,
              101,
              57,
              52,
              98,
              55,
              53,
              57,
              52,
              98,
              102,
              56,
              53,
              99,
              97,
              49,
              50,
              100,
              101,
              101,
              57,
              51,
              100,
              99,
              48,
              57,
              55,
              48,
              99,
              55,
              57,
              97,
              54,
              50,
              101,
              57,
              49,
              48,
              51,
              53,
              100,
              98,
              102,
              97,
              102,
              53,
              48,
              51,
              100,
              98,
              99,
              101,
              102,
              100,
              98,
              49,
              97,
              52,
              57,
              101,
              97,
              101,
              49,
              57,
              56,
              51,
              55,
              57,
              100,
              53,
              51,
              100,
              52,
              52,
              55,
              99,
              50,
              54,
              97,
              102,
              48,
              98,
              101,
              57,
              97,
              48,
              98,
              54,
              54,
              49,
              53,
              52,
              57,
              56,
              49,
              100,
              54,
              54,
              51,
              102,
              98,
              52,
              53,
              99,
              51,
              98,
              49,
              53,
              100,
              52,
              55,
              56,
              51,
              97,
              57,
              56,
              98,
              49,
              51,
              56,
              54,
              52,
              55,
              53,
              98,
              55,
              53,
              52,
              55,
              101,
              100,
              99,
              57,
              100,
              97,
              98,
              55,
              56,
              50,
              57,
              98,
              51,
              49,
              102,
              51,
              99,
              57,
              102,
              52,
              102,
              99,
              57,
              99,
              51,
              56,
              48,
              98,
              49,
              55,
              100,
              55,
              51,
              56,
              57,
              97,
              102,
              54,
              49,
              50,
              50,
              51,
              52,
              57,
              97,
              56,
              98,
              57,
              100,
              49,
              51,
              51,
              57,
              98,
              98,
              102,
              48,
              101,
              54,
              48,
              57,
              49,
              56,
              55,
              51,
              49,
              49,
              53,
              56,
              48,
              101,
              51,
              98,
              102,
              102,
              51,
              55,
              99,
              100,
              101,
              52,
              54,
              54,
              50,
              97,
              51,
              101,
              57,
              97,
              57,
              57,
              56,
              99,
              101,
              49,
              100,
              102,
              100,
              51,
              55,
              52,
              102,
              99,
              55,
              53,
              51,
              57,
              50,
              57,
              97,
              54,
              48,
              97,
              99,
              101,
              100,
              56,
              52,
              98,
              100,
              51,
              54,
              97,
              48,
              54,
              55,
              100,
              53,
              98,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              97,
              97,
              49,
              99,
              50,
              99,
              51,
              53,
              101,
              102,
              55,
              97,
              52,
              101,
              57,
              55,
              98,
              53,
              101,
              57,
              57,
              53,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              117,
              112,
              101,
              114,
              32,
              65,
              100,
              109,
              105,
              110,
              105,
              115,
              116,
              114,
              97,
              116,
              111,
              114,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              64,
              97,
              100,
              109,
              105,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              100,
              54,
              101,
              48,
              55,
              50,
              99,
              45,
              48,
              101,
              97,
              102,
              45,
              52,
              50,
              51,
              57,
              45,
              98,
              98,
              53,
              101,
              45,
              52,
              57,
              53,
              101,
              54,
              52,
              56,
              54,
              49,
              52,
              56,
              102,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 18,
          "responseSize": 578
        },
        "id": "ec080753-0e9a-4c04-b92b-7deb197d2954",
        "assertions": [
          {
            "assertion": "It should GET token (CITY)",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8c743549-3dfe-405c-8b09-dcb7ecc82338",
          "length": 52,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "57c230d3-f90b-4595-a7c2-daba3312fe07"
        },
        "item": {
          "_": {
            "postman_id": "ca94cf9a-359c-4b74-9d6f-b3afd8ef3c94"
          },
          "id": "ca94cf9a-359c-4b74-9d6f-b3afd8ef3c94",
          "name": "/cities",
          "request": {
            "description": {
              "content": "Neuspesno citanje gradova (bez admin tokena).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a6507901-7503-4841-a166-941fb3d10bb2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`it should NOT be able to consume the route since no token was sent`, () => {\r",
                  "    pm.expect(pm.response.code, `[ERROR] Response don't have status 401`).to.equal(401);\r",
                  "    pm.response.to.be.unauthorized;\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "68ef93d0-c666-4747-ad9d-05a869244823"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Neuspesno citanje gradova (bez admin tokena).",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "260d66c5-22e4-4dd0-9012-cb2821aed561",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "1d8f2d95-d261-461c-8f31-5574e5765058",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:31 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 12
        },
        "id": "ca94cf9a-359c-4b74-9d6f-b3afd8ef3c94",
        "assertions": [
          {
            "assertion": "it should NOT be able to consume the route since no token was sent",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0276e5d8-a86c-4752-a8ea-7ca0ac6d976c",
          "length": 52,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4877ccb6-2963-4db1-8f55-ca8d74b0c71a"
        },
        "item": {
          "_": {
            "postman_id": "5f046aa3-2897-43db-9975-f7a5d010fdad"
          },
          "id": "5f046aa3-2897-43db-9975-f7a5d010fdad",
          "name": "/cities",
          "request": {
            "description": {
              "content": "Citanje kolekcije gradova.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "934416b1-8d99-4a8f-91c0-191457078a84",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should GET all the cities`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "});"
                ],
                "_lastExecutionId": "d8cd1f6d-6c15-4101-af14-b9744ec2d0ec"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Citanje kolekcije gradova.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6bfefc18-e696-4b49-82d6-c7f3e8bfbe0a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "976e57ce-3def-44d1-bb05-df1dccb33f5f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "806"
            },
            {
              "key": "ETag",
              "value": "W/\"326-MuLxb+YHCJOF37svKPEAPIC3E8A\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              111,
              99,
              115,
              34,
              58,
              91,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              104,
              105,
              99,
              97,
              103,
              111,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              49,
              57,
              84,
              50,
              50,
              58,
              52,
              55,
              58,
              52,
              50,
              46,
              53,
              53,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              48,
              50,
              58,
              49,
              56,
              58,
              53,
              50,
              46,
              48,
              56,
              48,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              98,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              111,
              103,
              111,
              116,
              195,
              161,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              49,
              51,
              84,
              49,
              54,
              58,
              48,
              48,
              58,
              50,
              54,
              46,
              51,
              50,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              49,
              84,
              50,
              50,
              58,
              48,
              53,
              58,
              51,
              52,
              46,
              57,
              54,
              51,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              56,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              97,
              110,
              32,
              70,
              114,
              97,
              110,
              99,
              105,
              115,
              99,
              111,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              48,
              45,
              49,
              51,
              84,
              48,
              54,
              58,
              49,
              57,
              58,
              51,
              52,
              46,
              56,
              55,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              49,
              49,
              58,
              53,
              48,
              58,
              49,
              56,
              46,
              57,
              56,
              48,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              57,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              78,
              101,
              119,
              32,
              89,
              111,
              114,
              107,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              50,
              49,
              58,
              49,
              50,
              58,
              50,
              54,
              46,
              57,
              54,
              53,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              48,
              49,
              58,
              50,
              53,
              58,
              51,
              53,
              46,
              48,
              56,
              53,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              99,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              117,
              99,
              97,
              114,
              97,
              109,
              97,
              110,
              103,
              97,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              54,
              45,
              50,
              56,
              84,
              49,
              51,
              58,
              53,
              50,
              58,
              48,
              53,
              46,
              48,
              48,
              54,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              48,
              57,
              58,
              48,
              50,
              58,
              48,
              53,
              46,
              52,
              56,
              57,
              90,
              34,
              125,
              93,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              68,
              111,
              99,
              115,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              53,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              50,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              105,
              110,
              103,
              67,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              58,
              49,
              44,
              34,
              104,
              97,
              115,
              80,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              104,
              97,
              115,
              78,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              112,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              50,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 806
        },
        "id": "5f046aa3-2897-43db-9975-f7a5d010fdad",
        "assertions": [
          {
            "assertion": "It should GET all the cities",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e46957f6-e5f9-48a0-91b2-bde564023eec",
          "length": 52,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "847fa612-a018-4a3d-a70f-de327a3a8d78"
        },
        "item": {
          "_": {
            "postman_id": "9782fcd1-510b-4dce-9d96-c395a26ce38d"
          },
          "id": "9782fcd1-510b-4dce-9d96-c395a26ce38d",
          "name": "/cities?filter=Bucaramanga&fields=name",
          "request": {
            "description": {
              "content": "Filtriranje gradova",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "key": "filter",
                  "value": "Bucaramanga"
                },
                {
                  "key": "fields",
                  "value": "name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3859f5d-1d17-445a-8806-b27d156d334d",
                "type": "text/javascript",
                "exec": [
                  "let schema = {\r",
                  "    \"type\": \"object\",\r",
                  "    \"properties\": {\r",
                  "        \"docs\": {\r",
                  "            \"type\": \"array\",\r",
                  "            \"items\": [\r",
                  "                {\r",
                  "                    \"type\": \"object\",\r",
                  "                    \"properties\": {\r",
                  "                        \"_id\": {\r",
                  "                            \"type\": \"string\"\r",
                  "                        },\r",
                  "                        \"name\": {\r",
                  "                            \"type\": \"string\"\r",
                  "                        },\r",
                  "                        \"createdAt\": {\r",
                  "                            \"type\": \"string\"\r",
                  "                        },\r",
                  "                        \"updatedAt\": {\r",
                  "                            \"type\": \"string\"\r",
                  "                        }\r",
                  "                    },\r",
                  "                    \"required\": [\r",
                  "                        \"_id\",\r",
                  "                        \"name\",\r",
                  "                        \"createdAt\",\r",
                  "                        \"updatedAt\"\r",
                  "                    ]\r",
                  "                }\r",
                  "            ]\r",
                  "        },\r",
                  "        \"totalDocs\": {\r",
                  "            \"type\": \"integer\"\r",
                  "        },\r",
                  "        \"limit\": {\r",
                  "            \"type\": \"integer\"\r",
                  "        },\r",
                  "        \"totalPages\": {\r",
                  "            \"type\": \"integer\"\r",
                  "        },\r",
                  "        \"page\": {\r",
                  "            \"type\": \"integer\"\r",
                  "        },\r",
                  "        \"pagingCounter\": {\r",
                  "            \"type\": \"integer\"\r",
                  "        },\r",
                  "        \"hasPrevPage\": {\r",
                  "            \"type\": \"boolean\"\r",
                  "        },\r",
                  "        \"hasNextPage\": {\r",
                  "            \"type\": \"boolean\"\r",
                  "        },\r",
                  "        \"prevPage\": {\r",
                  "            \"type\": \"null\"\r",
                  "        },\r",
                  "        \"nextPage\": {\r",
                  "            \"type\": \"null\"\r",
                  "        }\r",
                  "    },\r",
                  "    \"required\": [\r",
                  "        \"docs\",\r",
                  "        \"totalDocs\",\r",
                  "        \"limit\",\r",
                  "        \"totalPages\",\r",
                  "        \"page\",\r",
                  "        \"pagingCounter\",\r",
                  "        \"hasPrevPage\",\r",
                  "        \"hasNextPage\",\r",
                  "        \"prevPage\",\r",
                  "        \"nextPage\"\r",
                  "    ]\r",
                  "}\r",
                  "\r",
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should GET the cities with filters`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Schema is invalid`).to.have.jsonSchema(schema);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response).to.haveOwnProperty('docs').to.be.an('array');\r",
                  "    pm.expect(response.docs[0].name, `[ERROR] City 'name' is not correct`).to.be.equal('Bucaramanga');\r",
                  "});\r",
                  "\r",
                  "pm.test(`Response time is less than 200ms`,  () => {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});"
                ],
                "_lastExecutionId": "55fa12a2-ea11-4ff1-be7f-1eec813b7fe3"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Filtriranje gradova",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "filter",
                "value": "Bucaramanga"
              },
              {
                "key": "fields",
                "value": "name"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1ffd4cff-09f7-4dd2-95d8-3d80eb7050ce",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "920cb51f-e8e3-4c46-a3ed-3f1d731f2891",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "282"
            },
            {
              "key": "ETag",
              "value": "W/\"11a-8sE8xnKjsX1ZKpSUjE5KcwHGeM0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              111,
              99,
              115,
              34,
              58,
              91,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              99,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              117,
              99,
              97,
              114,
              97,
              109,
              97,
              110,
              103,
              97,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              54,
              45,
              50,
              56,
              84,
              49,
              51,
              58,
              53,
              50,
              58,
              48,
              53,
              46,
              48,
              48,
              54,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              48,
              57,
              58,
              48,
              50,
              58,
              48,
              53,
              46,
              52,
              56,
              57,
              90,
              34,
              125,
              93,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              68,
              111,
              99,
              115,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              53,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              105,
              110,
              103,
              67,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              58,
              49,
              44,
              34,
              104,
              97,
              115,
              80,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              104,
              97,
              115,
              78,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              112,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 282
        },
        "id": "9782fcd1-510b-4dce-9d96-c395a26ce38d",
        "assertions": [
          {
            "assertion": "it should GET the cities with filters",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "92da85df-2176-4fab-af79-e542fd95cdfd",
          "length": 52,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e154de57-03e0-4873-bf36-d57b3c90c27c"
        },
        "item": {
          "_": {
            "postman_id": "1fc0a15b-789a-4627-9b4f-a12e3643d1fd"
          },
          "id": "1fc0a15b-789a-4627-9b4f-a12e3643d1fd",
          "name": "/cities",
          "request": {
            "description": {
              "content": "Kreiranje grada kada se ne salje naziv grada.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "072ea1e6-d56a-435f-971e-28d949022da2",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT POST a city without name`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not have 'errors' property`).to.haveOwnProperty('errors');\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "28021033-c9ca-44c1-a293-b1f5c6db523e"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Kreiranje grada kada se ne salje naziv grada.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "389f7cc5-3d49-4169-8406-3a081187ad31",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 0,
              "system": true
            }
          ],
          "method": "POST",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "890a8b88-026d-49cf-96fd-c84c295292bb",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "123"
            },
            {
              "key": "ETag",
              "value": "W/\"7b-5ZTGjP7CGpH0eqI7sobPdDIWm+g\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              91,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              77,
              73,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              73,
              83,
              95,
              69,
              77,
              80,
              84,
              89,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 123
        },
        "id": "1fc0a15b-789a-4627-9b4f-a12e3643d1fd",
        "assertions": [
          {
            "assertion": "it should NOT POST a city without name",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7c142b55-dd96-4a28-860f-26dc0ff9c75d",
          "length": 52,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d8288d32-8c27-40c8-80fb-3713a63c7876"
        },
        "item": {
          "_": {
            "postman_id": "24e36400-146f-41fc-b327-68f4003cc34d"
          },
          "id": "24e36400-146f-41fc-b327-68f4003cc34d",
          "name": "/cities",
          "request": {
            "description": {
              "content": "Kreiranje grada.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randomCityName}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "06ec49a3-6d2b-49e6-9f88-2af53ac36090",
                "type": "text/javascript",
                "exec": [
                  "let randomCityName = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "\r",
                  "pm.variables.set('randomCityName', randomCityName);"
                ],
                "_lastExecutionId": "ecea5dc1-1a89-4e00-9325-9e4e44b5b287"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "71bcff7b-f9dd-4823-81dc-e41e29cb5b12",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should POST a city`, () => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'name' property is missing`).to.haveOwnProperty('name');\r",
                  "    pm.expect(response, `[ERROR] '_id' property is missing`).to.have.property('_id');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('cityId', response._id);\r",
                  "pm.environment.set('cityName', response.name);"
                ],
                "_lastExecutionId": "5f57e50b-fa9a-4cca-b2f8-e98d9d0874b3"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Kreiranje grada.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e3ac7e39-f5bc-4b99-987c-0b32d3bab8be",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 29,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Arielfurt\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b2fc0f73-6c49-4da3-b6a8-75c30d89c8fe",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "131"
            },
            {
              "key": "ETag",
              "value": "W/\"83-8AJClmi8hEfIL2vGDvrr2TSOL2g\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              48,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              114,
              105,
              101,
              108,
              102,
              117,
              114,
              116,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              50,
              46,
              51,
              56,
              51,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              50,
              46,
              51,
              56,
              51,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 131
        },
        "id": "24e36400-146f-41fc-b327-68f4003cc34d",
        "assertions": [
          {
            "assertion": "it should POST a city",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9ab7c7bf-7c40-4d3a-9237-cf6aef5ff558",
          "length": 52,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b4f2c7ed-bf08-455e-9bc9-d27dbe3a6c89"
        },
        "item": {
          "_": {
            "postman_id": "5e78d723-5922-479e-aad6-82aa6a57fd69"
          },
          "id": "5e78d723-5922-479e-aad6-82aa6a57fd69",
          "name": "/cities",
          "request": {
            "description": {
              "content": "Kreiranje grada sa vec postojecim imenom.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{cityName}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e449178d-f578-481c-9e6f-ebc92f0cfc85",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT POST a city that already exists`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.have.property('errors');\r",
                  "    pm.expect(response.errors.msg, `[ERROR] Message is incorrect!`).to.be.equal('CITY_ALREADY_EXISTS');\r",
                  "});"
                ],
                "_lastExecutionId": "d1d43002-c291-412d-8263-79a2b2c86f12"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Kreiranje grada sa vec postojecim imenom.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3cc58f51-9940-452c-a67f-6f8a0597bedb",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 29,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Arielfurt\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0552b4ce-6f6c-4dca-9015-78d43a9dcba5",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "40"
            },
            {
              "key": "ETag",
              "value": "W/\"28-CG2u/QOskDfP13430p2x6Gw4TTU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              67,
              73,
              84,
              89,
              95,
              65,
              76,
              82,
              69,
              65,
              68,
              89,
              95,
              69,
              88,
              73,
              83,
              84,
              83,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 40
        },
        "id": "5e78d723-5922-479e-aad6-82aa6a57fd69",
        "assertions": [
          {
            "assertion": "it should NOT POST a city that already exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "75c19958-f336-4ed5-890e-fe48437417ae",
          "length": 52,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0e69535b-454f-455f-ae43-9e91d3873382"
        },
        "item": {
          "_": {
            "postman_id": "4772ceb8-c60e-4271-838d-b8cc652bc365"
          },
          "id": "4772ceb8-c60e-4271-838d-b8cc652bc365",
          "name": "/cities/{{id}}",
          "request": {
            "description": {
              "content": "Citanje grada.\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "07470ecd-e50e-4712-8d86-6aca305276bb",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', pm.environment.get(\"cityId\"));\r",
                  ""
                ],
                "_lastExecutionId": "eae7fd14-c75b-4ea1-937f-889261bfbf55"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "796f3e50-2474-46e7-8009-ce7fb888de5e",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT POST a city that already exists`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'name' property is missing`).to.have.property('name');\r",
                  "    pm.expect(response, `[ERROR] '_id' property is missing/or incorrect`).to.have.property('_id');\r",
                  "    pm.expect(pm.variables.get('id'), `[ERROR] 'ID' does not match`).to.be.equal(response._id);\r",
                  "});"
                ],
                "_lastExecutionId": "557a9c70-69f5-4945-b567-7886260f26ee"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Citanje grada.\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities",
              "5fbc36a00bcf1811a06559c6"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "376ebe2d-8a0d-4584-8576-3c6d861c4b0a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "96de8303-42eb-4442-a33e-1598cbacb652",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "131"
            },
            {
              "key": "ETag",
              "value": "W/\"83-8AJClmi8hEfIL2vGDvrr2TSOL2g\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              48,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              114,
              105,
              101,
              108,
              102,
              117,
              114,
              116,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              50,
              46,
              51,
              56,
              51,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              50,
              46,
              51,
              56,
              51,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 131
        },
        "id": "4772ceb8-c60e-4271-838d-b8cc652bc365",
        "assertions": [
          {
            "assertion": "it should NOT POST a city that already exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "474c90af-9ac1-44fe-99e2-700844bd37d9",
          "length": 52,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9d3aa1d5-3499-4b61-8207-0dc2e26e03d0"
        },
        "item": {
          "_": {
            "postman_id": "6a23a6e6-ede9-4ced-9747-d71a1a96eb35"
          },
          "id": "6a23a6e6-ede9-4ced-9747-d71a1a96eb35",
          "name": "/cities/{{id}}",
          "request": {
            "description": {
              "content": "Azuriranje grada.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\" : \"{{newRandomCityName}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fbf8a4d3-148a-4870-b2b3-039003d9b4f4",
                "type": "text/javascript",
                "exec": [
                  "let newRandomCityName = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "\r",
                  "pm.variables.set('newRandomCityName', newRandomCityName);\r",
                  "\r",
                  "pm.variables.set('id', pm.environment.get(\"cityId\"));"
                ],
                "_lastExecutionId": "d877a048-5a41-47bc-8efd-e056e2344f89"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "6536abfc-7cc2-4d00-b881-f7a522d81532",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should UPDATE a city given the id`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "\r",
                  "    pm.expect(response, `[ERROR] '_id' property is missing/or incorrect`).to.have.property('_id');\r",
                  "    pm.expect(pm.variables.get('id'), `[ERROR] 'ID' does not match`).to.be.equal(response._id);\r",
                  "\r",
                  "    pm.expect(response, `[ERROR] 'name' property is missing/or incorrect`).to.have.property('name');\r",
                  "    pm.expect(pm.variables.get('newRandomCityName'), `[ERROR] 'name' does not match`).to.be.equal(response.name);\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('cityName', response.name);"
                ],
                "_lastExecutionId": "836f22bb-f8cd-4148-870c-967843e893fd"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Azuriranje grada.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities",
              "5fbc36a00bcf1811a06559c6"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c570aaab-86c6-420c-ae9a-306ff1c88566",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 34,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\" : \"Catalinamouth\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "cea50fb2-4182-4280-aff5-5b00c64e86f7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "135"
            },
            {
              "key": "ETag",
              "value": "W/\"87-gOkWeQGS6ERNCxoM5zJr1jsnFyo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              48,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              97,
              116,
              97,
              108,
              105,
              110,
              97,
              109,
              111,
              117,
              116,
              104,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              50,
              46,
              51,
              56,
              51,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              50,
              46,
              54,
              53,
              50,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 16,
          "responseSize": 135
        },
        "id": "6a23a6e6-ede9-4ced-9747-d71a1a96eb35",
        "assertions": [
          {
            "assertion": "it should UPDATE a city given the id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b33cab92-dc07-4fe6-9873-696303a406a1",
          "length": 52,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c16787b5-2d68-4a08-bb94-32c83dec4733"
        },
        "item": {
          "_": {
            "postman_id": "3082d779-4d7d-4669-8fc6-3417a53c57ae"
          },
          "id": "3082d779-4d7d-4669-8fc6-3417a53c57ae",
          "name": "/cities/{{id}}",
          "request": {
            "description": {
              "content": "Brisanje grada.\r\n                ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "0d678cab-1f74-4ac3-868c-ac46d4adc574",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', pm.environment.get(\"cityId\"));\r",
                  ""
                ],
                "_lastExecutionId": "8de59562-1d97-4237-b3ed-cf423bc8a212"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "667a1b16-ca29-45f5-95aa-c576c16aa098",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should DELETE a city given the id`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'msg' property is missing`).to.have.property('msg');\r",
                  "    pm.expect(response.msg, `[ERROR] Message is incorrect!`).to.be.equal('DELETED');\r",
                  "});"
                ],
                "_lastExecutionId": "df612aa2-db24-4e32-bdd1-8cf41a69b14f"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Brisanje grada.\r\n                ",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities",
              "5fbc36a00bcf1811a06559c6"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b3349d26-e1c0-4732-ae93-429042faa74c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0ae5e45c-7f56-4467-8e40-c865fc49e056",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "ETag",
              "value": "W/\"11-1TLYp3hRJ+LTeGYiz9MECJYsCSc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              68,
              69,
              76,
              69,
              84,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 17
        },
        "id": "3082d779-4d7d-4669-8fc6-3417a53c57ae",
        "assertions": [
          {
            "assertion": "it should DELETE a city given the id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d555663c-67f8-49ae-b46a-69c54aa387c0",
          "length": 52,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "25c267a3-85e1-487f-a573-073d1dd306df"
        },
        "item": {
          "_": {
            "postman_id": "941218d0-dadf-4759-86de-bb190cedde45"
          },
          "id": "941218d0-dadf-4759-86de-bb190cedde45",
          "name": "/cities?sort=name&order=1",
          "request": {
            "description": {
              "content": "Sortiranje gradova.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "key": "sort",
                  "value": "name"
                },
                {
                  "key": "order",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7bd2b5f-9d21-4fe9-b0f3-714cf08cf1ad",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "let names = [];\r",
                  "response.docs.forEach(item => names.push(item.name));\r",
                  "\r",
                  "let sortedNames = [...names].sort();\r",
                  "\r",
                  "pm.test(`Cities should be sorted by name`, () => {\r",
                  "    pm.expect(sortedNames, `[ERROR] Cities are not properly sorted`).to.eql(names);\r",
                  "});"
                ],
                "_lastExecutionId": "f0d64387-5fb8-4a61-9bab-ed009699a9dc"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Sortiranje gradova.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "sort",
                "value": "name"
              },
              {
                "key": "order",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0ee85bbf-a51a-43e9-86ca-d9b9e3a7d9d0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "dd7aedb0-e4de-4d41-b927-1734b9a98561",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "801"
            },
            {
              "key": "ETag",
              "value": "W/\"321-/j3o3Kf741S0hOr1mw3ugK3K/Cs\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              111,
              99,
              115,
              34,
              58,
              91,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              52,
              48,
              49,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              97,
              114,
              114,
              97,
              110,
              113,
              117,
              105,
              108,
              108,
              97,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              53,
              45,
              49,
              52,
              84,
              50,
              50,
              58,
              50,
              50,
              58,
              50,
              50,
              46,
              52,
              57,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              49,
              54,
              58,
              49,
              51,
              58,
              49,
              57,
              46,
              56,
              55,
              49,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              98,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              111,
              103,
              111,
              116,
              195,
              161,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              49,
              51,
              84,
              49,
              54,
              58,
              48,
              48,
              58,
              50,
              54,
              46,
              51,
              50,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              49,
              84,
              50,
              50,
              58,
              48,
              53,
              58,
              51,
              52,
              46,
              57,
              54,
              51,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              99,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              117,
              99,
              97,
              114,
              97,
              109,
              97,
              110,
              103,
              97,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              54,
              45,
              50,
              56,
              84,
              49,
              51,
              58,
              53,
              50,
              58,
              48,
              53,
              46,
              48,
              48,
              54,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              48,
              57,
              58,
              48,
              50,
              58,
              48,
              53,
              46,
              52,
              56,
              57,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              52,
              48,
              48,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              97,
              108,
              105,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              50,
              45,
              49,
              50,
              84,
              50,
              50,
              58,
              48,
              49,
              58,
              50,
              55,
              46,
              48,
              51,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              49,
              48,
              58,
              49,
              55,
              58,
              50,
              53,
              46,
              48,
              55,
              51,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              104,
              105,
              99,
              97,
              103,
              111,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              49,
              57,
              84,
              50,
              50,
              58,
              52,
              55,
              58,
              52,
              50,
              46,
              53,
              53,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              48,
              50,
              58,
              49,
              56,
              58,
              53,
              50,
              46,
              48,
              56,
              48,
              90,
              34,
              125,
              93,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              68,
              111,
              99,
              115,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              53,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              50,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              105,
              110,
              103,
              67,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              58,
              49,
              44,
              34,
              104,
              97,
              115,
              80,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              104,
              97,
              115,
              78,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              112,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              50,
              125
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 801
        },
        "id": "941218d0-dadf-4759-86de-bb190cedde45",
        "assertions": [
          {
            "assertion": "Cities should be sorted by name",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3671731f-3a1e-426c-8c54-2b19c1786661",
          "length": 52,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "32465248-0942-44d4-8175-17671f31d80d"
        },
        "item": {
          "_": {
            "postman_id": "e45d86ce-fc72-43a7-977a-46abf02bb8e4"
          },
          "id": "e45d86ce-fc72-43a7-977a-46abf02bb8e4",
          "name": "/cities?limit=3 ",
          "request": {
            "description": {
              "content": "Prikaz 3 grada",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "cities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "{{limit}}"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "205efc13-0734-4422-8244-377882ddbfb5",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "let getlimit = () => {\r",
                  "    let str = JSON.stringify(pm.request.url.query);\r",
                  "    let obj = JSON.parse(str);\r",
                  "    return obj[0].value;\r",
                  "}\r",
                  "\r",
                  "pm.test(`Only three are displayed`, () => {\r",
                  "    pm.expect((response.docs).length, `[ERROR] The number of displayed users is incorrect`) ==(getlimit());\r",
                  "});"
                ],
                "_lastExecutionId": "0ce8b31f-5adf-4619-a807-8e5d87e7e6cd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d3a18638-0a91-4e33-a090-04f7f4b83060",
                "type": "text/javascript",
                "exec": [
                  "let limit = 2;\r",
                  "pm.variables.set('limit', limit);"
                ],
                "_lastExecutionId": "0c256ebe-5291-4beb-a2c6-c05de02e45de"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Prikaz 3 grada",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "cities"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "limit",
                "value": "2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "723c76d9-3b67-40fd-be71-b0b4ea2d041c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "72be3838-9981-4253-b6c7-30c0a9f559f6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "405"
            },
            {
              "key": "ETag",
              "value": "W/\"195-3Dywv3ePXZ+uO0t1DwzmsKJEY+A\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:32 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              111,
              99,
              115,
              34,
              58,
              91,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              104,
              105,
              99,
              97,
              103,
              111,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              49,
              57,
              84,
              50,
              50,
              58,
              52,
              55,
              58,
              52,
              50,
              46,
              53,
              53,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              48,
              50,
              58,
              49,
              56,
              58,
              53,
              50,
              46,
              48,
              56,
              48,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              97,
              57,
              57,
              97,
              101,
              56,
              50,
              48,
              50,
              101,
              50,
              49,
              50,
              99,
              56,
              50,
              51,
              99,
              51,
              102,
              98,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              111,
              103,
              111,
              116,
              195,
              161,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              49,
              51,
              84,
              49,
              54,
              58,
              48,
              48,
              58,
              50,
              54,
              46,
              51,
              50,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              49,
              84,
              50,
              50,
              58,
              48,
              53,
              58,
              51,
              52,
              46,
              57,
              54,
              51,
              90,
              34,
              125,
              93,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              68,
              111,
              99,
              115,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              50,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              53,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              105,
              110,
              103,
              67,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              58,
              49,
              44,
              34,
              104,
              97,
              115,
              80,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              104,
              97,
              115,
              78,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              112,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              50,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 405
        },
        "id": "e45d86ce-fc72-43a7-977a-46abf02bb8e4",
        "assertions": [
          {
            "assertion": "Only three are displayed",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "183ba25e-1c2d-421d-b8d2-c233bd80ba98",
          "length": 52,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f8cf1b04-651f-4943-ab56-17f594cdca36"
        },
        "item": {
          "_": {
            "postman_id": "ce5a64d1-74f0-45d4-b78f-de744da3d154"
          },
          "id": "ce5a64d1-74f0-45d4-b78f-de744da3d154",
          "name": "/register",
          "request": {
            "description": {
              "content": "Kreiranje korisnika koji ce se dalje koristiti u profile testovima.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "register"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{randomName}}\",\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"password\": \"{{randomPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "97a00356-77e2-4738-81ab-80ff85d14f00",
                "type": "text/javascript",
                "exec": [
                  "let randomUsername = pm.variables.replaceIn('{{$randomUserName}}');\r",
                  "let randomEmail = pm.variables.replaceIn('{{$randomEmail}}');\r",
                  "let randomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "pm.variables.set(\"randomName\", randomUsername);\r",
                  "pm.variables.set(\"randomEmail\", randomEmail);\r",
                  "pm.variables.set(\"randomPassword\", randomPassword);\r",
                  "\r",
                  "pm.environment.set(\"userPassword\", randomPassword)\r",
                  ""
                ],
                "_lastExecutionId": "3704a928-afd8-4e7b-9c48-59ea3f0d433e"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "46a7f4da-d108-4c26-8b71-8e1400fc6ecd",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should POST user`, () => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('userEmail', response.user.email);\r",
                  "pm.environment.set('userId', response.user._id); "
                ],
                "_lastExecutionId": "13308654-2872-44ce-9134-04420fbf9e7a"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Kreiranje korisnika koji ce se dalje koristiti u profile testovima.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "register"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b743b0a3-8233-4ced-ae97-d77f2e3aff77",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 106,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Mae76\",\r\n    \"email\": \"Schuyler_OKon97@hotmail.com\",\r\n    \"password\": \"SZnKuF6khShC20R\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "5b387d8e-cad3-44e6-9bcb-d9d26fb5e46a",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "576"
            },
            {
              "key": "ETag",
              "value": "W/\"240-OyBILn8CgoTBto2ky1tzIPhcJCg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              102,
              99,
              102,
              51,
              102,
              55,
              56,
              49,
              51,
              56,
              102,
              54,
              49,
              102,
              101,
              54,
              50,
              55,
              51,
              100,
              98,
              100,
              49,
              100,
              54,
              99,
              48,
              53,
              102,
              49,
              53,
              101,
              51,
              48,
              52,
              57,
              54,
              100,
              55,
              97,
              48,
              56,
              53,
              57,
              49,
              57,
              98,
              98,
              99,
              100,
              99,
              102,
              49,
              49,
              102,
              50,
              55,
              49,
              100,
              99,
              101,
              99,
              102,
              98,
              53,
              54,
              52,
              99,
              100,
              48,
              57,
              97,
              101,
              56,
              56,
              55,
              55,
              101,
              100,
              101,
              56,
              102,
              48,
              98,
              50,
              57,
              101,
              100,
              101,
              50,
              97,
              49,
              99,
              98,
              102,
              99,
              49,
              53,
              101,
              102,
              50,
              54,
              57,
              100,
              102,
              52,
              57,
              51,
              48,
              50,
              52,
              49,
              53,
              100,
              54,
              52,
              102,
              101,
              99,
              51,
              100,
              102,
              57,
              101,
              56,
              49,
              102,
              50,
              57,
              53,
              98,
              98,
              97,
              56,
              52,
              50,
              50,
              56,
              51,
              52,
              102,
              52,
              48,
              97,
              49,
              49,
              99,
              99,
              55,
              57,
              54,
              53,
              99,
              102,
              99,
              102,
              49,
              97,
              52,
              52,
              52,
              55,
              55,
              101,
              57,
              56,
              57,
              101,
              97,
              52,
              52,
              54,
              55,
              57,
              57,
              99,
              52,
              99,
              48,
              48,
              102,
              99,
              102,
              98,
              54,
              98,
              57,
              51,
              51,
              100,
              49,
              100,
              101,
              97,
              54,
              54,
              97,
              55,
              99,
              102,
              101,
              49,
              101,
              101,
              53,
              102,
              102,
              57,
              99,
              54,
              54,
              101,
              54,
              56,
              48,
              55,
              52,
              99,
              97,
              99,
              54,
              50,
              100,
              97,
              50,
              57,
              52,
              101,
              57,
              49,
              50,
              57,
              98,
              99,
              97,
              54,
              101,
              55,
              49,
              52,
              98,
              55,
              56,
              99,
              57,
              101,
              57,
              50,
              54,
              54,
              56,
              97,
              98,
              50,
              97,
              102,
              56,
              50,
              97,
              53,
              50,
              99,
              100,
              57,
              102,
              50,
              50,
              54,
              55,
              101,
              50,
              55,
              57,
              57,
              99,
              48,
              102,
              52,
              49,
              98,
              98,
              99,
              53,
              100,
              52,
              101,
              55,
              99,
              55,
              53,
              54,
              57,
              53,
              48,
              100,
              54,
              99,
              48,
              100,
              57,
              55,
              101,
              48,
              98,
              49,
              55,
              100,
              102,
              98,
              99,
              57,
              99,
              48,
              100,
              52,
              97,
              52,
              101,
              56,
              54,
              57,
              98,
              53,
              56,
              101,
              51,
              98,
              56,
              50,
              49,
              101,
              55,
              49,
              102,
              100,
              51,
              48,
              101,
              101,
              49,
              99,
              51,
              57,
              53,
              97,
              56,
              100,
              55,
              100,
              53,
              54,
              55,
              97,
              98,
              97,
              55,
              55,
              97,
              101,
              50,
              51,
              100,
              53,
              102,
              54,
              50,
              98,
              97,
              56,
              54,
              54,
              51,
              100,
              97,
              54,
              97,
              101,
              48,
              49,
              56,
              99,
              51,
              98,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              49,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              55,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              101,
              55,
              54,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              115,
              99,
              104,
              117,
              121,
              108,
              101,
              114,
              95,
              111,
              107,
              111,
              110,
              57,
              55,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              53,
              54,
              101,
              52,
              98,
              49,
              56,
              45,
              100,
              97,
              99,
              57,
              45,
              52,
              49,
              57,
              50,
              45,
              98,
              100,
              56,
              102,
              45,
              53,
              100,
              99,
              56,
              98,
              51,
              50,
              52,
              49,
              55,
              52,
              53,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 576
        },
        "id": "ce5a64d1-74f0-45d4-b78f-de744da3d154",
        "assertions": [
          {
            "assertion": "It should POST user",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1df01a88-b637-4b01-a01c-b91d465eeff6",
          "length": 52,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "55b395b5-ce0a-41cd-9ae3-8ad849d50fd3"
        },
        "item": {
          "_": {
            "postman_id": "560f6cff-25d5-4889-add6-f86439877dac"
          },
          "id": "560f6cff-25d5-4889-add6-f86439877dac",
          "name": "/login",
          "request": {
            "description": {
              "content": "Testiranje prijavljivanja sa validnim podacima za prijavu.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "acceae89-143f-4f33-af69-81d2254b9c5c",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should GET token (PROFILE)`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain token`).to.have.property('token');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('userToken', response.token);"
                ],
                "_lastExecutionId": "9d4e8d90-0f03-40cd-8af6-c107ad23a941"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje prijavljivanja sa validnim podacima za prijavu.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f3a380cf-3b7f-47cd-b131-7c476ec2d550",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 86,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"schuyler_okon97@hotmail.com\",\r\n    \"password\": \"SZnKuF6khShC20R\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9bf52afc-4e28-40cf-85b6-f06dc96270a1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "576"
            },
            {
              "key": "ETag",
              "value": "W/\"240-OyBILn8CgoTBto2ky1tzIPhcJCg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              102,
              99,
              102,
              51,
              102,
              55,
              56,
              49,
              51,
              56,
              102,
              54,
              49,
              102,
              101,
              54,
              50,
              55,
              51,
              100,
              98,
              100,
              49,
              100,
              54,
              99,
              48,
              53,
              102,
              49,
              53,
              101,
              51,
              48,
              52,
              57,
              54,
              100,
              55,
              97,
              48,
              56,
              53,
              57,
              49,
              57,
              98,
              98,
              99,
              100,
              99,
              102,
              49,
              49,
              102,
              50,
              55,
              49,
              100,
              99,
              101,
              99,
              102,
              98,
              53,
              54,
              52,
              99,
              100,
              48,
              57,
              97,
              101,
              56,
              56,
              55,
              55,
              101,
              100,
              101,
              56,
              102,
              48,
              98,
              50,
              57,
              101,
              100,
              101,
              50,
              97,
              49,
              99,
              98,
              102,
              99,
              49,
              53,
              101,
              102,
              50,
              54,
              57,
              100,
              102,
              52,
              57,
              51,
              48,
              50,
              52,
              49,
              53,
              100,
              54,
              52,
              102,
              101,
              99,
              51,
              100,
              102,
              57,
              101,
              56,
              49,
              102,
              50,
              57,
              53,
              98,
              98,
              97,
              56,
              52,
              50,
              50,
              56,
              51,
              52,
              102,
              52,
              48,
              97,
              49,
              49,
              99,
              99,
              55,
              57,
              54,
              53,
              99,
              102,
              99,
              102,
              49,
              97,
              52,
              52,
              52,
              55,
              55,
              101,
              57,
              56,
              57,
              101,
              97,
              52,
              52,
              54,
              55,
              57,
              57,
              99,
              52,
              99,
              48,
              48,
              102,
              99,
              102,
              98,
              54,
              98,
              57,
              51,
              51,
              100,
              49,
              100,
              101,
              97,
              54,
              54,
              97,
              55,
              99,
              102,
              101,
              49,
              101,
              101,
              53,
              102,
              102,
              57,
              99,
              54,
              54,
              101,
              54,
              56,
              48,
              55,
              52,
              99,
              97,
              99,
              54,
              50,
              100,
              97,
              50,
              57,
              52,
              101,
              57,
              49,
              50,
              57,
              98,
              99,
              97,
              54,
              101,
              55,
              49,
              52,
              98,
              55,
              56,
              99,
              57,
              101,
              57,
              50,
              54,
              54,
              56,
              97,
              98,
              50,
              97,
              102,
              56,
              50,
              97,
              53,
              50,
              99,
              100,
              57,
              102,
              50,
              50,
              54,
              55,
              101,
              50,
              55,
              57,
              57,
              99,
              48,
              102,
              52,
              49,
              98,
              98,
              99,
              53,
              100,
              52,
              101,
              55,
              99,
              55,
              53,
              54,
              57,
              53,
              48,
              100,
              54,
              99,
              48,
              100,
              57,
              55,
              101,
              48,
              98,
              49,
              55,
              100,
              102,
              98,
              99,
              57,
              99,
              48,
              100,
              52,
              97,
              52,
              101,
              56,
              54,
              57,
              98,
              53,
              56,
              101,
              51,
              98,
              56,
              50,
              49,
              101,
              55,
              49,
              102,
              100,
              51,
              48,
              101,
              101,
              49,
              99,
              51,
              57,
              53,
              97,
              56,
              100,
              55,
              100,
              53,
              54,
              55,
              97,
              98,
              97,
              55,
              55,
              97,
              101,
              50,
              51,
              100,
              53,
              102,
              54,
              50,
              98,
              97,
              56,
              54,
              54,
              51,
              100,
              97,
              54,
              97,
              101,
              48,
              49,
              56,
              99,
              51,
              98,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              49,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              55,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              101,
              55,
              54,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              115,
              99,
              104,
              117,
              121,
              108,
              101,
              114,
              95,
              111,
              107,
              111,
              110,
              57,
              55,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              53,
              54,
              101,
              52,
              98,
              49,
              56,
              45,
              100,
              97,
              99,
              57,
              45,
              52,
              49,
              57,
              50,
              45,
              98,
              100,
              56,
              102,
              45,
              53,
              100,
              99,
              56,
              98,
              51,
              50,
              52,
              49,
              55,
              52,
              53,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 15,
          "responseSize": 576
        },
        "id": "560f6cff-25d5-4889-add6-f86439877dac",
        "assertions": [
          {
            "assertion": "It should GET token (PROFILE)",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5c682461-c6af-4f4c-a19c-6e8979daa763",
          "length": 52,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a417ff4f-32cd-4ca5-94dc-6f164e84a998"
        },
        "item": {
          "_": {
            "postman_id": "30e82351-8def-475c-bc19-77dbce1bdb96"
          },
          "id": "30e82351-8def-475c-bc19-77dbce1bdb96",
          "name": "/profile",
          "request": {
            "description": {
              "content": "Pokusaj citanja podataka za ulogovanog korisnika ukoliko se token ne salje kao deo requesta.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "profile"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "80fa2abf-ae48-40a2-aae3-234333266661",
                "type": "text/javascript",
                "exec": [
                  "pm.test(`it should NOT be able to consume the route since no token was sent`, () => {\r",
                  "    pm.response.to.be.unauthorized;\r",
                  "    pm.response.to.have.status(401);\r",
                  "});"
                ],
                "_lastExecutionId": "fe0dc6a0-5374-4423-b148-4d68b3a40b88"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Pokusaj citanja podataka za ulogovanog korisnika ukoliko se token ne salje kao deo requesta.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "profile"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a59321ab-9cb3-4261-aa9f-fc5089dfc9e9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "14287344-89d8-4055-862a-e37b0f376ed1",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 12
        },
        "id": "30e82351-8def-475c-bc19-77dbce1bdb96",
        "assertions": [
          {
            "assertion": "it should NOT be able to consume the route since no token was sent",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ef39f743-c433-4601-b2bf-36b47871bb36",
          "length": 52,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f6b86762-dc84-4eb1-b1fa-3e435a89084e"
        },
        "item": {
          "_": {
            "postman_id": "2066afa6-4df7-4dbd-8635-d4cccee10ce1"
          },
          "id": "2066afa6-4df7-4dbd-8635-d4cccee10ce1",
          "name": "/profile",
          "request": {
            "description": {
              "content": "Citanje podataka za ulogovanog korisnika.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "profile"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5d218c9c-a603-4e00-8d2e-e68ea6aa7220",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should GET profile`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.response.to.be.ok;\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain email`).to.have.property('email');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain name`).to.have.property('name');\r",
                  "});"
                ],
                "_lastExecutionId": "cad1d390-0717-45ca-bb04-1d1655ed67ea"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Citanje podataka za ulogovanog korisnika.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "profile"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7edccc5d-bba5-4fa9-88e5-e0b7d5056ddb",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "87b99016-230d-4d45-b012-85cfc6586db8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "139"
            },
            {
              "key": "ETag",
              "value": "W/\"8b-ZNqeaFS/YhsnQH7NfP5KX2c1p5A\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              101,
              55,
              54,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              115,
              99,
              104,
              117,
              121,
              108,
              101,
              114,
              95,
              111,
              107,
              111,
              110,
              57,
              55,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              53,
              54,
              101,
              52,
              98,
              49,
              56,
              45,
              100,
              97,
              99,
              57,
              45,
              52,
              49,
              57,
              50,
              45,
              98,
              100,
              56,
              102,
              45,
              53,
              100,
              99,
              56,
              98,
              51,
              50,
              52,
              49,
              55,
              52,
              53,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 139
        },
        "id": "2066afa6-4df7-4dbd-8635-d4cccee10ce1",
        "assertions": [
          {
            "assertion": "It should GET profile",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d44bcb0f-48e1-4b22-b735-d021e496ce50",
          "length": 52,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8d0a631c-653d-4798-8266-737e862c3861"
        },
        "item": {
          "_": {
            "postman_id": "fd2f8a3c-90c8-4702-836d-c557888cde0f"
          },
          "id": "fd2f8a3c-90c8-4702-836d-c557888cde0f",
          "name": "/profile",
          "request": {
            "description": {
              "content": "Email i name se salju prazni.\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "profile"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{emptyName}}\",\r\n    \"name\": \"{{emptyEmail}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2a8cab60-4043-458c-8a97-aa1ef66b42b7",
                "type": "text/javascript",
                "exec": [
                  "let name = \"\";\r",
                  "let email = \"\";\r",
                  "\r",
                  "pm.variables.set('emptyName', name);\r",
                  "pm.variables.set('emptyEmail', email);\r",
                  ""
                ],
                "_lastExecutionId": "7ad7e62a-b238-426d-b86c-5123b58f2cad"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b9bd7849-2925-4573-84e5-2f6640e4ef02",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT UPDATE profile empty name/email`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'errors'`).to.have.property('errors');\r",
                  "});"
                ],
                "_lastExecutionId": "35f472bf-baf3-46eb-a10c-106efa9d272b"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Email i name se salju prazni.\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "profile"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2da2c5c3-7726-4a81-9dad-7bb3f7280ba1",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 38,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"\",\r\n    \"name\": \"\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6e0dd05f-adba-430b-aa22-f052b5b7d023",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "400"
            },
            {
              "key": "ETag",
              "value": "W/\"190-CfS3vTui68T0zfbHDatGAkQ8pgs\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              91,
              123,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              34,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              73,
              83,
              95,
              69,
              77,
              80,
              84,
              89,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              77,
              73,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              73,
              83,
              95,
              69,
              77,
              80,
              84,
              89,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              77,
              73,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              99,
              105,
              116,
              121,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              73,
              83,
              95,
              69,
              77,
              80,
              84,
              89,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              99,
              105,
              116,
              121,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              77,
              73,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              73,
              83,
              95,
              69,
              77,
              80,
              84,
              89,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 400
        },
        "id": "fd2f8a3c-90c8-4702-836d-c557888cde0f",
        "assertions": [
          {
            "assertion": "it should NOT UPDATE profile empty name/email",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1310ebbc-978e-499f-b06b-91b89b5d8d89",
          "length": 52,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9a1cb2cc-3303-4afc-8f5c-38b047bf56cc"
        },
        "item": {
          "_": {
            "postman_id": "902c15e8-93f4-44e6-a9fd-7fef7a79df48"
          },
          "id": "902c15e8-93f4-44e6-a9fd-7fef7a79df48",
          "name": "/profile",
          "request": {
            "description": {
              "content": "Testiranje api poziva u kom se salje token. \r\nuser = {\r\n name: 'Test123456',\r\n urlTwitter: 'https://hello.com',\r\n urlGitHub: 'https://hello.io',\r\n phone: '123123123',\r\n city: 'Bucaramanga',\r\n country: 'Colombia'\r\n }\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "profile"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"urlTwitter\": \"{{twitter}}\",\r\n    \"urlGitHub\": \"{{git}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d1a9dcc-156a-4d57-a0b5-b563cbe3b97f",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "let testUser = JSON.parse(pm.environment.get(\"testUser\"));\r",
                  "\r",
                  "pm.test(`it should UPDATE profile`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "\r",
                  "    pm.expect(response.name).to.be.equal(testUser.name);\r",
                  "    pm.expect(response.urlTwitter) == testUser.urlTwitter;\r",
                  "    pm.expect(response.urlGitHub).to.be.eql(testUser.urlGitHub);\r",
                  "    pm.expect(response.phone) === testUser.phone;\r",
                  "    pm.expect(response.city).to.be.deep.equal(testUser.city);\r",
                  "    pm.expect(response.country).to.equal(testUser.country);\r",
                  "\r",
                  "    pm.expect(response,`[ERROR] Response does not contain a data request`).to.deep.include(testUser);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "dfaf784a-c8e6-43cd-9af6-c765a10d700b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "00769706-cdde-47d4-b340-6b1796af11a8",
                "type": "text/javascript",
                "exec": [
                  "let testUser = {\r",
                  "    name: 'Test123456',\r",
                  "    urlTwitter: 'https://hello.com',\r",
                  "    urlGitHub: 'https://hello.io',\r",
                  "    phone: '123123123',\r",
                  "    city: 'Bucaramanga',\r",
                  "    //country: 'Colombia'\r",
                  "    country: 'Trupale'\r",
                  "}\r",
                  "\r",
                  "pm.variables.set(\"name\", testUser.name);\r",
                  "pm.variables.set(\"twitter\", testUser.urlTwitter);\r",
                  "pm.variables.set(\"git\", testUser.urlGitHub);\r",
                  "pm.variables.set(\"phone\", testUser.phone);\r",
                  "pm.variables.set(\"city\", testUser.city);\r",
                  "pm.variables.set(\"country\", testUser.country);\r",
                  "\r",
                  "pm.environment.set(\"testUser\", JSON.stringify(testUser));\r",
                  "\r",
                  "// u slucaju promene podataka za testiranje, izmene se vrse samo na ovom mestu (u 'testUser' objektu)\r",
                  ""
                ],
                "_lastExecutionId": "67bb151f-ca90-413f-aedd-10c31513f782"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje api poziva u kom se salje token. \r\nuser = {\r\n name: 'Test123456',\r\n urlTwitter: 'https://hello.com',\r\n urlGitHub: 'https://hello.io',\r\n phone: '123123123',\r\n city: 'Bucaramanga',\r\n country: 'Colombia'\r\n }\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "profile"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "08880343-abdb-481e-84ad-c33976a1c726",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 190,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Test123456\",\r\n    \"urlTwitter\": \"https://hello.com\",\r\n    \"urlGitHub\": \"https://hello.io\",\r\n    \"phone\": \"123123123\",\r\n    \"city\": \"Bucaramanga\",\r\n    \"country\": \"Trupale\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "bc1eafd8-3c58-4bd2-ba6c-a0b538a7c3a0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "255"
            },
            {
              "key": "ETag",
              "value": "W/\"ff-WaeYqzyR2W4xdB8NdNTbJHB4j3M\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              49,
              50,
              51,
              52,
              53,
              54,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              115,
              99,
              104,
              117,
              121,
              108,
              101,
              114,
              95,
              111,
              107,
              111,
              110,
              57,
              55,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              53,
              54,
              101,
              52,
              98,
              49,
              56,
              45,
              100,
              97,
              99,
              57,
              45,
              52,
              49,
              57,
              50,
              45,
              98,
              100,
              56,
              102,
              45,
              53,
              100,
              99,
              56,
              98,
              51,
              50,
              52,
              49,
              55,
              52,
              53,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              66,
              117,
              99,
              97,
              114,
              97,
              109,
              97,
              110,
              103,
              97,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              84,
              114,
              117,
              112,
              97,
              108,
              101,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              49,
              50,
              51,
              49,
              50,
              51,
              49,
              50,
              51,
              34,
              44,
              34,
              117,
              114,
              108,
              71,
              105,
              116,
              72,
              117,
              98,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              101,
              108,
              108,
              111,
              46,
              105,
              111,
              34,
              44,
              34,
              117,
              114,
              108,
              84,
              119,
              105,
              116,
              116,
              101,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              104,
              101,
              108,
              108,
              111,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 14,
          "responseSize": 255
        },
        "id": "902c15e8-93f4-44e6-a9fd-7fef7a79df48",
        "assertions": [
          {
            "assertion": "it should UPDATE profile",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "430792d6-c5b0-4199-87fd-ea91305c1cd8",
          "length": 52,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c16369e6-2453-4ccc-859f-c01e7ea27384"
        },
        "item": {
          "_": {
            "postman_id": "7dd3ae48-ab50-4c15-9c7f-19e973d41819"
          },
          "id": "7dd3ae48-ab50-4c15-9c7f-19e973d41819",
          "name": "/profile",
          "request": {
            "description": {
              "content": "Salju se nevalidni linkovi kao na primer:\r\nuser = {\r\nname: 'Test123456',\r\nurlTwitter: 'invalidUrl',\r\nurlGitHub: 'alsoInvalid',\r\nphone: '123123123',\r\ncity: 'Bucaramanga',\r\ncountry: 'Colombia'\r\n      }\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "profile"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"urlTwitter\": \"{{twitter}}\",\r\n    \"urlGitHub\": \"{{git}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "acca01ee-2cd8-4c03-971e-97af548d22c0",
                "type": "text/javascript",
                "exec": [
                  "let testUser = {\r",
                  "    name: 'Test123456',\r",
                  "    urlTwitter: 'invalidUrl',\r",
                  "    urlGitHub: 'invalidUrl',\r",
                  "    phone: '123123123',\r",
                  "    city: 'Bucaramanga',\r",
                  "    country: 'Colombia'\r",
                  "}\r",
                  "\r",
                  "pm.variables.set(\"name\", testUser.name);\r",
                  "pm.variables.set(\"twitter\", testUser.urlTwitter);\r",
                  "pm.variables.set(\"git\", testUser.urlGitHub);\r",
                  "pm.variables.set(\"phone\", testUser.phone);\r",
                  "pm.variables.set(\"city\", testUser.city);\r",
                  "pm.variables.set(\"country\", testUser.country);\r",
                  "\r",
                  "// u slucaju promene podataka za testiranje, izmene se vrse samo na ovom mestu (u 'testUser' objektu)\r",
                  ""
                ],
                "_lastExecutionId": "a9ac7cd5-2906-4967-bd81-f08c53ffd79d"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3182b907-03b9-43be-ad0a-27e5730c29a4",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "let messages = [];\r",
                  "response.errors.msg.forEach(item => item.msg)\r",
                  "\r",
                  "pm.test(`it should UPDATE profile`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'errors'`).to.have.property('errors');\r",
                  "    messages.forEach(item => pm.expect(item, `[ERROR] Invalid error message`).to.be.equal('NOT_A_VALID_URL'));\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "99eeb253-4ca5-4e17-adc9-26c14002d4b5"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Salju se nevalidni linkovi kao na primer:\r\nuser = {\r\nname: 'Test123456',\r\nurlTwitter: 'invalidUrl',\r\nurlGitHub: 'alsoInvalid',\r\nphone: '123123123',\r\ncity: 'Bucaramanga',\r\ncountry: 'Colombia'\r\n      }\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "profile"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b9d09eb0-c13e-4692-8b47-9110c9b839d0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 178,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Test123456\",\r\n    \"urlTwitter\": \"invalidUrl\",\r\n    \"urlGitHub\": \"invalidUrl\",\r\n    \"phone\": \"123123123\",\r\n    \"city\": \"Bucaramanga\",\r\n    \"country\": \"Colombia\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "696d3d69-b259-4618-9ba9-7f839a563bbf",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "191"
            },
            {
              "key": "ETag",
              "value": "W/\"bf-LaiFwf3DFNUAvaUrOZhzHFZn+DI\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              91,
              123,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              85,
              114,
              108,
              34,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              78,
              79,
              84,
              95,
              65,
              95,
              86,
              65,
              76,
              73,
              68,
              95,
              85,
              82,
              76,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              117,
              114,
              108,
              84,
              119,
              105,
              116,
              116,
              101,
              114,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              85,
              114,
              108,
              34,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              78,
              79,
              84,
              95,
              65,
              95,
              86,
              65,
              76,
              73,
              68,
              95,
              85,
              82,
              76,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              117,
              114,
              108,
              71,
              105,
              116,
              72,
              117,
              98,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 191
        },
        "id": "7dd3ae48-ab50-4c15-9c7f-19e973d41819",
        "assertions": [
          {
            "assertion": "it should UPDATE profile",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "77121d95-515c-471f-a80d-55e88a4a14aa",
          "length": 52,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "850249db-1e3b-40d4-b340-8d61aa316946"
        },
        "item": {
          "_": {
            "postman_id": "a6b3d9e8-986a-4066-b4fc-7012f8e2d361"
          },
          "id": "a6b3d9e8-986a-4066-b4fc-7012f8e2d361",
          "name": "/profile/changePassword",
          "request": {
            "description": {
              "content": "Testiranje api poziva u kom se salje token.\r\nKao oldPassword salje se nevazeci password.\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "profile",
                "changePassword"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"oldPassword\": \"{{newRandomPassword}}{{newRandomPassword}}\",\r\n    \"newPassword\": \"{{newRandomPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "abc2accd-3af6-4638-b5ae-69e6e02e01ee",
                "type": "text/javascript",
                "exec": [
                  "let newRandomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "pm.variables.set('newRandomPassword', newRandomPassword);"
                ],
                "_lastExecutionId": "83c4d930-294f-4919-9289-b3e3ae5f7c85"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "92e8c692-95de-4d31-a216-3716bf4c3369",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`It should NOT change password`, () => {\r",
                  "    pm.response.to.have.status(409);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'errors'`).to.have.property('errors');\r",
                  "    pm.expect(response.errors.msg, `[ERROR] Incorrect message!`).to.be.equal('WRONG_PASSWORD');\r",
                  "});"
                ],
                "_lastExecutionId": "70c1f6c9-d15c-4fc9-beeb-a44782dcf9f2"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje api poziva u kom se salje token.\r\nKao oldPassword salje se nevazeci password.\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "profile",
              "changePassword"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6e7c0eed-c86d-4512-8c76-da24c7b1afd9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 96,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"oldPassword\": \"XrRWTWVLkv1oSltXrRWTWVLkv1oSlt\",\r\n    \"newPassword\": \"XrRWTWVLkv1oSlt\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6b4ff885-227b-48e3-85dd-175cbb3dfc1a",
          "status": "Conflict",
          "code": 409,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "35"
            },
            {
              "key": "ETag",
              "value": "W/\"23-itrlbUGQLKG8G8q3Fi08AH2Uuco\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              87,
              82,
              79,
              78,
              71,
              95,
              80,
              65,
              83,
              83,
              87,
              79,
              82,
              68,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 35
        },
        "id": "a6b3d9e8-986a-4066-b4fc-7012f8e2d361",
        "assertions": [
          {
            "assertion": "It should NOT change password",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0472d666-9ba8-422e-ba2d-cbde2bf2972a",
          "length": 52,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6f90d9fc-1d66-42b5-900f-d85319608c9a"
        },
        "item": {
          "_": {
            "postman_id": "7e087c13-84e4-45c5-aa9c-b6cbb88713ff"
          },
          "id": "7e087c13-84e4-45c5-aa9c-b6cbb88713ff",
          "name": "/profile/changePassword",
          "request": {
            "description": {
              "content": "Testiranje api poziva u kom se salje token. \r\nNovi password treba da ima manje od 5 karaktera.\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "profile",
                "changePassword"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"oldPassword\": \"{{userPassword}}\",\r\n    \"newPassword\": \"{{newShortPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "52d506af-2a04-4653-ba5c-be8bbccf184c",
                "type": "text/javascript",
                "exec": [
                  "let newRandomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "let newShortPassword = newRandomPassword.slice(-4);\r",
                  "\r",
                  "pm.variables.set('newShortPassword', newShortPassword);"
                ],
                "_lastExecutionId": "156cd7e8-2e29-4ffe-9edb-5a4ea2745586"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ddda66b4-0df9-4aec-aaa0-71eb990b0f98",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "let messages = ['test error message'];\r",
                  "response.errors.msg.forEach(item =>\r",
                  "    item.param == 'newPassword' && messages.push(item.msg));\r",
                  "\r",
                  "pm.test(`it should NOT change a too short password`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'errors'`).to.have.property('errors');\r",
                  "    pm.expect(messages, `[ERROR] Correct error message is missing`).to.be.an('array').that.includes(\"PASSWORD_TOO_SHORT_MIN_5\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "d8a14ec5-4b72-4f69-a193-66eef1bb4315"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje api poziva u kom se salje token. \r\nNovi password treba da ima manje od 5 karaktera.\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "profile",
              "changePassword"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3f1feafe-e6ad-4ebb-9d62-14a2210331c5",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 70,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"oldPassword\": \"SZnKuF6khShC20R\",\r\n    \"newPassword\": \"WPCz\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "dca03ec1-c91a-43b6-ac4a-75f0b785e074",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "110"
            },
            {
              "key": "ETag",
              "value": "W/\"6e-jiBddrogV/mbhOVu/NbE3LAid6c\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              91,
              123,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              87,
              80,
              67,
              122,
              34,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              80,
              65,
              83,
              83,
              87,
              79,
              82,
              68,
              95,
              84,
              79,
              79,
              95,
              83,
              72,
              79,
              82,
              84,
              95,
              77,
              73,
              78,
              95,
              53,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              110,
              101,
              119,
              80,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 110
        },
        "id": "7e087c13-84e4-45c5-aa9c-b6cbb88713ff",
        "assertions": [
          {
            "assertion": "it should NOT change a too short password",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6ff1a5de-c0d6-4c03-a7ed-66323b1ffa2d",
          "length": 52,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "70c51088-3541-4cb4-b97f-b484f6a8986c"
        },
        "item": {
          "_": {
            "postman_id": "dadf93e9-db4b-4f9c-890d-27d14730a93c"
          },
          "id": "dadf93e9-db4b-4f9c-890d-27d14730a93c",
          "name": "/profile/changePassword",
          "request": {
            "description": {
              "content": "Testiranje api poziva u kom se salje token. Salju se validne lozinke.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "profile",
                "changePassword"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"oldPassword\": \"{{userPassword}}\",\r\n    \"newPassword\": \"{{newRandomPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "cb3c43ba-bebd-4b73-88a3-2699fc31814a",
                "type": "text/javascript",
                "exec": [
                  "let newRandomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "\r",
                  "pm.variables.set('newRandomPassword', newRandomPassword);\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "b0b31bda-1f12-459e-8471-eeb75d00ef87"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b25f5254-3d03-43e1-a05f-f6f36f9d5a1a",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should change password`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'msg ['PASSWORD_CHANGED']'`).to.have.property('msg').that.be.equal('PASSWORD_CHANGED');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('userPassword', pm.variables.get('newRandomPassword'));\r",
                  ""
                ],
                "_lastExecutionId": "ae617b15-5674-4706-a5ab-b19f65719b03"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Testiranje api poziva u kom se salje token. Salju se validne lozinke.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "profile",
              "changePassword"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3e0f22c3-699d-4a89-86c5-d147758c27de",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 81,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"oldPassword\": \"SZnKuF6khShC20R\",\r\n    \"newPassword\": \"HVUNqWtRnwuxgvX\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81f295bba8422834f40a11cc7965cfcf1a44477e989ea446799c4c00fcfb6b933d1dea66a7cfe1ee5ff9c66e68074cac62da294e9129bca6e714b78c9e92668ab2af82a52cd9f2267e2799c0f41bbc5d4e7c756950d6c0d97e0b17dfbc9c0d4a4e869b58e3b821e71fd30ee1c395a8d7d567aba77ae23d5f62ba8663da6ae018c3b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "ddb9605b-a779-4bd1-820a-329cbbe4bbf0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "26"
            },
            {
              "key": "ETag",
              "value": "W/\"1a-8NMTb7T0mpAGXOVs0yAvyVZSkGQ\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              80,
              65,
              83,
              83,
              87,
              79,
              82,
              68,
              95,
              67,
              72,
              65,
              78,
              71,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 26
        },
        "id": "dadf93e9-db4b-4f9c-890d-27d14730a93c",
        "assertions": [
          {
            "assertion": "it should change password",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "edf26a4d-c3ec-4592-9f25-82cebc17d7eb",
          "length": 52,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "46912d76-21b8-42e6-bbb6-919af9fe12fd"
        },
        "item": {
          "_": {
            "postman_id": "5f87930d-b696-478a-a958-e83aba45abbd"
          },
          "id": "5f87930d-b696-478a-a958-e83aba45abbd",
          "name": "/users/{{id}}",
          "request": {
            "description": {
              "content": "Brisanj kreiranog usera za potrebe ove grupe tstova.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "5ce3f2aa-e00c-4f0d-8227-6fa296494055",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', '{{userId}}');"
                ],
                "_lastExecutionId": "9aa309b7-b908-4820-ae2f-7169e90e2177"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "58f863af-92a3-42d1-9e3f-0badec44804c",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should DELETE a user given the id`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'msg ['PASSWORD_CHANGED']'`).to.have.property('msg').that.be.equal('DELETED');\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d20e7550-b333-4612-bd94-44c2eb750ec3"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Brisanj kreiranog usera za potrebe ove grupe tstova.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users",
              "5fbc36a10bcf1811a06559c7"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "eca86101-f27d-4331-bcf6-04ccc49429ef",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d663fb45c3b15d4783a98b1386475b7547edc9dab7829b31f3c9f4fc9c380b17d7389af6122349a8b9d1339bbf0e609187311580e3bff37cde4662a3e9a998ce1dfd374fc753929a60aced84bd36a067d5b",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6a743899-1fb6-4553-8e5e-5298fce46148",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "ETag",
              "value": "W/\"11-1TLYp3hRJ+LTeGYiz9MECJYsCSc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:33 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              68,
              69,
              76,
              69,
              84,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 17
        },
        "id": "5f87930d-b696-478a-a958-e83aba45abbd",
        "assertions": [
          {
            "assertion": "it should DELETE a user given the id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ab7ed0fa-c2f4-4883-8076-926c3c97fb60",
          "length": 52,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cd668370-4323-4f77-9329-5ae0bd85d5d1"
        },
        "item": {
          "_": {
            "postman_id": "9f1a75f5-f5d7-4f64-a384-692bd354a858"
          },
          "id": "9f1a75f5-f5d7-4f64-a384-692bd354a858",
          "name": "/login",
          "request": {
            "description": {
              "content": "Logujemo admina i cuvamo njegov token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{adminEmail}}\",\r\n    \"password\": \"{{adminPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c0363b29-5b9f-4505-b587-f144f8cda814",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set('adminEmail', 'admin@admin.com');\r",
                  "pm.environment.set('adminPassword', '12345');"
                ],
                "_lastExecutionId": "3a64b4f4-18ff-47f1-be72-f6a2563e0844"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2e164c67-0dbd-4a0b-aefd-ce57969263bc",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should GET token as admin (USER)`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain token`).to.have.property('token');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('adminToken', response.token);  "
                ],
                "_lastExecutionId": "390304a8-1b2c-4495-bd2a-7544ae3752da"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Logujemo admina i cuvamo njegov token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1f501e6b-8fca-4592-8027-a10ff919175e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 62,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"admin@admin.com\",\r\n    \"password\": \"12345\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "3c9a8e6e-17e4-4bff-aee4-fcbf5eb840cf",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "578"
            },
            {
              "key": "ETag",
              "value": "W/\"242-kEyr9N0cCqo//XJIqHaSpMIeK5c\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              102,
              99,
              102,
              51,
              102,
              55,
              56,
              49,
              51,
              56,
              102,
              54,
              49,
              102,
              101,
              54,
              50,
              55,
              51,
              100,
              98,
              100,
              49,
              100,
              54,
              99,
              48,
              53,
              102,
              49,
              53,
              101,
              51,
              48,
              52,
              57,
              54,
              100,
              55,
              97,
              48,
              56,
              53,
              57,
              49,
              57,
              98,
              98,
              99,
              100,
              99,
              102,
              49,
              49,
              102,
              50,
              55,
              49,
              100,
              99,
              101,
              99,
              102,
              98,
              53,
              54,
              52,
              99,
              100,
              48,
              57,
              97,
              101,
              56,
              56,
              55,
              55,
              101,
              100,
              101,
              56,
              102,
              48,
              98,
              50,
              57,
              101,
              100,
              101,
              50,
              97,
              49,
              99,
              98,
              102,
              48,
              52,
              100,
              101,
              50,
              48,
              97,
              51,
              98,
              56,
              49,
              101,
              56,
              98,
              53,
              102,
              57,
              52,
              50,
              55,
              48,
              52,
              101,
              57,
              57,
              55,
              48,
              54,
              56,
              56,
              57,
              101,
              57,
              52,
              98,
              55,
              53,
              57,
              52,
              98,
              102,
              56,
              53,
              99,
              97,
              49,
              50,
              100,
              101,
              101,
              57,
              51,
              100,
              99,
              48,
              57,
              55,
              48,
              99,
              55,
              57,
              97,
              54,
              50,
              101,
              57,
              49,
              48,
              51,
              53,
              100,
              98,
              102,
              97,
              102,
              53,
              48,
              51,
              100,
              98,
              99,
              101,
              102,
              100,
              98,
              49,
              97,
              52,
              57,
              101,
              97,
              101,
              49,
              57,
              56,
              51,
              55,
              57,
              100,
              53,
              51,
              100,
              52,
              52,
              55,
              99,
              50,
              54,
              97,
              102,
              48,
              98,
              101,
              57,
              97,
              48,
              98,
              54,
              54,
              49,
              53,
              52,
              57,
              56,
              49,
              100,
              54,
              54,
              51,
              53,
              97,
              100,
              101,
              48,
              55,
              57,
              52,
              52,
              51,
              50,
              50,
              54,
              97,
              50,
              54,
              53,
              50,
              57,
              48,
              56,
              57,
              57,
              101,
              102,
              50,
              98,
              51,
              57,
              52,
              102,
              97,
              100,
              99,
              53,
              48,
              52,
              55,
              101,
              52,
              100,
              51,
              51,
              102,
              52,
              100,
              52,
              99,
              51,
              98,
              100,
              54,
              54,
              51,
              48,
              101,
              56,
              51,
              55,
              51,
              50,
              56,
              54,
              99,
              98,
              49,
              52,
              53,
              54,
              55,
              48,
              49,
              57,
              55,
              99,
              54,
              50,
              54,
              50,
              101,
              49,
              57,
              99,
              49,
              48,
              102,
              53,
              52,
              97,
              52,
              53,
              48,
              99,
              56,
              52,
              55,
              98,
              52,
              50,
              48,
              48,
              98,
              48,
              56,
              55,
              50,
              100,
              97,
              98,
              52,
              57,
              48,
              48,
              57,
              48,
              102,
              50,
              54,
              49,
              54,
              101,
              102,
              57,
              102,
              50,
              51,
              98,
              48,
              49,
              100,
              98,
              49,
              49,
              102,
              101,
              56,
              56,
              53,
              100,
              102,
              99,
              50,
              98,
              102,
              101,
              50,
              55,
              49,
              99,
              57,
              48,
              99,
              56,
              57,
              50,
              49,
              48,
              56,
              100,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              97,
              97,
              49,
              99,
              50,
              99,
              51,
              53,
              101,
              102,
              55,
              97,
              52,
              101,
              57,
              55,
              98,
              53,
              101,
              57,
              57,
              53,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              117,
              112,
              101,
              114,
              32,
              65,
              100,
              109,
              105,
              110,
              105,
              115,
              116,
              114,
              97,
              116,
              111,
              114,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              64,
              97,
              100,
              109,
              105,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              100,
              54,
              101,
              48,
              55,
              50,
              99,
              45,
              48,
              101,
              97,
              102,
              45,
              52,
              50,
              51,
              57,
              45,
              98,
              98,
              53,
              101,
              45,
              52,
              57,
              53,
              101,
              54,
              52,
              56,
              54,
              49,
              52,
              56,
              102,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 578
        },
        "id": "9f1a75f5-f5d7-4f64-a384-692bd354a858",
        "assertions": [
          {
            "assertion": "it should GET token as admin (USER)",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7bc06baa-2dda-4f12-9512-08985de5ca83",
          "length": 52,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a093685-e1fa-43c1-986a-9655bfff801d"
        },
        "item": {
          "_": {
            "postman_id": "264b307d-82e5-4da5-b827-1f576a39e396"
          },
          "id": "264b307d-82e5-4da5-b827-1f576a39e396",
          "name": "/users",
          "request": {
            "description": {
              "content": "Kreiramo usera koji ce se koristiti u daljim API pozivima.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b9374f1a-300b-4078-8b30-f5ad775476ce",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should POST user`, () => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Some property is missing`).that.includes.all.keys(['_id', 'name', 'email', 'verification']);\r",
                  "})\r",
                  "\r",
                  "let req = JSON.parse(pm.request.body.raw);\r",
                  "\r",
                  "pm.environment.set('userPassword', req.password);\r",
                  "pm.environment.set('userEmail', response.email);\r",
                  "pm.environment.set('userId', response._id);\r",
                  ""
                ],
                "_lastExecutionId": "b04b789a-ef2b-44e3-97f1-1653d567bb76"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "4eb3f8a5-cb14-4561-bf78-17f12166477c",
                "type": "text/javascript",
                "exec": [
                  "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "let email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                  "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "let role = 'user';\r",
                  "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                  "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                  "\r",
                  "pm.variables.set(\"name\", name);\r",
                  "pm.variables.set(\"email\", email);\r",
                  "pm.variables.set(\"password\", password);\r",
                  "pm.variables.set(\"role\", role);\r",
                  "pm.variables.set(\"phone\", phone);\r",
                  "pm.variables.set(\"city\", city);\r",
                  "pm.variables.set(\"country\", country);"
                ],
                "_lastExecutionId": "f9c24426-c8b4-4309-af4a-82b725458a24"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Kreiramo usera koji ce se koristiti u daljim API pozivima.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5e5b825a-6903-4cc2-81c3-e0520242616d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 211,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Frida\",\r\n    \"email\": \"Henderson_Cremin83@gmail.com\",\r\n    \"password\": \"YLY0HOjbwvSxuVT\",\r\n    \"role\": \"user\",\r\n    \"phone\": \"856-874-5433\",\r\n    \"city\": \"Lake Theo\",\r\n    \"country\": \"Ireland\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "9d639f89-36bf-4dc3-9d1b-7385e63426e1",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "313"
            },
            {
              "key": "ETag",
              "value": "W/\"139-w6R3tastURxRp7niv9dohym931o\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              50,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              70,
              114,
              105,
              100,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              104,
              101,
              110,
              100,
              101,
              114,
              115,
              111,
              110,
              95,
              99,
              114,
              101,
              109,
              105,
              110,
              56,
              51,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              56,
              53,
              54,
              45,
              56,
              55,
              52,
              45,
              53,
              52,
              51,
              51,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              76,
              97,
              107,
              101,
              32,
              84,
              104,
              101,
              111,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              73,
              114,
              101,
              108,
              97,
              110,
              100,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              102,
              102,
              99,
              56,
              100,
              54,
              51,
              52,
              45,
              50,
              97,
              102,
              100,
              45,
              52,
              100,
              56,
              55,
              45,
              57,
              48,
              99,
              50,
              45,
              101,
              54,
              50,
              99,
              52,
              50,
              97,
              99,
              56,
              50,
              99,
              99,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              49,
              56,
              53,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              49,
              56,
              53,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 18,
          "responseSize": 313
        },
        "id": "264b307d-82e5-4da5-b827-1f576a39e396",
        "assertions": [
          {
            "assertion": "it should POST user",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f96cc29a-c893-4a12-a2b3-9332745a2632",
          "length": 52,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d451588-ca58-44bc-a8bc-f0143db7947a"
        },
        "item": {
          "_": {
            "postman_id": "37d75238-edc0-4fa9-a001-4dcf0e5a91f6"
          },
          "id": "37d75238-edc0-4fa9-a001-4dcf0e5a91f6",
          "name": "/login",
          "request": {
            "description": {
              "content": "Salju se user podaci i uvanje user tokena.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7fa7e18f-8f65-4126-89c4-8dffe7e093ec",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should GET token as user (USER)`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain token`).to.have.property('token');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set('userToken', response.token);  "
                ],
                "_lastExecutionId": "9fad83bf-337c-4adf-a898-64726928b0a6"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Salju se user podaci i uvanje user tokena.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ad095115-6d2f-4bf7-a1af-062752dc5ac8",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 85,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"henderson_cremin83@gmail.com\",\r\n    \"password\": \"YLY0HOjbwvSxuVT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "e3833bfa-e9e0-4e59-81ec-54ae56b5acad",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "577"
            },
            {
              "key": "ETag",
              "value": "W/\"241-H3sjWBxMpCRkrOHT/hZb+Axxha0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              102,
              99,
              102,
              51,
              102,
              55,
              56,
              49,
              51,
              56,
              102,
              54,
              49,
              102,
              101,
              54,
              50,
              55,
              51,
              100,
              98,
              100,
              49,
              100,
              54,
              99,
              48,
              53,
              102,
              49,
              53,
              101,
              51,
              48,
              52,
              57,
              54,
              100,
              55,
              97,
              48,
              56,
              53,
              57,
              49,
              57,
              98,
              98,
              99,
              100,
              99,
              102,
              49,
              49,
              102,
              50,
              55,
              49,
              100,
              99,
              101,
              99,
              102,
              98,
              53,
              54,
              52,
              99,
              100,
              48,
              57,
              97,
              101,
              56,
              56,
              55,
              55,
              101,
              100,
              101,
              56,
              102,
              48,
              98,
              50,
              57,
              101,
              100,
              101,
              50,
              97,
              49,
              99,
              98,
              102,
              99,
              49,
              53,
              101,
              102,
              50,
              54,
              57,
              100,
              102,
              52,
              57,
              51,
              48,
              50,
              52,
              49,
              53,
              100,
              54,
              52,
              102,
              101,
              99,
              51,
              100,
              102,
              57,
              101,
              56,
              49,
              102,
              97,
              100,
              52,
              101,
              48,
              97,
              55,
              98,
              54,
              49,
              102,
              100,
              51,
              54,
              54,
              50,
              50,
              49,
              49,
              50,
              48,
              56,
              102,
              102,
              52,
              101,
              98,
              49,
              52,
              53,
              102,
              57,
              54,
              99,
              101,
              99,
              55,
              101,
              99,
              55,
              99,
              99,
              100,
              97,
              54,
              55,
              101,
              50,
              56,
              99,
              57,
              52,
              57,
              50,
              56,
              102,
              54,
              52,
              51,
              51,
              50,
              50,
              52,
              97,
              53,
              102,
              49,
              50,
              101,
              97,
              55,
              102,
              49,
              100,
              54,
              55,
              49,
              55,
              97,
              55,
              101,
              57,
              98,
              100,
              50,
              49,
              53,
              52,
              98,
              50,
              97,
              48,
              99,
              53,
              102,
              49,
              55,
              101,
              49,
              49,
              52,
              98,
              97,
              97,
              101,
              100,
              50,
              97,
              100,
              101,
              57,
              97,
              99,
              48,
              98,
              56,
              53,
              56,
              101,
              51,
              57,
              55,
              102,
              51,
              102,
              56,
              101,
              54,
              54,
              54,
              56,
              50,
              53,
              101,
              51,
              51,
              56,
              100,
              57,
              52,
              97,
              52,
              54,
              56,
              55,
              102,
              53,
              53,
              99,
              57,
              54,
              101,
              54,
              56,
              50,
              57,
              55,
              49,
              53,
              55,
              50,
              51,
              100,
              98,
              57,
              48,
              54,
              55,
              52,
              49,
              98,
              48,
              52,
              50,
              51,
              55,
              53,
              97,
              49,
              51,
              53,
              100,
              98,
              101,
              51,
              101,
              50,
              97,
              98,
              56,
              52,
              50,
              97,
              50,
              51,
              49,
              97,
              54,
              51,
              102,
              54,
              50,
              48,
              52,
              54,
              100,
              49,
              57,
              98,
              101,
              100,
              49,
              49,
              56,
              56,
              100,
              51,
              54,
              53,
              98,
              100,
              57,
              49,
              57,
              55,
              51,
              57,
              52,
              51,
              98,
              55,
              102,
              99,
              49,
              102,
              56,
              57,
              57,
              53,
              54,
              97,
              102,
              49,
              98,
              51,
              56,
              49,
              56,
              97,
              49,
              99,
              57,
              55,
              97,
              100,
              101,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              50,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              70,
              114,
              105,
              100,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              104,
              101,
              110,
              100,
              101,
              114,
              115,
              111,
              110,
              95,
              99,
              114,
              101,
              109,
              105,
              110,
              56,
              51,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              102,
              102,
              99,
              56,
              100,
              54,
              51,
              52,
              45,
              50,
              97,
              102,
              100,
              45,
              52,
              100,
              56,
              55,
              45,
              57,
              48,
              99,
              50,
              45,
              101,
              54,
              50,
              99,
              52,
              50,
              97,
              99,
              56,
              50,
              99,
              99,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 577
        },
        "id": "37d75238-edc0-4fa9-a001-4dcf0e5a91f6",
        "assertions": [
          {
            "assertion": "it should GET token as user (USER)",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a54be471-2da9-4cbe-b63c-25f45371d937",
          "length": 52,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "63cf4cba-b9ee-4cb9-ab50-1b7a12bfa29c"
        },
        "item": {
          "_": {
            "postman_id": "317f7097-2d53-44cc-a8bc-6f5dec19f1fb"
          },
          "id": "317f7097-2d53-44cc-a8bc-6f5dec19f1fb",
          "name": "/users",
          "request": {
            "description": {
              "content": "Pokusaj pristupa bez utentifikacije",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b0fe73eb-08e2-4c7c-872a-8ee6c842d3e6",
                "type": "text/javascript",
                "exec": [
                  "    pm.test(`it should NOT be able to consume the route since no token was sent`, () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "    pm.response.to.be.unauthorized;\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "76195d09-281e-4846-924a-c5151340972f"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Pokusaj pristupa bez utentifikacije",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4be4190d-12b6-46fa-bb8e-f0b2abca2a90",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "ccb4038c-bfa5-44f5-aea6-3334275cf15e",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 12
        },
        "id": "317f7097-2d53-44cc-a8bc-6f5dec19f1fb",
        "assertions": [
          {
            "assertion": "it should NOT be able to consume the route since no token was sent",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cb57963f-2a0c-4b59-a36e-b446da0ab5a1",
          "length": 52,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7680270a-994d-4450-844e-c68f22bc5a21"
        },
        "item": {
          "_": {
            "postman_id": "a188d4a7-a7e6-4359-8394-2fc706b6924c"
          },
          "id": "a188d4a7-a7e6-4359-8394-2fc706b6924c",
          "name": "/users",
          "request": {
            "description": {
              "content": "Salje se admin token.   ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2320cb6a-8abf-41ba-a02d-be67119f3f0a",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should GET all the users`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'docs'`).to.have.property('docs').and.to.be.an('array');\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "15fa6650-5528-4b81-a0b6-631714007ecf"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Salje se admin token.   ",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "14e2e342-8cd0-4d61-95d1-4de57f3ad3c5",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "45aab54c-e87c-4d8a-aa77-2e6bc4e0a6f9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "ETag",
              "value": "W/\"4b8-zJekkWAnPF5BkUE/GzIjto4w+sg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              111,
              99,
              115,
              34,
              58,
              91,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              50,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              97,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              70,
              114,
              105,
              100,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              104,
              101,
              110,
              100,
              101,
              114,
              115,
              111,
              110,
              95,
              99,
              114,
              101,
              109,
              105,
              110,
              56,
              51,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              56,
              53,
              54,
              45,
              56,
              55,
              52,
              45,
              53,
              52,
              51,
              51,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              76,
              97,
              107,
              101,
              32,
              84,
              104,
              101,
              111,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              73,
              114,
              101,
              108,
              97,
              110,
              100,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              102,
              102,
              99,
              56,
              100,
              54,
              51,
              52,
              45,
              50,
              97,
              102,
              100,
              45,
              52,
              100,
              56,
              55,
              45,
              57,
              48,
              99,
              50,
              45,
              101,
              54,
              50,
              99,
              52,
              50,
              97,
              99,
              56,
              50,
              99,
              99,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              49,
              56,
              53,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              49,
              56,
              53,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              97,
              97,
              49,
              99,
              50,
              99,
              51,
              53,
              101,
              102,
              55,
              97,
              52,
              101,
              57,
              55,
              98,
              53,
              101,
              57,
              57,
              53,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              117,
              112,
              101,
              114,
              32,
              65,
              100,
              109,
              105,
              110,
              105,
              115,
              116,
              114,
              97,
              116,
              111,
              114,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              64,
              97,
              100,
              109,
              105,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              100,
              54,
              101,
              48,
              55,
              50,
              99,
              45,
              48,
              101,
              97,
              102,
              45,
              52,
              50,
              51,
              57,
              45,
              98,
              98,
              53,
              101,
              45,
              52,
              57,
              53,
              101,
              54,
              52,
              56,
              54,
              49,
              52,
              56,
              102,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              66,
              117,
              99,
              97,
              114,
              97,
              109,
              97,
              110,
              103,
              97,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              67,
              111,
              108,
              111,
              109,
              98,
              105,
              97,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              49,
              50,
              51,
              49,
              50,
              51,
              34,
              44,
              34,
              117,
              114,
              108,
              84,
              119,
              105,
              116,
              116,
              101,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              106,
              97,
              118,
              111,
              110,
              46,
              105,
              110,
              102,
              111,
              34,
              44,
              34,
              117,
              114,
              108,
              71,
              105,
              116,
              72,
              117,
              98,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              114,
              111,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              52,
              45,
              48,
              54,
              84,
              49,
              52,
              58,
              49,
              56,
              58,
              49,
              53,
              46,
              54,
              56,
              49,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              49,
              55,
              58,
              49,
              56,
              58,
              53,
              56,
              46,
              55,
              53,
              54,
              90,
              34,
              125,
              44,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              97,
              97,
              49,
              99,
              50,
              99,
              51,
              53,
              101,
              102,
              55,
              97,
              52,
              101,
              57,
              55,
              98,
              53,
              101,
              57,
              57,
              53,
              98,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              105,
              109,
              112,
              108,
              101,
              32,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              64,
              117,
              115,
              101,
              114,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              100,
              54,
              101,
              48,
              55,
              50,
              99,
              45,
              48,
              101,
              97,
              102,
              45,
              52,
              50,
              51,
              57,
              45,
              98,
              98,
              53,
              101,
              45,
              52,
              57,
              53,
              101,
              54,
              52,
              56,
              54,
              49,
              52,
              56,
              100,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              66,
              117,
              99,
              97,
              114,
              97,
              109,
              97,
              110,
              103,
              97,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              67,
              111,
              108,
              111,
              109,
              98,
              105,
              97,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              49,
              50,
              51,
              49,
              50,
              51,
              34,
              44,
              34,
              117,
              114,
              108,
              84,
              119,
              105,
              116,
              116,
              101,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              114,
              111,
              100,
              103,
              101,
              114,
              46,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              117,
              114,
              108,
              71,
              105,
              116,
              72,
              117,
              98,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              97,
              117,
              114,
              101,
              108,
              105,
              101,
              46,
              98,
              105,
              122,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              49,
              57,
              45,
              49,
              50,
              45,
              48,
              53,
              84,
              48,
              51,
              58,
              49,
              56,
              58,
              51,
              49,
              46,
              54,
              52,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              49,
              84,
              50,
              49,
              58,
              53,
              53,
              58,
              49,
              50,
              46,
              49,
              52,
              56,
              90,
              34,
              125,
              93,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              68,
              111,
              99,
              115,
              34,
              58,
              51,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              53,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              105,
              110,
              103,
              67,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              58,
              49,
              44,
              34,
              104,
              97,
              115,
              80,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              104,
              97,
              115,
              78,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              112,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              125
            ]
          },
          "cookie": [],
          "responseTime": 19,
          "responseSize": 1208
        },
        "id": "a188d4a7-a7e6-4359-8394-2fc706b6924c",
        "assertions": [
          {
            "assertion": "it should GET all the users",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3cc3637b-1b03-444e-802d-1c4ef395e7ee",
          "length": 52,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "794001bd-38f7-411a-95a9-959bcb395b60"
        },
        "item": {
          "_": {
            "postman_id": "46abbcaf-3cae-4e0e-bab1-364b7d3a0244"
          },
          "id": "46abbcaf-3cae-4e0e-bab1-364b7d3a0244",
          "name": "/users?filter=admin&fields=email",
          "request": {
            "description": {
              "content": "Filtriranje resultata, salje se admin token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "key": "filter",
                  "value": "admin"
                },
                {
                  "key": "fields",
                  "value": "email"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b98d995d-7958-4a98-8b5e-6eeacd827ebc",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "2f874d91-520b-4049-9b7c-28c4725d6824"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "961cc702-598e-4b9d-84d0-195012f2eef8",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "let emailAddresses = [];\r",
                  "response.docs.forEach(item => emailAddresses.push(item.email));\r",
                  "\r",
                  "pm.test(`it should GET the users with filters`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Response does not contain 'docs'`).to.have.property('docs').and.to.be.an('array');\r",
                  "    pm.expect((emailAddresses).length, `[ERROR] 'docs' contains more than one result`).to.be.equal(1);\r",
                  "    emailAddresses.forEach(item => pm.expect(item, `[ERROR] Wrong email address`).contain('admin'));\r",
                  "});\r",
                  "\r",
                  "pm.test(`Response time is less than 200ms`, () => {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "885eaa6e-bfe3-4b85-997b-707c4b6bd5e5"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Filtriranje resultata, salje se admin token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "filter",
                "value": "admin"
              },
              {
                "key": "fields",
                "value": "email"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f23c05cc-b195-48ae-bb9a-9c5f6ac7f464",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5d5d54f0-dd6e-49c0-97f0-c304eb73384a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "526"
            },
            {
              "key": "ETag",
              "value": "W/\"20e-Dm/mJfPSwS8gOfdpnT9bVU0e3eE\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              111,
              99,
              115,
              34,
              58,
              91,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              97,
              97,
              49,
              99,
              50,
              99,
              51,
              53,
              101,
              102,
              55,
              97,
              52,
              101,
              57,
              55,
              98,
              53,
              101,
              57,
              57,
              53,
              97,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              117,
              112,
              101,
              114,
              32,
              65,
              100,
              109,
              105,
              110,
              105,
              115,
              116,
              114,
              97,
              116,
              111,
              114,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              64,
              97,
              100,
              109,
              105,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              97,
              100,
              109,
              105,
              110,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              100,
              54,
              101,
              48,
              55,
              50,
              99,
              45,
              48,
              101,
              97,
              102,
              45,
              52,
              50,
              51,
              57,
              45,
              98,
              98,
              53,
              101,
              45,
              52,
              57,
              53,
              101,
              54,
              52,
              56,
              54,
              49,
              52,
              56,
              102,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              66,
              117,
              99,
              97,
              114,
              97,
              109,
              97,
              110,
              103,
              97,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              67,
              111,
              108,
              111,
              109,
              98,
              105,
              97,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              49,
              50,
              51,
              49,
              50,
              51,
              34,
              44,
              34,
              117,
              114,
              108,
              84,
              119,
              105,
              116,
              116,
              101,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              106,
              97,
              118,
              111,
              110,
              46,
              105,
              110,
              102,
              111,
              34,
              44,
              34,
              117,
              114,
              108,
              71,
              105,
              116,
              72,
              117,
              98,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              114,
              111,
              110,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              48,
              52,
              45,
              48,
              54,
              84,
              49,
              52,
              58,
              49,
              56,
              58,
              49,
              53,
              46,
              54,
              56,
              49,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              50,
              84,
              49,
              55,
              58,
              49,
              56,
              58,
              53,
              56,
              46,
              55,
              53,
              54,
              90,
              34,
              125,
              93,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              68,
              111,
              99,
              115,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              53,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              105,
              110,
              103,
              67,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              58,
              49,
              44,
              34,
              104,
              97,
              115,
              80,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              104,
              97,
              115,
              78,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              112,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 526
        },
        "id": "46abbcaf-3cae-4e0e-bab1-364b7d3a0244",
        "assertions": [
          {
            "assertion": "it should GET the users with filters",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2bf2aca5-0deb-4da3-a67a-74c6c2698014",
          "length": 52,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d47f21be-8d53-45be-ac88-72cbfe23c920"
        },
        "item": {
          "_": {
            "postman_id": "6d127aac-6bfa-4383-9d6d-f5e3924f8c07"
          },
          "id": "6d127aac-6bfa-4383-9d6d-f5e3924f8c07",
          "name": "/users",
          "request": {
            "description": {
              "content": "Neuspesno kreiranje usera od strane admina.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "b41aac1c-dd47-4e4d-abf6-7caf5cbf4854",
                "type": "text/javascript",
                "exec": [
                  "let email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                  "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "let role = 'user';\r",
                  "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                  "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                  "\r",
                  "pm.variables.set(\"email\", email);\r",
                  "pm.variables.set(\"password\", password);\r",
                  "pm.variables.set(\"role\", role);\r",
                  "pm.variables.set(\"phone\", phone);\r",
                  "pm.variables.set(\"city\", city);\r",
                  "pm.variables.set(\"country\", country);"
                ],
                "_lastExecutionId": "57dbcc35-91f7-4a28-bab9-e9ec01cc6761"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2e572ef6-3d2a-4d13-ac8f-554b12930408",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT POST a user without name`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "f1c75ea7-5591-4121-b418-e0488fced1c7"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Neuspesno kreiranje usera od strane admina.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ca27d172-8564-4bb1-8720-4e9e5aa4603f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 187,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"Brendon_Schiller73@yahoo.com\",\r\n    \"password\": \"82N9hUg0WkcmxIs\",\r\n    \"role\": \"user\",\r\n    \"phone\": \"403-591-3604\",\r\n    \"city\": \"Tobytown\",\r\n    \"country\": \"Turkey\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6c6c4e26-ce1a-4577-bdff-e280b31d03b4",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "123"
            },
            {
              "key": "ETag",
              "value": "W/\"7b-5ZTGjP7CGpH0eqI7sobPdDIWm+g\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              91,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              77,
              73,
              83,
              83,
              73,
              78,
              71,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              44,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              73,
              83,
              95,
              69,
              77,
              80,
              84,
              89,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 14,
          "responseSize": 123
        },
        "id": "6d127aac-6bfa-4383-9d6d-f5e3924f8c07",
        "assertions": [
          {
            "assertion": "it should NOT POST a user without name",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "effb4f5e-e81b-459d-8030-a8c36b0da4b1",
          "length": 52,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "990f7ce0-d3ce-4931-a2b7-58816cf96ad6"
        },
        "item": {
          "_": {
            "postman_id": "72667c94-8a19-4afd-b1ca-73ea1c58decf"
          },
          "id": "72667c94-8a19-4afd-b1ca-73ea1c58decf",
          "name": "/users",
          "request": {
            "description": {
              "content": "Admin uspesno kreira usera, ciji ID cuvamo za napredne api pozive.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "72066ae0-5d9b-43b1-a90b-c74895bd5dd9",
                "type": "text/javascript",
                "exec": [
                  "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "let email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                  "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "let role = 'user';\r",
                  "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                  "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                  "\r",
                  "pm.variables.set(\"name\", name);\r",
                  "pm.variables.set(\"email\", email);\r",
                  "pm.variables.set(\"password\", password);\r",
                  "pm.variables.set(\"role\", role);\r",
                  "pm.variables.set(\"phone\", phone);\r",
                  "pm.variables.set(\"city\", city);\r",
                  "pm.variables.set(\"country\", country);"
                ],
                "_lastExecutionId": "423afb2f-fd52-4059-8d7b-1dabae2811b8"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d938f60b-ee2b-47f5-8c3b-022b4e9e2649",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should POST user`, () => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] Some property is missing`).that.includes.all.keys(['_id', 'name', 'email', 'verification']);\r",
                  "})\r",
                  "pm.environment.set('anotherUserId', response._id);\r",
                  "pm.environment.set('anotherUserEmail', response.email);\r",
                  ""
                ],
                "_lastExecutionId": "a626d383-cd9e-4cb0-a49c-753adc970738"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Admin uspesno kreira usera, ciji ID cuvamo za napredne api pozive.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "32df0b81-172f-4d30-814c-45bfd3e11d02",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 221,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Donny\",\r\n    \"email\": \"Henry.Schuster19@hotmail.com\",\r\n    \"password\": \"0jjYVi_dSfIpOEm\",\r\n    \"role\": \"user\",\r\n    \"phone\": \"815-364-8185\",\r\n    \"city\": \"North Danialfort\",\r\n    \"country\": \"Guadeloupe\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b04b5732-f276-4409-8252-88744d123182",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "323"
            },
            {
              "key": "ETag",
              "value": "W/\"143-0aPK2jpf0eWnNezhhx69UwOVELQ\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              50,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              99,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              68,
              111,
              110,
              110,
              121,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              104,
              101,
              110,
              114,
              121,
              46,
              115,
              99,
              104,
              117,
              115,
              116,
              101,
              114,
              49,
              57,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              56,
              49,
              53,
              45,
              51,
              54,
              52,
              45,
              56,
              49,
              56,
              53,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              78,
              111,
              114,
              116,
              104,
              32,
              68,
              97,
              110,
              105,
              97,
              108,
              102,
              111,
              114,
              116,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              71,
              117,
              97,
              100,
              101,
              108,
              111,
              117,
              112,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              55,
              49,
              98,
              100,
              57,
              54,
              50,
              45,
              53,
              57,
              97,
              97,
              45,
              52,
              97,
              50,
              55,
              45,
              57,
              100,
              97,
              100,
              45,
              102,
              57,
              100,
              50,
              52,
              51,
              99,
              52,
              98,
              49,
              99,
              102,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              55,
              57,
              53,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              55,
              57,
              53,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 18,
          "responseSize": 323
        },
        "id": "72667c94-8a19-4afd-b1ca-73ea1c58decf",
        "assertions": [
          {
            "assertion": "it should POST user",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4f8ad66d-ed7e-4195-bd75-d0b4049ab765",
          "length": 52,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "16ef56db-8d30-4fa2-a815-e07880fbdc00"
        },
        "item": {
          "_": {
            "postman_id": "4d47f136-1d75-44f8-8c37-6cfc49afd526"
          },
          "id": "4d47f136-1d75-44f8-8c37-6cfc49afd526",
          "name": "/users",
          "request": {
            "description": {
              "content": "Salje se admin token.\r\nSalje se user sa emailom koji vec postoji u bazi.\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{existingEmail}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a06d444f-9ccf-4fc3-bb23-b1dacfbebe0e",
                "type": "text/javascript",
                "exec": [
                  "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "let existingEmail = pm.variables.replaceIn('{{anotherUserEmail}}');\r",
                  "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "let role = 'user';\r",
                  "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                  "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                  "\r",
                  "pm.variables.set(\"name\", name);\r",
                  "pm.variables.set(\"existingEmail\", existingEmail);\r",
                  "pm.variables.set(\"password\", password);\r",
                  "pm.variables.set(\"role\", role);\r",
                  "pm.variables.set(\"phone\", phone);\r",
                  "pm.variables.set(\"city\", city);\r",
                  "pm.variables.set(\"country\", country);"
                ],
                "_lastExecutionId": "a2e54fd4-2a06-46d8-b4a0-27264705e63c"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "76d6d4b2-eded-4766-8161-4e51c7ad1f87",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT POST a user with email that already exists`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');\r",
                  "    pm.expect(response.errors.msg, `[ERROR] wrong error message`).to.be.equal('EMAIL_ALREADY_EXISTS');\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "85afeae4-a628-433a-a035-623f9c363348"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Salje se admin token.\r\nSalje se user sa emailom koji vec postoji u bazi.\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6b95c830-7ede-418d-b5b5-03e75d894ad1",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 213,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Maxie\",\r\n    \"email\": \"henry.schuster19@hotmail.com\",\r\n    \"password\": \"gQM4CO8usV1vvH1\",\r\n    \"role\": \"user\",\r\n    \"phone\": \"327-694-0325\",\r\n    \"city\": \"Jeraldburgh\",\r\n    \"country\": \"Algeria\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3db02444-3c07-47d8-a937-e7b867299e5e",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "ETag",
              "value": "W/\"29-UWzmy2PHGgyraQbu1dIsKvHUWZA\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              69,
              77,
              65,
              73,
              76,
              95,
              65,
              76,
              82,
              69,
              65,
              68,
              89,
              95,
              69,
              88,
              73,
              83,
              84,
              83,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 41
        },
        "id": "4d47f136-1d75-44f8-8c37-6cfc49afd526",
        "assertions": [
          {
            "assertion": "it should NOT POST a user with email that already exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ded4e976-4bbc-4fe4-9aa5-556f6416fd4f",
          "length": 52,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "11a2029b-e7d4-4f22-aeaa-7130d698dc52"
        },
        "item": {
          "_": {
            "postman_id": "a7197002-5ce5-4f40-986d-e1d03b0269af"
          },
          "id": "a7197002-5ce5-4f40-986d-e1d03b0269af",
          "name": "/users",
          "request": {
            "description": {
              "content": "Pokusj kreiranja usera sa nevalidnom rolom.\r\nValidne role su “admin” i “user”.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"role\": \"{{invalidRole}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "0a9250b6-c291-48bf-bcdd-3b617b965e20",
                "type": "text/javascript",
                "exec": [
                  "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "let email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                  "let password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "let invalidRole = pm.variables.replaceIn('{{$randomIngverb}}');\r",
                  "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                  "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                  "\r",
                  "pm.variables.set(\"name\", name);\r",
                  "pm.variables.set(\"email\", email);\r",
                  "pm.variables.set(\"password\", password);\r",
                  "pm.variables.set(\"invalidRole\", invalidRole);\r",
                  "pm.variables.set(\"phone\", phone);\r",
                  "pm.variables.set(\"city\", city);\r",
                  "pm.variables.set(\"country\", country);"
                ],
                "_lastExecutionId": "ffdabb63-e20a-4d4e-9b99-e4087da4e38b"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "aac5fbdc-a7f4-4fa6-b123-8db370465f1d",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT POST a user with not known role`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');    \r",
                  "});"
                ],
                "_lastExecutionId": "50ef57e1-e64b-4e26-824a-641f800f66a6"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Pokusj kreiranja usera sa nevalidnom rolom.\r\nValidne role su “admin” i “user”.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "447df448-8222-4be5-bd83-93a7ca71b484",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 211,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Lina\",\r\n    \"email\": \"Lionel_Terry@gmail.com\",\r\n    \"password\": \"oCsy3i030W9ZhmI\",\r\n    \"role\": \"copying\",\r\n    \"phone\": \"391-530-9315\",\r\n    \"city\": \"North Eldora\",\r\n    \"country\": \"Colombia\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "12d90e6c-0333-44db-a743-d78b37b6cef0",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "104"
            },
            {
              "key": "ETag",
              "value": "W/\"68-uRYDg8PA5FpVReZb2aj/BTtnYjo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:34 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              91,
              123,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              99,
              111,
              112,
              121,
              105,
              110,
              103,
              34,
              44,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              85,
              83,
              69,
              82,
              95,
              78,
              79,
              84,
              95,
              73,
              78,
              95,
              75,
              78,
              79,
              87,
              78,
              95,
              82,
              79,
              76,
              69,
              34,
              44,
              34,
              112,
              97,
              114,
              97,
              109,
              34,
              58,
              34,
              114,
              111,
              108,
              101,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              111,
              100,
              121,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 104
        },
        "id": "a7197002-5ce5-4f40-986d-e1d03b0269af",
        "assertions": [
          {
            "assertion": "it should NOT POST a user with not known role",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e6132268-587e-4b29-9c22-824b32de1fa4",
          "length": 52,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2d03d7ba-528a-42af-b021-f02006da04f1"
        },
        "item": {
          "_": {
            "postman_id": "06c54bfa-1232-4c3f-b95a-0c6f75bcc5cd"
          },
          "id": "06c54bfa-1232-4c3f-b95a-0c6f75bcc5cd",
          "name": "/users/{{id}}",
          "request": {
            "description": {
              "content": "Salje se admin token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4e0822e5-114c-4ea5-afa6-d974a240a7e2",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id','{{anotherUserId}}');"
                ],
                "_lastExecutionId": "7531faed-72dd-4da5-92eb-3e474b6f8dae"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a70ab811-5152-49ff-a2bb-e964e3a70e5e",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "let id = pm.environment.get('anotherUserId');\r",
                  "\r",
                  "pm.test(`it should GET a user by the given id`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'name' property is missing`).to.haveOwnProperty('name');\r",
                  "    pm.expect(response, `[ERROR] '_id' property is missing`).to.haveOwnProperty('_id').to.be.equal(id);\r",
                  "});\r",
                  "\r",
                  "let anotherUserData = JSON.stringify(response);\r",
                  "pm.environment.set('anotherUserData', anotherUserData);"
                ],
                "_lastExecutionId": "c41cab03-7783-4f9c-be51-b0f5bed2c2a6"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Salje se admin token.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users",
              "5fbc36a20bcf1811a06559cc"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ccea572c-4867-4390-8367-3680198b4017",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c3fa3dd5-f28f-4db2-890e-fccf87aa0f3f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "323"
            },
            {
              "key": "ETag",
              "value": "W/\"143-0aPK2jpf0eWnNezhhx69UwOVELQ\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:35 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              50,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              99,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              68,
              111,
              110,
              110,
              121,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              104,
              101,
              110,
              114,
              121,
              46,
              115,
              99,
              104,
              117,
              115,
              116,
              101,
              114,
              49,
              57,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              56,
              49,
              53,
              45,
              51,
              54,
              52,
              45,
              56,
              49,
              56,
              53,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              78,
              111,
              114,
              116,
              104,
              32,
              68,
              97,
              110,
              105,
              97,
              108,
              102,
              111,
              114,
              116,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              71,
              117,
              97,
              100,
              101,
              108,
              111,
              117,
              112,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              55,
              49,
              98,
              100,
              57,
              54,
              50,
              45,
              53,
              57,
              97,
              97,
              45,
              52,
              97,
              50,
              55,
              45,
              57,
              100,
              97,
              100,
              45,
              102,
              57,
              100,
              50,
              52,
              51,
              99,
              52,
              98,
              49,
              99,
              102,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              55,
              57,
              53,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              55,
              57,
              53,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 323
        },
        "id": "06c54bfa-1232-4c3f-b95a-0c6f75bcc5cd",
        "assertions": [
          {
            "assertion": "it should GET a user by the given id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ff605ab5-fcbf-4e74-a86a-6013ffa3908d",
          "length": 52,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4a26b47c-3b30-4f28-bc90-6488a59964d4"
        },
        "item": {
          "_": {
            "postman_id": "3d7f3818-e57d-41a3-bc4b-dcef51708f8e"
          },
          "id": "3d7f3818-e57d-41a3-bc4b-dcef51708f8e",
          "name": "/users/{{id}}",
          "request": {
            "description": {
              "content": "Neuspesan pokusaj za update usera od strane admina.\r\nSalje se novo ime za usera i novi email koji ne postoji u bazi.\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{newUserName}}\",\r\n    \"email\": \"{{unrecordedEmail}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "714a4213-6522-4caf-a9e2-785af60aba75",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', '{{anotherUserId}}');\r",
                  "//-------\r",
                  "\r",
                  "let fullName = pm.variables.replaceIn('{{$randomFullName}}');\r",
                  "let randomUserName = pm.variables.replaceIn('{{$randomUserName}}');\r",
                  "let randomDomainName = pm.variables.replaceIn('{{$randomDomainName}}');\r",
                  "let unrecordedEmail = randomUserName + '@' + randomDomainName;\r",
                  "\r",
                  "pm.environment.get(\"variable_key\");\r",
                  "pm.variables.set('newUserName', fullName);\r",
                  "pm.variables.set('unrecordedEmail', unrecordedEmail);\r",
                  "//------\r",
                  "\r",
                  "let user = pm.environment.get('anotherUserData');\r",
                  "let anotherUserData = JSON.parse(user);\r",
                  "\r",
                  "pm.variables.set(\"role\", anotherUserData.role);\r",
                  "pm.variables.set(\"phone\", anotherUserData.phone);\r",
                  "pm.variables.set(\"city\", anotherUserData.city);\r",
                  "pm.variables.set(\"country\", anotherUserData.country);\r",
                  "//------\r",
                  "\r",
                  "pm.environment.set('anotherUserEmail', unrecordedEmail);\r",
                  "pm.environment.set('anotherUserName', fullName);"
                ],
                "_lastExecutionId": "fc7f22d0-81c4-4d4d-9298-37fafaee9287"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "43e9e0dc-8000-4c86-95b3-56bf610c03bb",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "let anotherUserEmail = pm.environment.get('anotherUserEmail');\r",
                  "let anotherUserId = pm.environment.get('anotherUserId');\r",
                  "let anotherUserName = pm.environment.get('anotherUserName');\r",
                  "\r",
                  "pm.test(`it should UPDATE a user given the id`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'name' property is missing`).to.haveOwnProperty('name').to.be.equal(anotherUserName);\r",
                  "    pm.expect(response, `[ERROR] '_id' property is missing`).to.haveOwnProperty('_id').to.be.equal(anotherUserId);\r",
                  "    pm.expect(response, `[ERROR] 'email' property is missing`).to.haveOwnProperty('email').to.be.equal((anotherUserEmail).toLowerCase());\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "e1fbb284-5651-4f68-a88b-c7ef87ad1e84"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Neuspesan pokusaj za update usera od strane admina.\r\nSalje se novo ime za usera i novi email koji ne postoji u bazi.\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users",
              "5fbc36a20bcf1811a06559cc"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "549f04ba-bf87-433a-a411-cb7250b0aaf5",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 189,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Miss Sarah Wolf\",\r\n    \"email\": \"Mario.Beatty@skyla.org\",\r\n    \"role\": \"user\",\r\n    \"phone\": \"815-364-8185\",\r\n    \"city\": \"North Danialfort\",\r\n    \"country\": \"Guadeloupe\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "17d36618-6d59-49a5-ab16-002a2c19bf27",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "327"
            },
            {
              "key": "ETag",
              "value": "W/\"147-JWH/LuvuUuO5jjl8eVW6vjhnBqk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:35 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              102,
              98,
              99,
              51,
              54,
              97,
              50,
              48,
              98,
              99,
              102,
              49,
              56,
              49,
              49,
              97,
              48,
              54,
              53,
              53,
              57,
              99,
              99,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              105,
              115,
              115,
              32,
              83,
              97,
              114,
              97,
              104,
              32,
              87,
              111,
              108,
              102,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              109,
              97,
              114,
              105,
              111,
              46,
              98,
              101,
              97,
              116,
              116,
              121,
              64,
              115,
              107,
              121,
              108,
              97,
              46,
              111,
              114,
              103,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              56,
              49,
              53,
              45,
              51,
              54,
              52,
              45,
              56,
              49,
              56,
              53,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              78,
              111,
              114,
              116,
              104,
              32,
              68,
              97,
              110,
              105,
              97,
              108,
              102,
              111,
              114,
              116,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              71,
              117,
              97,
              100,
              101,
              108,
              111,
              117,
              112,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              98,
              55,
              49,
              98,
              100,
              57,
              54,
              50,
              45,
              53,
              57,
              97,
              97,
              45,
              52,
              97,
              50,
              55,
              45,
              57,
              100,
              97,
              100,
              45,
              102,
              57,
              100,
              50,
              52,
              51,
              99,
              52,
              98,
              49,
              99,
              102,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              52,
              46,
              55,
              57,
              53,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              51,
              84,
              50,
              50,
              58,
              50,
              52,
              58,
              51,
              53,
              46,
              49,
              56,
              51,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 327
        },
        "id": "3d7f3818-e57d-41a3-bc4b-dcef51708f8e",
        "assertions": [
          {
            "assertion": "it should UPDATE a user given the id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "63c36a12-5e34-43eb-8606-24e77c0ff6a0",
          "length": 52,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6052da59-0747-43a0-90d4-8944bd6df87b"
        },
        "item": {
          "_": {
            "postman_id": "cf279553-32f7-43b9-bd29-19d1983e79fe"
          },
          "id": "cf279553-32f7-43b9-bd29-19d1983e79fe",
          "name": "/users/{{id}}",
          "request": {
            "description": {
              "content": "Neuspesan pokusaj update user-a od strane admina.\r\nSalje se email korisnka koji vec postoji u bazi\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{existingEmail}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bd9c9516-5ab5-422b-80de-ae702a6d4966",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', '{{anotherUserId}}');\r",
                  "\r",
                  "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "let existingEmail = 'admin@admin.com';\r",
                  "let role = 'user';\r",
                  "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                  "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                  "\r",
                  "pm.variables.set(\"name\", name);\r",
                  "pm.variables.set(\"existingEmail\", existingEmail);\r",
                  "pm.variables.set(\"role\", role);\r",
                  "pm.variables.set(\"phone\", phone);\r",
                  "pm.variables.set(\"city\", city);\r",
                  "pm.variables.set(\"country\", country);"
                ],
                "_lastExecutionId": "26fb3409-1ee0-45d2-98d9-323e4772dac7"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a38d4044-6283-43f4-aae7-daa86eddcb18",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT UPDATE a user with email that already exists (email: admin@admin.com)`, () => {\r",
                  "    pm.response.to.have.status(422);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');\r",
                  "    pm.expect(response.errors.msg, `[ERROR] Wrong message!`).to.be.equal('EMAIL_ALREADY_EXISTS');\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "6fea99bb-56b3-479e-965e-cb19932cf02b"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Neuspesan pokusaj update user-a od strane admina.\r\nSalje se email korisnka koji vec postoji u bazi\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users",
              "5fbc36a20bcf1811a06559cc"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9dc936ab-3ea0-4709-86b4-4181f46008e3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 165,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Dandre\",\r\n    \"email\": \"admin@admin.com\",\r\n    \"role\": \"user\",\r\n    \"phone\": \"423-212-5620\",\r\n    \"city\": \"Lake Elliot\",\r\n    \"country\": \"Nigeria\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "11d9c583-0fa2-46ef-aaf9-f12fa5f4921c",
          "status": "Unprocessable Entity",
          "code": 422,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "ETag",
              "value": "W/\"29-UWzmy2PHGgyraQbu1dIsKvHUWZA\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:35 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              69,
              77,
              65,
              73,
              76,
              95,
              65,
              76,
              82,
              69,
              65,
              68,
              89,
              95,
              69,
              88,
              73,
              83,
              84,
              83,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 41
        },
        "id": "cf279553-32f7-43b9-bd29-19d1983e79fe",
        "assertions": [
          {
            "assertion": "it should NOT UPDATE a user with email that already exists (email: admin@admin.com)",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "89de0328-d1ea-4a3e-aa3b-7fc98a91bc6d",
          "length": 52,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "154462ab-70ca-473c-93b3-6c36bb7fb59d"
        },
        "item": {
          "_": {
            "postman_id": "a6a807e2-6eb6-45b7-8445-8879161a72c5"
          },
          "id": "a6a807e2-6eb6-45b7-8445-8879161a72c5",
          "name": "/users/{{id}}",
          "request": {
            "description": {
              "content": "Neuspesan pokusaj usera da update drugog usera.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{existingEmail}}\",\r\n    \"role\": \"{{role}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"country\": \"{{country}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{userToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d0bedf5e-e4de-40e8-ace0-18441dd6366a",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', '{{anotherUserId}}');\r",
                  "\r",
                  "let name = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "let existingEmail = 'admin@admin.com';\r",
                  "let role = 'user';\r",
                  "let phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                  "let city = pm.variables.replaceIn('{{$randomCity}}');\r",
                  "let country = pm.variables.replaceIn('{{$randomCountry}}');\r",
                  "\r",
                  "pm.variables.set(\"name\", name);\r",
                  "pm.variables.set(\"existingEmail\", existingEmail);\r",
                  "pm.variables.set(\"role\", role);\r",
                  "pm.variables.set(\"phone\", phone);\r",
                  "pm.variables.set(\"city\", city);\r",
                  "pm.variables.set(\"country\", country);"
                ],
                "_lastExecutionId": "2cc897c1-4afa-44ff-a046-4ef558a08279"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d0174e76-2188-4fe7-9f48-eee2b1219754",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should NOT UPDATE another user if not an admin`, () => {\r",
                  "    pm.response.to.have.status(401);\r",
                  "    pm.response.to.be.unauthorized;\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'errors' property is missing`).to.haveOwnProperty('errors');\r",
                  "    pm.expect(response.errors.msg, `[ERROR] Wrong message!`).to.be.equal('UNAUTHORIZED');\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "b5a1306f-cad4-412b-b421-34170a84f8dd"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Neuspesan pokusaj usera da update drugog usera.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users",
              "5fbc36a20bcf1811a06559cc"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81fad4e0a7b61fd3662211208ff4eb145f96cec7ec7ccda67e28c94928f6433224a5f12ea7f1d6717a7e9bd2154b2a0c5f17e114baaed2ade9ac0b858e397f3f8e666825e338d94a4687f55c96e6829715723db906741b042375a135dbe3e2ab842a231a63f62046d19bed1188d365bd91973943b7fc1f89956af1b3818a1c97ade",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0e65e01d-38ba-42a5-91f5-7878bb1b36cc",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 164,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Emely\",\r\n    \"email\": \"admin@admin.com\",\r\n    \"role\": \"user\",\r\n    \"phone\": \"487-235-2189\",\r\n    \"city\": \"Bayertown\",\r\n    \"country\": \"Argentina\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbfc15ef269df49302415d64fec3df9e81fad4e0a7b61fd3662211208ff4eb145f96cec7ec7ccda67e28c94928f6433224a5f12ea7f1d6717a7e9bd2154b2a0c5f17e114baaed2ade9ac0b858e397f3f8e666825e338d94a4687f55c96e6829715723db906741b042375a135dbe3e2ab842a231a63f62046d19bed1188d365bd91973943b7fc1f89956af1b3818a1c97ade",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "025d8d4d-0e61-438e-b15e-d6dcfb5efda2",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "33"
            },
            {
              "key": "ETag",
              "value": "W/\"21-pRwS9XRxcF6bDFOulPDAt2xErqc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:35 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              85,
              78,
              65,
              85,
              84,
              72,
              79,
              82,
              73,
              90,
              69,
              68,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 8,
          "responseSize": 33
        },
        "id": "a6a807e2-6eb6-45b7-8445-8879161a72c5",
        "assertions": [
          {
            "assertion": "it should NOT UPDATE another user if not an admin",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a89c45d3-96fc-42c6-8058-471cd6d2b739",
          "length": 52,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bc34810b-739c-4148-afe4-68bb3df62b26"
        },
        "item": {
          "_": {
            "postman_id": "d84fc14c-8d1b-478d-9a76-ff7369a91a14"
          },
          "id": "d84fc14c-8d1b-478d-9a76-ff7369a91a14",
          "name": "/delete/{{id}}",
          "request": {
            "description": {
              "content": "Brisanje korisnika od strane admina;\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "dfe22761-c91b-4315-acb5-dd3daa9bfa19",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', '{{anotherUserId}}');"
                ],
                "_lastExecutionId": "c910e866-24b7-484e-b336-5df78c588796"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "90fd6079-6225-4392-a4f1-9795588433ac",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should DELETE a user given the id`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'msg' property is missing`).to.haveOwnProperty('msg');\r",
                  "    pm.expect(response.msg, `[ERROR] Wrong message!`).to.be.equal('DELETED');\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "dd93eaa9-dc04-48e1-9b90-9c6341b01b96"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Brisanje korisnika od strane admina;\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users",
              "5fbc36a20bcf1811a06559cc"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b4ad71bb-5dd5-45c5-ab15-12acf23bc26a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "28637015-c716-447b-9812-04591c7d593d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "ETag",
              "value": "W/\"11-1TLYp3hRJ+LTeGYiz9MECJYsCSc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:35 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              68,
              69,
              76,
              69,
              84,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 17
        },
        "id": "d84fc14c-8d1b-478d-9a76-ff7369a91a14",
        "assertions": [
          {
            "assertion": "it should DELETE a user given the id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9be5ea65-bc4b-4cd7-8b2a-7ac56fe9a39f",
          "length": 52,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f9aac54e-ca6f-4cdb-894b-43423ae635af"
        },
        "item": {
          "_": {
            "postman_id": "acb00778-1ed7-47eb-beea-011ab403606e"
          },
          "id": "acb00778-1ed7-47eb-beea-011ab403606e",
          "name": "/delete/{{id}}",
          "request": {
            "description": {
              "content": "Brisanje korisnika od strane admina;\r\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users",
                "{{id}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "72a79f35-55ef-44cd-adea-7300e65091d7",
                "type": "text/javascript",
                "exec": [
                  "pm.variables.set('id', '{{userId}}');"
                ],
                "_lastExecutionId": "df2cf8ff-9dcc-4285-b049-9bc19d975236"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "83e60acf-21e2-4447-9ba1-334b9c357bf6",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`it should DELETE a user given the id`, () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "    pm.expect(response, `[ERROR] Response in not an OBJECT`).to.be.an('object');\r",
                  "    pm.expect(response, `[ERROR] 'msg' property is missing`).to.haveOwnProperty('msg');\r",
                  "    pm.expect(response.msg, `[ERROR] Wrong message!`).to.be.equal('DELETED');\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "cc9e3bad-9e06-425f-8a64-d13872341cb7"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Brisanje korisnika od strane admina;\r\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users",
              "5fbc36a20bcf1811a06559ca"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5552258f-cb8f-4b1e-b546-1a8173dd1919",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "911ead43-b690-4807-aa76-b272d2cfb8bd",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "ETag",
              "value": "W/\"11-1TLYp3hRJ+LTeGYiz9MECJYsCSc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:35 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              115,
              103,
              34,
              58,
              34,
              68,
              69,
              76,
              69,
              84,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 17
        },
        "id": "acb00778-1ed7-47eb-beea-011ab403606e",
        "assertions": [
          {
            "assertion": "it should DELETE a user given the id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "af79ccee-9347-455b-ad5c-989a21384b57",
          "length": 52,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2fea9732-60d4-4ae3-a9cd-07c5779ac8ab"
        },
        "item": {
          "_": {
            "postman_id": "35124e5f-25f1-41f5-81e7-e6206a08c373"
          },
          "id": "35124e5f-25f1-41f5-81e7-e6206a08c373",
          "name": "/users?filter=user&fields=role",
          "request": {
            "description": {
              "content": "Filtriranje usera.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "key": "filter",
                  "value": "user"
                },
                {
                  "key": "fields",
                  "value": "role"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "string",
                  "value": "{{adminToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7ae7f63e-39b4-49c1-95f4-112464567e5f",
                "type": "text/javascript",
                "exec": [
                  "let response = pm.response.json();\r",
                  "\r",
                  "pm.test(`Listing all users`, () => {\r",
                  "    response.docs.forEach(item => pm.expect(item.role, `[ERROR] Wrong role!`).to.be.equal('user'));\r",
                  "});"
                ],
                "_lastExecutionId": "c2ca31fe-17bb-49c8-9365-f4e417354e39"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "description": {
            "content": "Filtriranje usera.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "filter",
                "value": "user"
              },
              {
                "key": "fields",
                "value": "role"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.8",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "780b6ccf-9c4d-49c2-beba-1ff761421756",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "4fcf3f78138f61fe6273dbd1d6c05f15e30496d7a085919bbcdcf11f271dcecfb564cd09ae8877ede8f0b29ede2a1cbf04de20a3b81e8b5f942704e99706889e94b7594bf85ca12dee93dc0970c79a62e91035dbfaf503dbcefdb1a49eae198379d53d447c26af0be9a0b66154981d6635ade079443226a265290899ef2b394fadc5047e4d33f4d4c3bd6630e8373286cb145670197c6262e19c10f54a450c847b4200b0872dab490090f2616ef9f23b01db11fe885dfc2bfe271c90c892108d",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d5563897-b1d1-4e66-8219-0a1ce32085c6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "Expect-CT",
              "value": "max-age=0"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15552000; includeSubDomains"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "516"
            },
            {
              "key": "ETag",
              "value": "W/\"204-jlNUuB7tHyQ+X0WoTZZ95rH58R0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Date",
              "value": "Mon, 23 Nov 2020 22:24:35 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              111,
              99,
              115,
              34,
              58,
              91,
              123,
              34,
              95,
              105,
              100,
              34,
              58,
              34,
              53,
              97,
              97,
              49,
              99,
              50,
              99,
              51,
              53,
              101,
              102,
              55,
              97,
              52,
              101,
              57,
              55,
              98,
              53,
              101,
              57,
              57,
              53,
              98,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              105,
              109,
              112,
              108,
              101,
              32,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              64,
              117,
              115,
              101,
              114,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              100,
              54,
              101,
              48,
              55,
              50,
              99,
              45,
              48,
              101,
              97,
              102,
              45,
              52,
              50,
              51,
              57,
              45,
              98,
              98,
              53,
              101,
              45,
              52,
              57,
              53,
              101,
              54,
              52,
              56,
              54,
              49,
              52,
              56,
              100,
              34,
              44,
              34,
              99,
              105,
              116,
              121,
              34,
              58,
              34,
              66,
              117,
              99,
              97,
              114,
              97,
              109,
              97,
              110,
              103,
              97,
              34,
              44,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              34,
              67,
              111,
              108,
              111,
              109,
              98,
              105,
              97,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              49,
              50,
              51,
              49,
              50,
              51,
              34,
              44,
              34,
              117,
              114,
              108,
              84,
              119,
              105,
              116,
              116,
              101,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              114,
              111,
              100,
              103,
              101,
              114,
              46,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              117,
              114,
              108,
              71,
              105,
              116,
              72,
              117,
              98,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              97,
              117,
              114,
              101,
              108,
              105,
              101,
              46,
              98,
              105,
              122,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              49,
              57,
              45,
              49,
              50,
              45,
              48,
              53,
              84,
              48,
              51,
              58,
              49,
              56,
              58,
              51,
              49,
              46,
              54,
              52,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              48,
              45,
              49,
              49,
              45,
              50,
              49,
              84,
              50,
              49,
              58,
              53,
              53,
              58,
              49,
              50,
              46,
              49,
              52,
              56,
              90,
              34,
              125,
              93,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              68,
              111,
              99,
              115,
              34,
              58,
              49,
              44,
              34,
              108,
              105,
              109,
              105,
              116,
              34,
              58,
              53,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              80,
              97,
              103,
              101,
              115,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              112,
              97,
              103,
              105,
              110,
              103,
              67,
              111,
              117,
              110,
              116,
              101,
              114,
              34,
              58,
              49,
              44,
              34,
              104,
              97,
              115,
              80,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              104,
              97,
              115,
              78,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              112,
              114,
              101,
              118,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              110,
              101,
              120,
              116,
              80,
              97,
              103,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 516
        },
        "id": "35124e5f-25f1-41f5-81e7-e6206a08c373",
        "assertions": [
          {
            "assertion": "Listing all users",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 13678
    },
    "failures": [],
    "error": null
  }
}